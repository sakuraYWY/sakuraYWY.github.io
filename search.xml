<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>抖音电商带货</title>
      <link href="/2024/02/20/dou-yin-dian-shang-dai-huo/"/>
      <url>/2024/02/20/dou-yin-dian-shang-dai-huo/</url>
      
        <content type="html"><![CDATA[<p>1.自然滤镜3-5个，程度调为1<br>2.添加文字，放大，透明度调为1<br>3.添加贴纸，加满，透明度调整为1，自定义添加自拍照，透明度为1<br>4.使用消除笔，小范围擦除一些对画面无影响的地方<br>5.涂鸦笔，不同的涂鸦笔，透明度调整为1<br>6.背景虚化<br>7.调色</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue项目实战</title>
      <link href="/2024/02/18/vue-xiang-mu-shi-zhan/"/>
      <url>/2024/02/18/vue-xiang-mu-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h3 id="reactive定义响应式数据"><a href="#reactive定义响应式数据" class="headerlink" title="reactive定义响应式数据"></a>reactive定义响应式数据</h3><ul><li>是一个函数，用来定义一个复杂数据类型，成为响应式数据</li><li>通常用来定义响应式的对象数据<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>name:</span><span class="template-variable">&#123;&#123;<span class="name">obj.name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateName&quot;</span>&gt;</span>修改name<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 定义响应式对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> obj = <span class="title function_">reactive</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">name</span>: <span class="string">&#x27;lisi&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">age</span>:<span class="number">20</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> <span class="title function_">updateName</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            obj.<span class="property">name</span> = <span class="string">&#x27;我是修改后的name&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是按钮..........&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            obj,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            updateName</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><h3 id="toRef函数"><a href="#toRef函数" class="headerlink" title="toRef函数"></a>toRef函数</h3><pre><code>toRef是函数，转换响应式对象中某个属性为单独响应式数据，并且跟原来是数据的值是关联的。例如上例中，只想访问响应式对象obj中name属性，而不需要age。</code></pre><p>通过对象结构出来的数据，不是响应式，需要使用toRef。</p><blockquote><p>使用场景：有一个响应式对象数据，但是模板中只需要使用其中一项数据</p></blockquote><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updataName&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; reactive, toRef &#125;<span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 定义响应式对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> obj = <span class="title function_">reactive</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">name</span>: <span class="string">&#x27;wangwu&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">age</span>:<span class="number">30</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1、转换**响应式对象**中**某个属性**为单独响应式数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> name = <span class="title function_">toRef</span>(obj,<span class="string">&#x27;name&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 修改name</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> <span class="title function_">updataName</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;update........&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="comment">// 2、toRef转换响应式数据包装成响应式数据，value是值存放的位置</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            name.<span class="property">value</span> = <span class="string">&#x27;我是修改后的name&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            name,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            updataName</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="toRefs函数"><a href="#toRefs函数" class="headerlink" title="toRefs函数"></a>toRefs函数</h3><p>转换响应式对象中所有属性为单独响应式数据，对象成为普通对象，并且值是相关的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;reactive,toRefs&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> obj = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">age</span>:<span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> obj2 = <span class="title function_">toRefs</span>(obj);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(obj2);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 解构之后重新赋值的是普通对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> obj3 = &#123; ...obj &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(obj3);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ref函数"><a href="#ref函数" class="headerlink" title="ref函数"></a>ref函数</h3><p>定义响应式数据：</p><ul><li>ref函数，常用于简单数据类型定义为响应式数据，其实也可以定义复杂数据类型的响应式数据，对于数据未知的情况下ref是最适用的。</li><li>在修改值，获取值的时候，需要.value</li><li>在模板中使用ref申明的响应式数据，可以省略.value，在js代码中修改ref声明的数据，需要加上.v<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>name:</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>修改name<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> name = <span class="title function_">ref</span>(<span class="string">&#x27;zhangsan&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> <span class="title function_">changeName</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            name.<span class="property">value</span> = <span class="string">&#x27;lisi&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            name,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            changeName</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p>setup()相当于beforeCreate和created<br>beforeMount变成onbeforeMount<br>mounted变成onMounted<br>beforeUpdate变成onbeforeUpdate<br>Updated变成onUpdated</p><p>reactive函数创建一个响应式对象<br>模板语法中需要使用data.属性来调用属性显示</p><h3 id="v-model双向绑定"><a href="#v-model双向绑定" class="headerlink" title="v-model双向绑定"></a>v-model双向绑定</h3><p>input：输入事件<br>blur：失去焦点<br>focus：获取焦点<br>change：内容更改</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>考研规划</title>
      <link href="/2024/01/18/kao-yan-gui-hua/"/>
      <url>/2024/01/18/kao-yan-gui-hua/</url>
      
        <content type="html"><![CDATA[<h4 id="1-2月-准备"><a href="#1-2月-准备" class="headerlink" title="1-2月 准备"></a>1-2月 准备</h4><ul><li>制定考研目标</li></ul><ol><li>确定专业和院校，看往年招生情况<br>专业排名<br>报考难度<br>地域环境<br>生活习惯</li><li>招生简章目录<br>招生人数<br>考试科目<br>专业课参考书</li></ol><ul><li>制定学习计划</li><li>制定复习计划</li><li>制定择校计划</li></ul><p>可以看一下英语和数学<br><strong>英语</strong>每天背单词，优先真题词汇<br>真题高频词&gt;真题低频词&gt;未考大纲词&gt;超纲词<br>可以按照每一篇文章每一个题目去划分，也可以按照词频去背。同步积累真题里面出现过的词组</p><p><strong>数学</strong>：看零基础教材</p><h4 id="3-6月-基础"><a href="#3-6月-基础" class="headerlink" title="3-6月  基础"></a>3-6月  基础</h4><p>买课买教材：一周内搞定，找各科历年真题</p><ul><li><p>英语</p></li><li><p>数学</p></li><li><p>政治<br>看题型</p></li><li><p>专业课<br>看出题角度</p></li></ul><p><strong>英语</strong>：单词+语法+阅读技巧+阅读真题练习</p><ol><li>每天背单词</li><li>两周学语法（高中那些）  每日长难句到12月份</li><li>阅读题目类型  阅读解题方法 刷10年前真题</li></ol><p><strong>专业课</strong>：速刷教材+做笔记  全面无死角<br>整理框架+理解概念</p><p><strong>数学</strong>：基础课视频+辅助刷题<br>（选课程时，一定要试听，适合我的才是最好的）</p><p><strong>政治</strong>：不要管</p><h4 id="7-8月-强化"><a href="#7-8月-强化" class="headerlink" title="7-8月  强化"></a>7-8月  强化</h4><ul><li><p>英语<br>单词+长难句+阅读真题练习不能停<br>重点是阅读，刷10-21年阅读真题</p></li><li><p>数学<br>大量刷题，特训<br>网课&#x2F;教材例题&gt;网课&#x2F;教材课后习题&gt;专门习题集题目</p></li><li><p>政治<br>暑假开始，每天半小时&#x2F;1小时</p></li><li><p>专业课<br>结合真题，划重点+理解概念+刷题<br><strong>目标院校真题</strong><br><strong>其他院校同专业真题</strong><br><strong>目标院校期末考题库</strong></p></li></ul><h4 id="9-11月-冲刺"><a href="#9-11月-冲刺" class="headerlink" title="9-11月 冲刺"></a>9-11月 冲刺</h4><p>9月预报名-&gt;10月报名-&gt;10月底确认<br>不要忘记报名！！<br>不要忘记缴费！！</p><p><strong>英语</strong>：阅读维持题感，开始写作和小三门，近3年真题模考<br>一周2篇阅读，维持题感</p><p>写作&gt;新题型&gt;翻译&gt;完型<br>最近3年真题作为模考题，完全按照考场的要求进行</p><p><strong>专业课</strong>：全面背书+刷真题&#x2F;习题</p><p><strong>数学</strong>：刷历年真题+模拟卷<br>10月初刷真题，至少20年<br>真题&gt;押题模拟卷</p><p><strong>政治</strong>：11月前一刷，11月后背选择题<br>肖1000+背诵手册<br>肖背诵手册+肖八</p><h4 id="12月-查缺补漏"><a href="#12月-查缺补漏" class="headerlink" title="12月 查缺补漏"></a>12月 查缺补漏</h4><p>预计21-22号初试，准考证提前一周打印<br>英语：背单词，阅读维持题感，写作训练<br>专业课：反复背重点，速刷教材全文<br>数学：继续刷模拟题（优先搞定真题）<br>政治：重点背肖四分析题<br>背分析题的答案素材，练习分析题答题的逻辑框架</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue入门</title>
      <link href="/2023/11/30/vue-ru-men/"/>
      <url>/2023/11/30/vue-ru-men/</url>
      
        <content type="html"><![CDATA[<h3 id="创建vue项目"><a href="#创建vue项目" class="headerlink" title="创建vue项目"></a>创建vue项目</h3><blockquote><p>npm init vue@latest</p></blockquote><ul><li>创建项目名称时，不要存在大写</li><li>是否添加TS? NO</li><li>JSX支持？NO</li><li>是否添加路由？NO</li><li>是否添加Pinia？NO</li><li>测试文件？NO</li></ul><h3 id="vue项目的目录结构"><a href="#vue项目的目录结构" class="headerlink" title="vue项目的目录结构"></a>vue项目的目录结构</h3><ul><li>.vscode       vscode工具的配置文件（可删除）</li><li>node_modules    vue项目的运行依赖文件</li><li>public           资源文件夹（浏览器图标）</li><li>src           源码文件夹</li><li>.gitignore    git忽略文件</li><li>index.html        入口html文件</li><li>package.json    信息描述文件</li><li>README.md     注释文件</li><li>vite.config.js   vue配置文件</li></ul><h3 id="vue模板语法"><a href="#vue模板语法" class="headerlink" title="vue模板语法"></a>vue模板语法</h3><p>vue使用一种基于html的模板语法，使我们能够声明式地将其组件实例的数据绑定到呈现的DOM上，所有的Vue模板都是语法层面合法的HTML,可以被符合规范的浏览器和HTN\ML解析器解析<br>一般创建完项目以后把component里面的东西删除掉，然后把APP.VUE里面对应的也删掉</p><h4 id="文本插值"><a href="#文本插值" class="headerlink" title="文本插值"></a>文本插值</h4><p>双大括号</p><h4 id="使用js表达式"><a href="#使用js表达式" class="headerlink" title="使用js表达式"></a>使用js表达式</h4><p>每个绑定仅支持单一表达式，也就是一段能够被求值的js代码，一个简单的判别方法是是否可以合法地写在return后面</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> </span><span class="template-variable">&#123;&#123;<span class="name">msg</span>&#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> </span><span class="template-variable">&#123;&#123; <span class="name">hh</span> &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> </span><span class="template-variable">&#123;&#123; <span class="name">number</span>+<span class="number">1</span> &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> </span><span class="template-variable">&#123;&#123; <span class="name">buer?</span><span class="string">&#x27;YES&#x27;</span>:<span class="string">&#x27;NO&#x27;</span> &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> </span><span class="template-variable">&#123;&#123; <span class="name">message.split</span>(<span class="name">&quot;&quot;</span>).reverse().join(<span class="name">&quot;,&quot;</span>) &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  data () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">msg</span>: <span class="string">&#x27;Welcome to Your Vue.js App&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">hh</span>: <span class="string">&#x27;123&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">number</span>:<span class="number">12</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">buer</span>:<span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">message</span>:<span class="string">&#x27;大家好&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="原始HTML"><a href="#原始HTML" class="headerlink" title="原始HTML"></a>原始HTML</h4><p>双大括号将会将数据插值为纯文本，而不是HTML.若想插入HTML,需要使用v-html指令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;rawhtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">rawhtml:&quot;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://hua.61.com&#x27;</span>&gt;</span>小花仙<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&quot;</span><br></pre></td></tr></table></figure><h4 id="属性绑定"><a href="#属性绑定" class="headerlink" title="属性绑定"></a>属性绑定</h4><ul><li>双大括号不能在HTML attributes中使用。想要响应式地绑定一个attribute，应该使用v-bind指令。</li><li>v-bind指令指示Vue将元素的id属性与组件的动态id属性保持一致。如果绑定的值是null或者undefined，那么该属性将会从渲染的元素上移除</li><li>简写：v-bind：可简写为：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;myclass&quot;</span>&gt;</span>helloword<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">myclass</span>: <span class="string">&quot;class1&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.class1</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-family</span>: <span class="string">&#x27;Times New Roman&#x27;</span>, Times, serif;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>布尔型属性<br>布尔型属性根据true&#x2F;false值来决定属性是否应该存在于该 元素上</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button <span class="symbol">:disabled=<span class="string">&quot;isdisabled&quot;</span>&gt;</span>测试&lt;/button&gt;</span><br><span class="line"><span class="symbol">isdisabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>-动态绑定多个值<br> 如果有像这样的一个包含多个属性的js对象<br> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind</span>=<span class="string">&quot;jsobject&quot;</span>&gt;</span>测试1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">myclass</span>: <span class="string">&quot;class1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">myid</span>: <span class="string">&quot;myid1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">isdisabled</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">jsobject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">class</span>: <span class="string">&quot;class1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">id</span>: <span class="string">&quot;myid1&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h3><p>在vue中，提供了条件渲染，这类似于js中的条件语句</p><ul><li>v-if<br>用于条件性地渲染一块内容，这块内容只会在指令的表达式返回真值时才被渲染。</li><li>v-else</li><li>v-else-if</li><li>v-show</li></ul><h4 id="v-if和v-show的区别"><a href="#v-if和v-show的区别" class="headerlink" title="v-if和v-show的区别"></a>v-if和v-show的区别</h4><ul><li>v-if是“真实的”按条件渲染，因为它确保了在切换时，条件区块内的事件监听器和子组件都会被销毁和重建。</li><li>v-if也是惰性的：如果在初次渲染时条件值为false，则不会做任何事。条件区块只有当条件首次变为true时才被渲染。</li><li>相比之下，v-show简单许多，元素无论初始条件如何，始终会被渲染，只有CSSdisplay属性会被切换<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>你能看见我吗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>那你看不见上面那个咯<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;A&#x27;&quot;</span>&gt;</span>渲染条件是A咯<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;B&#x27;&quot;</span>&gt;</span>渲染条件是B咯<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P</span> <span class="attr">v-else</span>&gt;</span>渲染条件是C咯<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>v-show的初始开销大，但切换开销小哦<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;  </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;Home&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">flag</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:<span class="string">&#x27;C&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>总的来说，v-if有更高的切换开销，而v-show有更高的初始渲染开销。因此，如果需要频繁切换，则使用v-show较好；如果在运行时绑定条件很少改变，则v-if会更合适</li></ul><h3 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h3><p>可以使用v-for指令基于一个数组来渲染一个列表。v-for指令的值需要使用item in items形式的特殊语法，其中items是源数据的数组，而item是迭代项的别名</p><h4 id="复杂数据"><a href="#复杂数据" class="headerlink" title="复杂数据"></a>复杂数据</h4><p>大多数情况，我们渲染的数据来源于网络，也就是json格式</p><p>v-for也支持使用可选的第二个参数表示当前项的位置索引</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in names&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">item</span>&#125;&#125;</span><span class="language-xml">-</span><span class="template-variable">&#123;&#123;<span class="name">index</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>注：in也可以用of替代</p></blockquote><h4 id="v-for与对象"><a href="#v-for与对象" class="headerlink" title="v-for与对象"></a>v-for与对象</h4><p>可以使用v-for来遍历一个对象的所有属性</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key,index) of userInfo &quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">value</span>&#125;&#125;</span><span class="language-xml">-</span><span class="template-variable">&#123;&#123;<span class="name">key</span>&#125;&#125;</span><span class="language-xml">-</span><span class="template-variable">&#123;&#123;<span class="name">index</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="通过key管理状态"><a href="#通过key管理状态" class="headerlink" title="通过key管理状态"></a>通过key管理状态</h3><p>vue默认按照“就地更新”的策略来更新通过v-for渲染的元素列表。当数据项的顺序改变时，Vue不会随之移动DOM元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。</p><p>为了给Vue一个提示，以便它可以跟踪每个节点的标识，从而重用和重新排序现有的元素，需要为每个元素对应的块提供一个唯一的key的属性</p><blockquote><p>注意：key在这里是通过一个v-bind绑定的特殊属性<br>推荐在任何可行的时候为v-for提供一个key的属性<br>key绑定的值期望是一个基础类型的值，例如字符串或number类型</p></blockquote><h4 id="key的来源"><a href="#key的来源" class="headerlink" title="key的来源"></a>key的来源</h4><p>请不要使用index作为key的值，我们要确保每一条数据的唯一索引不会发生变化</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in Object&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item of result&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item.title</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Object</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">age</span>:<span class="number">18</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">gender</span>:<span class="string">&#x27;男&#x27;</span> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">result</span>:[</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;aaa&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;bbb&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">133</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;rrr&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;b45&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">143</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;ttt&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;bfs&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h3><p>我们可以使用v-on指令（简写为@）来监听DOM事件，并在事件触发时执行对应的js。</p><blockquote><p>用法：v-on:click&#x3D;”methodName”或@click&#x3D;”handler”<br>事件处理器的值可以是</p></blockquote><ul><li>内联事件处理器：事件被触发时执行的内联js语句（与onclick类似）</li><li>方法事件处理器：一个指向组件上定义的方法的属性名或是路径</li></ul><h4 id="内联事件处理器"><a href="#内联事件处理器" class="headerlink" title="内联事件处理器"></a>内联事件处理器</h4><p>通常用于简单场景</p><h4 id="方法事件处理器"><a href="#方法事件处理器" class="headerlink" title="方法事件处理器"></a>方法事件处理器</h4><p>读取到data里面的数据的方案：this.count</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>方法事件处理器<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;Addcount&quot;</span>&gt;</span>点我加count<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">count</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Addcount</span>()&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">count</span>++</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="事件参数"><a href="#事件参数" class="headerlink" title="事件参数"></a>事件参数</h3><p>事件参数可以获取event对象和通过事件传递数据</p><h4 id="获取event对象"><a href="#获取event对象" class="headerlink" title="获取event对象"></a>获取event对象</h4><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>方法事件处理器<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;Addcount&quot;</span>&gt;</span>点我加count<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">count</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title class_">Addcount</span>(e)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">count</span>++;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              e.<span class="property">target</span>.<span class="property">innerHTML</span>=<span class="string">&quot;点击了&quot;</span>+<span class="variable language_">this</span>.<span class="property">count</span>+<span class="string">&quot;次&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="获取列表内容"><a href="#获取列表内容" class="headerlink" title="获取列表内容"></a>获取列表内容</h4><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件传参<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;getName(item)&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">names</span>:[<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title function_">getName</span>(<span class="params">item</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="传递参数过程中获取event"><a href="#传递参数过程中获取event" class="headerlink" title="传递参数过程中获取event"></a>传递参数过程中获取event</h4><p>在传递参数的同时加上$event</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>传递参数的同时获取event<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;getName(item ,$event)&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">names</span>:[<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title function_">getName</span>(<span class="params">item,e</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">innerHTML</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><p>在处理事件时调用event.preventDefault()或event.stopPropagation()是很常见的。尽管可以在方法内调用，但如果方法更能专注于数据逻辑而不用去处理DOM事件的细节会更好</p><p>为解决这一问题，Vue为v-on提供了事件修饰符，常有以下几个：</p><ul><li>.stop 阻止事件冒泡</li><li>.prevent 阻止默认事件</li><li>.once 事件只会被触发一次</li><li>.enter 回车按键触发</li><li>……</li></ul><h4 id="阻止默认事件"><a href="#阻止默认事件" class="headerlink" title="阻止默认事件"></a>阻止默认事件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;hand&quot;</span> <span class="attr">v-html</span>=<span class="string">&quot;rawhtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">rawhtml</span>:<span class="string">&quot;&lt;a href=&#x27;https://www.baidu.com&#x27;&gt;百度&lt;/a&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="title function_">hand</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="阻止事件冒泡"><a href="#阻止事件冒泡" class="headerlink" title="阻止事件冒泡"></a>阻止事件冒泡</h4>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;hand1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click.stop</span>=<span class="string">&quot;hand&quot;</span> &gt;</span>哈哈哈哈，快来点我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">rawhtml</span>:<span class="string">&quot;&lt;a href=&#x27;https://www.baidu.com&#x27;&gt;百度&lt;/a&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="title function_">hand</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了p&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">         &#125;,</span></span><br><span class="line"><span class="language-javascript">         <span class="title function_">hand1</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">         &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数组变化的侦测"><a href="#数组变化的侦测" class="headerlink" title="数组变化的侦测"></a>数组变化的侦测</h3><h4 id="变更方法"><a href="#变更方法" class="headerlink" title="变更方法"></a>变更方法</h4><p>vue能够侦听响应式数组的变更方法，并在它们被调用时触发相关的更新。这些变更方法（会引起UI的变化）包括：</p><ul><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li><li>splice()</li><li>sort()</li><li>reverse()</li></ul><h4 id="替换一个数组"><a href="#替换一个数组" class="headerlink" title="替换一个数组"></a>替换一个数组</h4><p>会对调用它们的原数组进行变更。相对地，也有一些不可变方法，例如filter(),concat()和slice().这些都不会更改原数组（不会引起UI的变化），而总是返回一个新数组。当遇到的是非变更方法时，我们需要将旧的数组替换为新的，即重新赋值。</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>数组变化的侦测<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;AddList&quot;</span>&gt;</span>点击添加词语<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;Addhander&quot;</span>&gt;</span>点击合并数组<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">names</span>:[<span class="string">&#x27;凤凰&#x27;</span>,<span class="string">&#x27;涅槃&#x27;</span>,<span class="string">&#x27;白鹤&#x27;</span>,<span class="string">&#x27;忘机&#x27;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">names2</span>:[<span class="string">&#x27;只此&#x27;</span>,<span class="string">&#x27;青绿&#x27;</span>,<span class="string">&#x27;千里&#x27;</span>,<span class="string">&#x27;江山&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">AddList</span>()&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//引起UI自动更新</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">push</span>(<span class="string">&#x27;从此鲜花赠自己&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">names</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//不会引起UI自动更新</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>([<span class="string">&quot;纵马踏花向自由&quot;</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>([<span class="string">&quot;纵马踏花向自由&quot;</span>]))</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//若要引起自动更新，需要赋值给原数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">names</span> = <span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>([<span class="string">&quot;纵马踏花向自由&quot;</span>]); </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Addhander</span>()&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">names</span>=<span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>(<span class="variable language_">this</span>.<span class="property">names2</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><p>模板中的表达式虽然方便，但也只能用来做简单的操作。如果在模板中写太多逻辑，会让模板变得臃肿，难以维护。因此推荐使用计算属性来描述依赖响应式状态的复杂逻辑</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">comput</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">comput1</span>() &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">names</span>:[<span class="string">&#x27;凤凰&#x27;</span>,<span class="string">&#x27;涅槃&#x27;</span>,<span class="string">&#x27;白鹤&#x27;</span>,<span class="string">&#x27;忘机&#x27;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">names2</span>:[<span class="string">&#x27;只此&#x27;</span>,<span class="string">&#x27;青绿&#x27;</span>,<span class="string">&#x27;千里&#x27;</span>,<span class="string">&#x27;江山&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">computed</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">comput</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">names2</span>.<span class="property">length</span>&gt;<span class="number">0</span> ? <span class="string">&quot;YES&quot;</span>:<span class="string">&quot;NO&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">comput1</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">names2</span>.<span class="property">length</span>&gt;<span class="number">0</span> ? <span class="string">&quot;YES&quot;</span>:<span class="string">&quot;NO&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="计算属性缓存VS方法"><a href="#计算属性缓存VS方法" class="headerlink" title="计算属性缓存VS方法"></a>计算属性缓存VS方法</h4><p>在以上代码中调用一个函数也会获得和计算属性相同的效果。<br>区别在于：</p><ul><li>计算属性<br>值会基于其响应式依赖被缓存。一个计算属性仅会在其响应式依赖更新时才重新计算。（多次调用的值是同一次计算的）</li><li>方法<br>方法调用总是会在重渲染发生时再次执行函数。（多次调用的值每次都会重新计算）</li></ul><h3 id="Class绑定"><a href="#Class绑定" class="headerlink" title="Class绑定"></a>Class绑定</h3><p>数据绑定的一个常见需求场景是操纵元素的CSSclass列表，因为class是属性，我们可以和其他属性一样使用v-bind将它们和动态的字符串绑定。但是，在处理比较复杂的绑定时，通过拼接生成字符串是麻烦且容易出错的。因此，vue专门为v-bind用法提供了特殊功能的增强，除了字符串外，表达式的值也可以是对象或数组</p><h4 id="绑定对象"><a href="#绑定对象" class="headerlink" title="绑定对象"></a>绑定对象</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;active&#x27;:isactive, &#x27;active2&#x27;:isactive2&#125;&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isactive</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isactive2</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active2</span>&#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="多个对象绑定"><a href="#多个对象绑定" class="headerlink" title="多个对象绑定"></a>多个对象绑定</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;classObject&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active&#x27;</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active2&#x27;</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active2</span>&#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-family</span>: 楷体;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="绑定数组"><a href="#绑定数组" class="headerlink" title="绑定数组"></a>绑定数组</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[classObject,classObject2]&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active&#x27;</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active2&#x27;</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject2</span>:<span class="string">&quot;active3&quot;</span></span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">243</span>, <span class="number">242</span>, <span class="number">187</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active2</span>&#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-family</span>: 楷体;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#6db66d</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果想在数组中有条件地渲染某个class，也可以用三元表达式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[isActive ? &#x27;active2 active active3&#x27; : &#x27;&#x27;]&quot;</span>&gt;</span>你好啊<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isActive</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active&#x27;</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active2&#x27;</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject2</span>:<span class="string">&quot;active3&quot;</span></span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">243</span>, <span class="number">242</span>, <span class="number">187</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active2</span>&#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-family</span>: 楷体;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#6db66d</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="数组和对象"><a href="#数组和对象" class="headerlink" title="数组和对象"></a>数组和对象</h4><blockquote><p>温馨提示<br>数组和对象嵌套过程中，只能是数组嵌套对象，不能反其道而行（只能方括号嵌套大括号）</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[isActive ? &#x27;active2  active3&#x27; : &#123;&#x27;active&#x27;:hasError&#125;]&quot;</span>&gt;</span>你好啊<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isActive</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">hasError</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active&#x27;</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&#x27;active2&#x27;</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObject2</span>:<span class="string">&quot;active3&quot;</span></span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">243</span>, <span class="number">242</span>, <span class="number">187</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active2</span>&#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-family</span>: 楷体;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#6db66d</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Style绑定"><a href="#Style绑定" class="headerlink" title="Style绑定"></a>Style绑定</h3><p>数据绑定的一个常见需求场景是操纵元素的CSS style列表，因为style是属性，我们可以和其他属性一样使用v-bind将它们和动态的字符串绑定。但是，在处理比较复杂的绑定时，通过拼接生成字符串是麻烦且容易出错的。因此，Vue专门为style的v-bind用法提供了特殊的功能增强。除了字符串外，表达式的值也可以是对象或数组。</p><h4 id="绑定对象-1"><a href="#绑定对象-1" class="headerlink" title="绑定对象"></a>绑定对象</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;color:activeColor,fontSize:fontsize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>耶耶耶耶<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;styleObject&quot;</span>&gt;</span>哈哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">activeColor</span>:<span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fontsize</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">styleObject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">color</span>:<span class="string">&#x27;blue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fontSize</span>:<span class="string">&#x27;20px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="绑定数组-1"><a href="#绑定数组-1" class="headerlink" title="绑定数组"></a>绑定数组</h4><p>还可以给style绑定一个包含多个样式对象的数组</p><h3 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h3><p>可以使用watch选项在每次响应式属性发生变化时触发的一个函数<br>函数名必须和侦听的数据对象保持一致</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;handler&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>:<span class="string">&quot;hello world&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">handler</span>()</span></span><span class="template-variable">&#123;&#123;</span></span><br><span class="line"><span class="template-variable">            <span class="name">this.message</span>=<span class="string">&quot;天青色等烟雨&quot;</span></span></span><br><span class="line"><span class="template-variable">        &#125;</span></span><br><span class="line"><span class="template-variable">      &#125;</span></span><br><span class="line"><span class="template-variable">    &#125;,</span></span><br><span class="line"><span class="template-variable">    watch:&#123;</span></span><br><span class="line"><span class="template-variable">        message(<span class="name">newValue</span>,oldValue)&#123;//函数名要和被改变的属性名保持一致</span></span><br><span class="line"><span class="template-variable">            console.log(<span class="name">newValue</span>,oldValue);</span></span><br><span class="line"><span class="template-variable">        &#125;</span></span><br><span class="line"><span class="template-variable">    &#125;</span></span><br><span class="line"><span class="template-variable">&#125;</span></span><br><span class="line"><span class="template-variable">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单输入绑定"><a href="#表单输入绑定" class="headerlink" title="表单输入绑定"></a>表单输入绑定</h3><p>在前端处理表单时，我们常常需要将表单输入框的内容同步给js中相应的变量，手动连接值绑定和更改事件监听器可能会很麻烦，v-model指令帮我们简化了这一步骤</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;   </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h4><p>单一的复选框，绑定布尔类型值</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;checkbox1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;checkbox1&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">checked</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>:<span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">checked</span>:<span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;   </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><ul><li>lazy</li></ul><p>懒加载，不会实时获取，只会在按下回车时才会获取。<br>默认情况下，v-model会在每次input事件后更新数据，可以添加lazy修饰符来改为在每次改变事件后更新数据</p><ul><li>number<br>只会获取数字</li><li>trim<br>自动截去前后空格</li></ul><h3 id="模板引用"><a href="#模板引用" class="headerlink" title="模板引用"></a>模板引用</h3><p>vue的声明性渲染模型抽象了大部分对DOM的直接操作，但在某些情况下，需要直接访问底层DOM元素。要实现这一点，可以用特殊的ref属性。挂载结束后引用都会暴露在this.$refs之上</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">ref</span>=<span class="string">&quot;container&quot;</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getRef&quot;</span>&gt;</span>点我输出上方的DOM元素<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;input1&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getRef2&quot;</span>&gt;</span>点击我获取输入内容<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">getRef</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">container</span>.<span class="property">innerHTML</span>=<span class="string">&quot;悟空传&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">getRef2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">input1</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"> &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>内容改变：</li><li>属性改变：v-bind指令</li><li>事件：v-on：click</li><li>如果没有特别的需求，不要操作DOM</li></ul><h3 id="组件组成"><a href="#组件组成" class="headerlink" title="组件组成"></a>组件组成</h3><p>最大的优势是可复用性，当使用构建步骤时，我们一般会将Vue组件定义在一个单独的.vue文件中，这被叫做单文件组件（简称SFC）</p><ol><li>引入组件</li><li>注入组件</li><li>显示组件</li></ol><p>scoped：让当前样式只在当前组件中生效</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">hello</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">import</span> hello <span class="keyword">from</span> <span class="string">&#x27;./components/hello.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span></span></span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">  components:&#123;</span></span><br><span class="line"><span class="template-variable">    hello</span></span><br><span class="line"><span class="template-variable">  &#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> &#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> &gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="组件的嵌套关系"><a href="#组件的嵌套关系" class="headerlink" title="组件的嵌套关系"></a>组件的嵌套关系</h3><p>组件允许我们将UI划分为独立的、可重用的部分，并且可以对每个部分进行单独的思考。在实际应用中，组件常常被组织成层层嵌套的树状结构。这和嵌套的HTML元素的方式类似，Vue实现了自己的组件模型，使我们可以在每个组件内封装自定义内容与逻辑。</p><h3 id="组件注册方式"><a href="#组件注册方式" class="headerlink" title="组件注册方式"></a>组件注册方式</h3><p>一个Vue组件在使用前需要被“注册”，这样Vue才能在渲染模板时找到其对应的实现。组件注册有两种方式：全局注册和局部注册</p><h4 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h4><ul><li>在最外层注册一次，在任意组件都能使用</li><li>在main.js中注册<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Header.vue&quot;</span></span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"><span class="comment">//在这中间写组件的注册</span></span><br><span class="line">app.<span class="title function_">component</span>(<span class="string">&quot;Header&quot;</span>,<span class="title class_">Header</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h4><p>全局注册虽然很方便，但有以下几个问题：</p><ol><li>全局注册，但并没有被使用的组件无法在生产打包时被自动移除（也叫“tree——shaking”）。如果你全局注册了一个组件，即使它并没有被实际使用，它仍然会出现在打包后的JS文件中</li><li>全局注册在大型项目中使项目的依赖关系变得不那么明确。在父组件中使用子组件时，不容易定位子组件的实现。和使用过多的全局变量一样，这可能会影响应用长期的可维护性</li></ol><ul><li>局部注册需要使用components选项</li></ul><h3 id="组件传递数据-Props"><a href="#组件传递数据-Props" class="headerlink" title="组件传递数据_Props"></a>组件传递数据_Props</h3><p>组件与组件之间不是完全独立的，而是有交集的，那就是组件与组件之间是可以传递数据的。<br>传递数据的解决方案就是props<br>接收数据组件中的关键字，就是props</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">massage</span>=<span class="string">&quot;动态传递数据&quot;</span> <span class="attr">title</span>=<span class="string">&quot;hahhahahahahahahaha&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> child <span class="keyword">from</span> <span class="string">&#x27;./child.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> </span></span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">    components:&#123;</span></span><br><span class="line"><span class="template-variable">        child</span></span><br><span class="line"><span class="template-variable">    &#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Child<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">massage</span> &#125;&#125;</span><span class="language-xml">-</span><span class="template-variable">&#123;&#123; <span class="name">title</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">props</span>:[<span class="string">&#x27;massage&#x27;</span>,<span class="string">&#x27;title&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="动态传递数据"><a href="#动态传递数据" class="headerlink" title="动态传递数据"></a>动态传递数据</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">massage</span>=<span class="string">&quot;动态传递数据&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;hahaha&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> child <span class="keyword">from</span> <span class="string">&#x27;./child.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">hahaha</span>:<span class="string">&quot;动态传递的title&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        child</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：props：传递数据，只能从父级传递到子级，不能反其道而行</p></blockquote><h3 id="组件传递多种数据"><a href="#组件传递多种数据" class="headerlink" title="组件传递多种数据"></a>组件传递多种数据</h3><p>通过props传递数据，不仅可以传递字符串类型的数据，还可以是其他类型，例如：数字、对象、数组等。但实际上任何类型的值都可以作为props的值被传递</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">massage</span>=<span class="string">&quot;动态传递数据&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;hahaha&quot;</span> <span class="attr">:name</span>=<span class="string">&quot;names&quot;</span> <span class="attr">:object</span>=<span class="string">&quot;users&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> child <span class="keyword">from</span> <span class="string">&#x27;./child.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">hahaha</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">names</span>:[<span class="string">&#x27;天青色&#x27;</span>,<span class="string">&#x27;褐色&#x27;</span>,<span class="string">&#x27;葡萄色&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">users</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">20</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        child</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Child<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">massage</span> &#125;&#125;</span><span class="language-xml">-</span><span class="template-variable">&#123;&#123; <span class="name">title</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in name&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">object.name</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">object.age</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">props</span>:[<span class="string">&#x27;massage&#x27;</span>,<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;object&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="组件传递Props效验"><a href="#组件传递Props效验" class="headerlink" title="组件传递Props效验"></a>组件传递Props效验</h3><p>Vue组件可以更细致地声明对传入的Props的校验要求</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>componentsA<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">componentB</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> componentB <span class="keyword">from</span> <span class="string">&#x27;./componentB.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">title</span>: <span class="string">&#x27;hello world&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        componentB</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>componentsA<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">componentB</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> componentB <span class="keyword">from</span> <span class="string">&#x27;./componentB.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">title</span>: <span class="string">&#x27;hello world&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        componentB</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h4><p>数字和字符串可以直接default，但是如果是数组和对象，必须通过工厂函数返回默认值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>componentsA<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">componentB</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:dabing</span>=<span class="string">&quot;chidabing&quot;</span> <span class="attr">:names</span>=<span class="string">&quot;namesCookie&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> componentB <span class="keyword">from</span> <span class="string">&#x27;./componentB.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">title</span>: <span class="string">&#x27;hello world&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">chidabing</span>:<span class="string">&#x27;父组件把数字和字符串类型的大饼传过来了&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">namesCookie</span>:[<span class="string">&#x27;天&#x27;</span>,<span class="string">&#x27;青&#x27;</span>,<span class="string">&#x27;色&#x27;</span>,<span class="string">&#x27;等&#x27;</span>,<span class="string">&#x27;烟&#x27;</span>,<span class="string">&#x27;雨&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        componentB</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>componentB<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">title</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">dabing</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">title</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>:[<span class="title class_">String</span>,<span class="title class_">Number</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//数字和字符串的默认值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">dabing</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>:[<span class="title class_">String</span>,<span class="title class_">Number</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">default</span>:<span class="string">&#x27;画大饼，父组件并没有传值时显示的内容&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//必选项</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">required</span>:<span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//数组对象的默认值需要用工厂函数返回</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">names</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>:<span class="title class_">Array</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">default</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span>[<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="必选项"><a href="#必选项" class="headerlink" title="必选项"></a>必选项</h4><p>增加一个 required:true</p><blockquote><p>注意：props是只读的！不允许修改父元素传递过来的数据</p></blockquote><h3 id="组件事件"><a href="#组件事件" class="headerlink" title="组件事件"></a>组件事件</h3><p>在组件的模板表达式中，可以直接使用$emit方法触发自定义事件，触发自定义事件的目的是组件之间传递数据</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>子传父演示,这个是父<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">child1</span> @<span class="attr">emitEvent</span>=<span class="string">&quot;getChildData&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">childData</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> child1 <span class="keyword">from</span> <span class="string">&#x27;./child1.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">childData</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        child1</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">getChildData</span>(<span class="params">data</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 子组件传过来的值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">childData</span> = data</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;clickEvent&quot;</span>&gt;</span>触发子传父按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&#x27;子组件的数据&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">clickEvent</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//自定义事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.$emit(<span class="string">&#x27;emitEvent&#x27;</span>,<span class="variable language_">this</span>.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>温馨提示</strong><br>组件之间传递数据的方案：<br> 1.父传子：props<br> 2.子传父：自定义事件（this.$emit）</p></blockquote><h3 id="28组件事件配合v-model使用"><a href="#28组件事件配合v-model使用" class="headerlink" title="28组件事件配合v-model使用"></a>28组件事件配合v-model使用</h3><p> 如果是用户输入，我们希望在获取数据的同时发送数据配合v-model来使用.会使用到侦听器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h5</span>&gt;</span> 搜索<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">content</span>: <span class="string">&quot; &quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">content</span>(<span class="params">newValue,oldValue</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.$emit(<span class="string">&#x27;search&#x27;</span>,newValue)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Main<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    搜索的内容为</span><span class="template-variable">&#123;&#123; <span class="name">searchvalue</span> &#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">search</span> @<span class="attr">search</span>=<span class="string">&quot;getvalue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> search <span class="keyword">from</span> <span class="string">&#x27;./search.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">searchvalue</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        search</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">getvalue</span>(<span class="params">value</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">searchvalue</span>=value</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 子组件通过$emit触发事件，并传递参数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="29组件数据传递"><a href="#29组件数据传递" class="headerlink" title="29组件数据传递"></a>29组件数据传递</h3><p>自定义事件：用props也可以实现子传父，利用函数携带参数传递</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> 父元素：<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message1</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">propDemo2</span> <span class="attr">:title</span>=<span class="string">&quot;message1&quot;</span> <span class="attr">:onEvent</span>=<span class="string">&quot;getData&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> propDemo2 <span class="keyword">from</span> <span class="string">&#x27;./propDemo2.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message1</span>:<span class="string">&#x27;你好啊&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        propDemo2</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">getData</span>(<span class="params">data</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">message1</span>=data;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>子元素：</span><span class="template-variable">&#123;&#123; <span class="name">title</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">onEvent</span>(<span class="name">&#x27;传递的数据&#x27;</span>) &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">props</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">title</span>:<span class="title class_">String</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">onEvent</span>:<span class="title class_">Function</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="30透传Attributes（属性）"><a href="#30透传Attributes（属性）" class="headerlink" title="30透传Attributes（属性）"></a>30透传Attributes（属性）</h3><ul><li>用得很少，因为必须是唯一根元素</li><li>可以禁用继承</li></ul><p>透传attribute指的是传递一个组件，却没有被该组件声明为props或emits的attribute或者v-on事件监听器。最常见的例子就是class、style和id</p><p>当一个组件以单个元素为根作渲染时，透传的attribute会自动被添加到根元素上</p><h3 id="31插槽Slots"><a href="#31插槽Slots" class="headerlink" title="31插槽Slots"></a>31插槽Slots</h3><p>组件能够接收任意类型的js值作为props，但在某些场合我们需要为子组件传递一些模板片段，让子组件在它们的组件中渲染这些片段。<br><slot>元素是一个插槽出口，标示了父元素提供的插槽内容将在哪里渲染</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">SlotBase</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        插槽标题</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>插槽内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">SlotBase</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">import</span> <span class="title class_">SlotBase</span> <span class="keyword">from</span> <span class="string">&#x27;./components/SlotBase.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span> </span></span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">   components:&#123;</span></span><br><span class="line"><span class="template-variable">     SlotBase</span></span><br><span class="line"><span class="template-variable">   &#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> &#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>插槽基础<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="32插槽Slot续集"><a href="#32插槽Slot续集" class="headerlink" title="32插槽Slot续集"></a>32插槽Slot续集</h3><h4 id="渲染作用域"><a href="#渲染作用域" class="headerlink" title="渲染作用域"></a>渲染作用域</h4><p>插槽内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模板中定义的</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">SlotBase</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        插槽标题</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">message</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">SlotBase</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">import</span> <span class="title class_">SlotBase</span> <span class="keyword">from</span> <span class="string">&#x27;./components/SlotBase.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">message</span>:<span class="string">&#x27;哈哈哈&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title class_">SlotBase</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>插槽基础<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="默认内容"><a href="#默认内容" class="headerlink" title="默认内容"></a>默认内容</h4><p>在外部没有提供任何内容的情况下，可以为插槽指定默认内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">slot</span>&gt;</span>插槽的默认值<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>插槽基础<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h4><p>（多个插槽）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SlotBase</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:hahaha</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>哈哈哈啊哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:yayaya</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SlotBase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">import</span> <span class="title class_">SlotBase</span> <span class="keyword">from</span> <span class="string">&#x27;./components/SlotBase.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">message</span>:<span class="string">&#x27;哈哈哈&#x27;</span></span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">   <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="title class_">SlotBase</span></span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript"> &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;hahaha&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;yayaya&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>插槽基础<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>v-slot：可以简写为#<br> &lt;template #hahaha&gt;<br>    <p>哈哈哈啊哈</p><br>  </template></p></blockquote><h3 id="插槽Slots-插槽中的数据传递（再续集）"><a href="#插槽Slots-插槽中的数据传递（再续集）" class="headerlink" title="插槽Slots 插槽中的数据传递（再续集）"></a>插槽Slots 插槽中的数据传递（再续集）</h3><p>在某些场景下插槽的内容可能想要同时使用父组件域内和子组件域内的数据，就需要让子组件在渲染时将一部分数据提供给插槽。可以像对组件传递props那样，向一个插槽的出口上传递attributes<br>子元素数据，先通过插槽出口传递给父元素</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:text</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&#x27;hello world&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Slotss</span> <span class="attr">v-slot</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- slotProps 是一个对象，包含数据  --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml">-</span><span class="template-variable">&#123;&#123; <span class="name">slotProps.text</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Slotss</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">import</span> <span class="title class_">Slotss</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Slotss.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">message</span>:<span class="string">&#x27;测试内容&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title class_">Slotss</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="具名插槽传递数据"><a href="#具名插槽传递数据" class="headerlink" title="具名插槽传递数据"></a>具名插槽传递数据</h4><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Slotss</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- slotProps 是一个对象，包含数据  --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">template</span> #<span class="attr">name1</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">slotProps.sex</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">template</span> #<span class="attr">name2</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">slotProps.job</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Slotss</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">import</span> <span class="title class_">Slotss</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Slotss.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">message</span>:<span class="string">&#x27;测试内容&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title class_">Slotss</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;name1&quot;</span> <span class="attr">:sex</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;name2&quot;</span> <span class="attr">:job</span>=<span class="string">&quot;job&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">job</span>:<span class="string">&#x27;前端&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结-组件之间传递数据"><a href="#总结-组件之间传递数据" class="headerlink" title="总结 组件之间传递数据"></a>总结 组件之间传递数据</h3><ol><li>props传递数据</li><li>自定义事件</li><li>传递视图结构（slot）</li></ol><h3 id="组件生命周期"><a href="#组件生命周期" class="headerlink" title="组件生命周期"></a>组件生命周期</h3><pre><code>每个vue组件实例在创建时都需要经历一系列的初始化步骤，比如设置好数据侦听，编译模板，挂载实例到DOM，以及在数据改变时更新DOM，在此过程中，它也会运行被称为生命周期钩子的函数，让开发者有机会在特定阶段运行自己的代码</code></pre><h4 id="创建期"><a href="#创建期" class="headerlink" title="创建期"></a>创建期</h4><p>beforeCreate created</p><h4 id="挂载期"><a href="#挂载期" class="headerlink" title="挂载期"></a>挂载期</h4><p>beforeMounte mounted</p><h4 id="更新期"><a href="#更新期" class="headerlink" title="更新期"></a>更新期</h4><p>beforeUpdate updated</p><h4 id="销毁期"><a href="#销毁期" class="headerlink" title="销毁期"></a>销毁期</h4><p>beforeUnmount unmounted</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updatahandler&quot;</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">message</span>: <span class="string">&#x27;更新之前的数据&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">updatahandler</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">message</span> = <span class="string">&#x27;更新之后的数据&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeCreate</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件创建之前&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件创建之后&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeMount</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件挂载之前&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件挂载之后&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeUpdate</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件更新之前&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">updated</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件更新之后&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeUnmount</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件销毁之前&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">unmounted</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件销毁之后&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="生命周期应用"><a href="#生命周期应用" class="headerlink" title="生命周期应用"></a>生命周期应用</h3><p>组件的生命周期重要，有两个常见的应用场景：</p><ol><li><p>通过ref获取元素DOM结构</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">ref</span>=<span class="string">&quot;hhhhh&quot;</span>&gt;</span>通过ref获取元素DOM结构<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">beforeMounte</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;挂载之前&#x27;</span>+<span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">hhhhh</span>)</span></span><br><span class="line"><span class="language-javascript">   &#125;,</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;挂载之后&#x27;</span>+<span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">hhhhh</span>.<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>模拟网络请求渲染数据</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item ,index) in userInfo&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item.name</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item.age</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item.phone</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">userInfo</span>:[]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>)&#123;<span class="comment">//这里用mounted比用created要好，因为用created的话，结构还没有加载完成，而用mounted的话，结构已经加载完成。结构比数据更重要，所以要先加载</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">userInfo</span> = [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Alice Smith&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;age&quot;</span>: <span class="number">25</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;city&quot;</span>: <span class="string">&quot;Los Angeles&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;email&quot;</span>: <span class="string">&quot;alice.smith@example.com&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;+1987654321&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Bob Johnson&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;age&quot;</span>: <span class="number">35</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;city&quot;</span>: <span class="string">&quot;Chicago&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;email&quot;</span>: <span class="string">&quot;bob.johnson@example.com&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;+1122334455&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Emily Brown&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;age&quot;</span>: <span class="number">28</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;city&quot;</span>: <span class="string">&quot;San Francisco&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;email&quot;</span>: <span class="string">&quot;emily.brown@example.com&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;+1555555555&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol><h3 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h3><p>有些场景会需要在两个组件间来回切换，比如Tab界面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;TabComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ComponentA</span> <span class="keyword">from</span> <span class="string">&#x27;./components/ComponentA.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ComponentB</span> <span class="keyword">from</span> <span class="string">&#x27;./components/ComponentB.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="title class_">TabComponent</span>:<span class="string">&#x27;ComponentA&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">ComponentA</span>,</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">ComponentB</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">change</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">TabComponent</span>=<span class="variable language_">this</span>.<span class="property">TabComponent</span> ==<span class="string">&#x27;ComponentA&#x27;</span>?<span class="string">&#x27;ComponentB&#x27;</span>:<span class="string">&#x27;ComponentA&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件保持存活"><a href="#组件保持存活" class="headerlink" title="组件保持存活"></a>组件保持存活</h3><p>当使用<component :is="……"></component>来在多个组件间作切换时，被切换掉的组件会被卸载。可以通过<keep-active>组件强制被切换掉的组件仍然保持“存活”的状态</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;TabComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ComponentA</span> <span class="keyword">from</span> <span class="string">&#x27;./components/ComponentA.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ComponentB</span> <span class="keyword">from</span> <span class="string">&#x27;./components/ComponentB.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="title class_">TabComponent</span>:<span class="string">&#x27;ComponentA&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">ComponentA</span>,</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">ComponentB</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">change</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">TabComponent</span>=<span class="variable language_">this</span>.<span class="property">TabComponent</span> ==<span class="string">&#x27;ComponentA&#x27;</span>?<span class="string">&#x27;ComponentB&#x27;</span>:<span class="string">&#x27;ComponentA&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">div</span>&gt;</span>componentA<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;message=&#x27;新数据&#x27;&quot;</span>&gt;</span>修改数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">message</span>:<span class="string">&quot;老数据&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title function_">beforeUnmount</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;组件卸载之前&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title function_">unmounted</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;组件卸载之后&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="异步组件"><a href="#异步组件" class="headerlink" title="异步组件"></a>异步组件</h3><p>在大型项目中，需要切分应用为更小的块，并仅在需要时再从服务器加载相关组件。vue提供了defineAsyncComponent方法来实现此功能</p><p>import {defineAsyncComponent} from ‘vue’<br>const ComponentB&#x3D; define AsyncComponent(()&#x3D;&gt;<br>import(“.&#x2F;components&#x2F;ComponentB.vue”)<br>)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;TabComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切换组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;defineAsyncComponent&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ComponentA</span> <span class="keyword">from</span> <span class="string">&#x27;./components/ComponentA.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//异步加载组件</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title class_">ComponentB</span>=<span class="title function_">defineAsyncComponent</span>(<span class="function">()=&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">import</span>(<span class="string">&#x27;./components/ComponentB.vue&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="title class_">TabComponent</span>:<span class="string">&#x27;ComponentA&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">ComponentA</span>,</span></span><br><span class="line"><span class="language-javascript">   <span class="title class_">ComponentB</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">change</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">TabComponent</span>=<span class="variable language_">this</span>.<span class="property">TabComponent</span> ==<span class="string">&#x27;ComponentA&#x27;</span>?<span class="string">&#x27;ComponentB&#x27;</span>:<span class="string">&#x27;ComponentA&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><p>通常情况下，当需要从父组件向子组件传递数据时，会使用props。但是这样的结构：有一些多层级嵌套的组件，形成了一棵巨大的组件树，而某个深层的子组件需要一个较远的祖先组件中的部分数据。在这种情况下，如果仅使用props则必须将其沿着组件链逐级传递下去，这样会非常麻烦。<br>  这一问题被称为“prop逐级传递”。<br>    provide和inject可以解决这一问题。一个父组件相对于其所有的后代组件，会作为依赖提供者。任何后代的组件树，无论层级有多深，都可以注入由父组件提供给整条链路的依赖。<br>    provide要为组件后代提供数据，也可以读取data中的数据</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>祖宗<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Parent</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Parent</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Parent.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">message</span>:<span class="string">&#x27;我是祖宗的财产哈哈哈哈哈哈&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//  provide:&#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//    message:&#x27;我是祖宗的财产&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//  &#125;,</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">provide</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">message</span>:<span class="variable language_">this</span>.<span class="property">message</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">   <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="title class_">Parent</span></span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript"> &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>儿子<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">fullmessage</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">inject</span>:[<span class="string">&#x27;message&#x27;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">fullmessage</span>:<span class="variable language_">this</span>.<span class="property">message</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>温馨提示：<br>provide和inject只能由上到下的传递，不能反向传递</p></blockquote><p>  除了在一个组件中提供依赖，我们还可以在整个应用层面提供依赖<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./assets/main.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">app.<span class="title function_">provide</span>(<span class="string">&quot;globalData&quot;</span>,<span class="string">&quot;我是全局数据&quot;</span>)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></p>  <figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>儿子<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">fullmessage</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">globalData</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">inject</span>:[<span class="string">&#x27;message&#x27;</span>,<span class="string">&#x27;globalData&#x27;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">fullmessage</span>:<span class="variable language_">this</span>.<span class="property">message</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Vue应用"><a href="#Vue应用" class="headerlink" title="Vue应用"></a>Vue应用</h3><p>  应用实例<br>  每个vue应用都是通过createApp函数创建一个新的应用实例<br>  <figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createApp&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="comment">//app:Vue的实例对象</span></span><br><span class="line"><span class="comment">//在一个Vue项目中，有且只有一个Vue的实例对象</span></span><br></pre></td></tr></table></figure><br>  <strong>根组件</strong><br>  &#x2F;&#x2F;我们传入createApp的对象实际上是一个组件，每个应用都需要一个“根组件”，其他组件将作为其子组件<br>  const app&#x3D; createApp(App)<br>  &#x2F;&#x2F;App：根组件</p><p>  <strong>挂载应用</strong><br>  应用实例必须在调用了.mount()方法后才会渲染出来。该方法接收一个“容器”参数，可以是一个实际的DOM元素或是一个CSS选择器字符串<br>   app.mount(‘#app’)<br>   <div id="app"></div></p><p>   <strong>公共资源</strong><br>   在src目录下的assets文件夹的作用就是存放公共资源，例如：图片、公共css或者字体图标等</p><h4 id="浏览器可执行文件"><a href="#浏览器可执行文件" class="headerlink" title="浏览器可执行文件"></a>浏览器可执行文件</h4><p>1.html<br>2.css<br>3.Javascript<br>4.image<br>构建工具：webpack vite</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2023/07/13/wei-xin-xiao-cheng-xu/"/>
      <url>/2023/07/13/wei-xin-xiao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h3 id="小程序与普通网页开发的区别"><a href="#小程序与普通网页开发的区别" class="headerlink" title="小程序与普通网页开发的区别"></a>小程序与普通网页开发的区别</h3><ol><li><p>运行环境不同<br>小程序运行在微信环境中<br>网页运行在浏览器环境中</p></li><li><p>API不同<br>小程序中无法调用DOM和BOM的API<br>但小程序可以调用微信环境提供的API,例如地理定位、扫码、支付</p></li><li><p>开发模式不同</p></li></ol><h3 id="小程序项目的基本组成结构"><a href="#小程序项目的基本组成结构" class="headerlink" title="小程序项目的基本组成结构"></a>小程序项目的基本组成结构</h3><p><strong>pages</strong>：用来存放小程序的所有页面（index、logs）</p><ul><li>每个页面由4个基本文件组成，分别是<br>①.js文件：页面的脚本文件，存放页面的数据、事件处理函数等<br>②.json文件：当前页面的配置文件，配置窗口的外观、表现等<br>③.wxml文件：页面的模板结构文件<br>④.wxss:当前页面的样式表文件</li></ul><p><strong>utils</strong>：用来存放工具性质的模块，（例如：格式化时间的自定义模块）<br><strong>app.js</strong>:小程序项目的入口文件<br><strong>app.json</strong>:小程序项目的全局配置文件<br><strong>app.wxss</strong>:小程序项目的全局样式文件<br><strong>projec.config.json</strong>:项目的配置文件<br><strong>sitemap.json</strong>:用来配置小程序及其页面是否允许被微信搜索</p><h3 id="页面基本文件介绍"><a href="#页面基本文件介绍" class="headerlink" title="页面基本文件介绍"></a>页面基本文件介绍</h3><p><strong>json</strong>：json是一种数据格式，在实际开发中，json总是以配置文件的形式出现。在小程序中，通过不同的.json配置文件，可以对小程序项目进行不同级别的配置<br>有四种json配置文件，分别是</p><ol><li>项目根目录中的app.json配置文件</li><li>项目根目录中的project.config.json配置文件</li><li>项目根目录中的sitemap.json配置文件</li><li>每个页面文件夹中的.json配置文件</li></ol><h4 id="app-json"><a href="#app-json" class="headerlink" title="app.json"></a>app.json</h4><p>是当前小程序的全局配置，包括了小程序的所有页面路径、窗口外观、界面表现、底部tab等</p><ol><li>pages：用来记录当前小程序所有界面的路径</li><li>window：全局定义小程序所有页面的背景色、文字颜色等</li><li>style：全局定义小程序组件所使用的样式版本</li><li>sitemapLocation：用来指明sitemap.json的位置</li></ol><h4 id="project-config-json"><a href="#project-config-json" class="headerlink" title="project.config.json"></a>project.config.json</h4><p>是项目配置文件，用来记录我们对小程序开发工具所做的个性化配置，例如：</p><ul><li>setting中保存了编译相关的配置</li><li>projectname 中保存了项目名称</li><li>appid保存了小程序的账号id</li></ul><h4 id="sitemap-json"><a href="#sitemap-json" class="headerlink" title="sitemap.json"></a>sitemap.json</h4><p>微信现已开放小程序内搜索，效果类似与PC网页的SEO.sitemap.json文件用来配置小程序页面是否允许微信索引。当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索关键字和页面的索引匹配成功的时候，小程序的页面将可能展示在搜索结果中</p><h4 id="页面的-json配置文件"><a href="#页面的-json配置文件" class="headerlink" title="页面的.json配置文件"></a>页面的.json配置文件</h4><p>小程序中的每一个页面，可以使用.json文件来对本页面的窗口外观进行配置，页面中的配置项会覆盖app.json的window中相同的配置项<br>例如，在index.json中改变导航栏的背景色<br> <figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   “usingComponents<span class="string">&quot;:&#123;&#125;,</span></span><br><span class="line"><span class="string"> &quot;</span>navigationBarBackgroundColo<span class="string">r&quot;:&quot;</span>#<span class="number">0</span>0b26a<span class="string">&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></p><h3 id="认识小程序页面"><a href="#认识小程序页面" class="headerlink" title="认识小程序页面"></a>认识小程序页面</h3><h4 id="新建小程序"><a href="#新建小程序" class="headerlink" title="新建小程序"></a>新建小程序</h4><p> 只需要在app.json-&gt;pages中新增页面的存放路径，小程序开发者工具可以自动创建对应的页面文件</p><h4 id="修改项目首页"><a href="#修改项目首页" class="headerlink" title="修改项目首页"></a>修改项目首页</h4><p> 只需要调整app.json-&gt;pages数组中页面路径的前后顺序，即可修改项目的首页。小程序会把排在第一位的页面当作项目首页</p><h4 id="什么是wxml"><a href="#什么是wxml" class="headerlink" title="什么是wxml"></a>什么是wxml</h4><p> 是小程序框架设计的一套标签语言，用来构建小程序页面的结构<br> <strong>与html的不同</strong></p><ol><li>标签名称不同</li></ol><ul><li>HTML（div、span、img、a）</li><li>wxml（view、text、image、navigato）</li></ul><ol start="2"><li>属性节点不同</li></ol><ul><li><a href="#">超链接<a></li><li><navigator url="/pages/home/home"></navigator></li></ul><ol start="3"><li>提供了类似vue中的模板语法</li></ol><ul><li>数据绑定</li><li>列表渲染</li><li>条件渲染</li></ul><h4 id="什么是wxss"><a href="#什么是wxss" class="headerlink" title="什么是wxss"></a>什么是wxss</h4><p><strong>与css的不同</strong></p><ol><li>新增了rpx尺寸单位</li></ol><ul><li>css中需要手动进行像素单位换算，例如rem</li><li>wxss在底层支持新的尺寸单位rpx，在不同大小的屏幕上小程序会自动进行换算</li></ul><ol start="2"><li>提供了全局样式和局部样式</li></ol><ul><li>项目根目录中的app.wxss会作用于所有小程序页面</li><li>局部页面的.wxss样式仅对当前页面生效</li></ul><ol start="3"><li>wxss仅支持部分css选择器</li></ol><ul><li>.class和#id</li><li>element</li><li>并集选择器、后代选择器</li><li>::after和::before等伪类选择器</li></ul><h4 id="小程序中的-js文件"><a href="#小程序中的-js文件" class="headerlink" title="小程序中的 .js文件"></a>小程序中的 .js文件</h4><p>在小程序中，我们通过.js文件来处理用户的操作。例如：响应用户的点击、获取用户的位置等<br>有三类js文件：</p><ol><li><p>app.js<br>是整个小程序项目的入口文件，通过调用<strong>App()函数</strong>来启动整个小程序</p></li><li><p>页面的.js文件<br>是页面的入口文件，通过调用<strong>Page()函数</strong>来创建并运行页面</p></li><li><p>普通的.js文件<br>普通的功能模块文件，用来封装公共的函数或属性供页面使用</p></li></ol><h3 id="小程序的宿主环境"><a href="#小程序的宿主环境" class="headerlink" title="小程序的宿主环境"></a>小程序的宿主环境</h3><h4 id="什么是宿主环境"><a href="#什么是宿主环境" class="headerlink" title="什么是宿主环境"></a>什么是宿主环境</h4><p>宿主环境是指程序运行所必须依赖的环境。<br>例如Android系统和ios系统是两个不同的宿主环境。Android版的微信app是不能在ios环境下运行的，所以Android是安卓软件的宿主环境，脱离了宿主环境的软件是没有任何意义的。</p><h4 id="小程序的宿主环境-1"><a href="#小程序的宿主环境-1" class="headerlink" title="小程序的宿主环境"></a>小程序的宿主环境</h4><p>手机微信是小程序的宿主环境，小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能，例如：微信扫码，微信支付，微信登陆，地理定位……</p><h4 id="小程序宿主环境包含的内容"><a href="#小程序宿主环境包含的内容" class="headerlink" title="小程序宿主环境包含的内容"></a>小程序宿主环境包含的内容</h4><ol><li>通信模型</li><li>运行机制</li><li>组件</li><li>API</li></ol><h4 id="通信模型"><a href="#通信模型" class="headerlink" title="通信模型"></a>通信模型</h4><p><strong>通信主体</strong><br>小程序中通信的主体是渲染层和逻辑层，其中</p><ol><li>wxml模板和wxss样式工作在渲染层</li><li>js脚本工作在逻辑层</li></ol><p><strong>通信模型</strong><br>小程序中的通信模型分为两部分</p><ol><li>渲染层和逻辑层之间的通信：由微信客户端进行转发</li><li>逻辑层和第三方服务器之间的通信：由微信客户端进行转发</li></ol><h4 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h4><p><strong>小程序启动过程</strong></p><ol><li>把小程序的代码包下载到本地</li><li>解析app.json全局配置文件</li><li>执行app.js小程序入口文件，调用App()创建小程序实例</li><li>渲染小程序首页</li><li>小程序启动完成</li></ol><p><strong>页面渲染过程</strong></p><ol><li>加载解析页面的.json配置文件</li><li>加载页面的.wxml模板和.wxss样式</li><li>执行页面的.js文件，调用Page()创建页面实例</li><li>页面渲染完成</li></ol><h3 id="小程序的宿主环境-组件"><a href="#小程序的宿主环境-组件" class="headerlink" title="小程序的宿主环境-组件"></a>小程序的宿主环境-组件</h3><h4 id="视图容器"><a href="#视图容器" class="headerlink" title="视图容器"></a>视图容器</h4><ol><li>view<br>类似div，块级元素，用来布局<br>使用：<br>横向：父级display：flex;<br>  justify-content:space-around;</li><li>scroll-view<br>可滚动的视图区域，常用来实现滚动列表效果</li></ol><ul><li>scroll-y 属性：允许纵向滚动</li><li>scroll-x 属性：允许横向滚动</li><li>使用竖向滚动时，必须给scroll-view 一个固定高度</li><li>使用横向滚动时，必须给scroll-view 一个固定宽度<figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">scroll</span>-<span class="built_in">view</span> class=<span class="string">&quot;container&quot;</span> <span class="keyword">scroll</span>-y&gt;</span><br><span class="line">  &lt;<span class="built_in">view</span>&gt;A&lt;<span class="built_in">view</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">view</span>&gt;B&lt;<span class="built_in">view</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">view</span>&gt;C&lt;<span class="built_in">view</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">scroll</span>-<span class="built_in">view</span>&gt;</span><br><span class="line"></span><br><span class="line">.container&#123;</span><br><span class="line">  <span class="comment">/*给scroll-view 固定高度*/</span></span><br><span class="line">  height：<span class="number">120</span>px;</span><br><span class="line">  width:<span class="number">100</span>px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>swiper 和 swiper-item<br>轮播图容器组件和轮播图的项目组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第一个轮播图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>A<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第二个轮播图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>B<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第三个轮播图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>C<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.swiper-container</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:lightgreen;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:lightblue;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:lightpink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>swiper 组件的常用属性</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>indicator</td><td>boolean</td><td>false</td><td>是否显示面板指示点</td></tr><tr><td>indicator-color</td><td>color</td><td>rgba(0,0,0,.3)</td><td>指示点颜色</td></tr><tr><td>indicator-active-color</td><td>color</td><td>#000000</td><td>当前选中的指示点颜色</td></tr><tr><td>autoplay</td><td>boolean</td><td>false</td><td>是否自动切换</td></tr><tr><td>interval</td><td>number</td><td>5000</td><td>自动切换时间间隔</td></tr><tr><td>circular</td><td>boolean</td><td>false</td><td>是否采用衔接滑动</td></tr></tbody></table></li><li><p>常用的基础内容组件<br><strong>text</strong></p></li></ol><ul><li>文本组件</li><li>类似于HTML中的span标签，是一个行内元素<br>通过text组件中的selectable属性，实现长按选中文本内容的效果<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">手机号支持长按选中效果</span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>&gt;</span>123456789<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>rich-text</strong></li><li>富文本组件</li><li>支持把HTML字符串渲染为WXML结构<br>通过rich-text组件的nodes属性节点，把HTML字符串渲染为对应的UI结构</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;rich-<span class="built_in">text</span> nodes=<span class="string">&quot;&lt;h1 style=&#x27;color:pink;&#x27;&gt;标题&lt;/h1&gt;&quot;</span>&gt;&lt;/rich-<span class="built_in">text</span>&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>其他常用组件<br> <strong>button</strong></li></ol><ul><li>按钮组件</li><li>功能比HTML中的button按钮丰富</li><li>通过open-type属性可以调用微信提供的各种功能（客服、转发、获取用户授权、获取用户信息等）</li></ul> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 普通按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主色调按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 小尺寸按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>主色调按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 镂空按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">plain</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">plain</span>&gt;</span>主色调按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">plain</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>image</strong></p><ul><li>图片组件</li><li>image组件默认宽度约为300px，高度约为240px</li></ul><blockquote><p>image组件的mode属性<br>image组件的mode属性用来指定图片的裁剪和缩放模式，常用的mode属性如下：</p><table><thead><tr><th>mode值</th><th>说明</th></tr></thead><tbody><tr><td>scaleToFill</td><td>（默认值）缩放模式，不保持纵横比缩放图片，使图片的宽高完全拉伸至填满image元素</td></tr><tr><td>aspectFit</td><td>缩放模式，保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来</td></tr><tr><td>aspectFill</td><td>缩放模式，保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取</td></tr><tr><td>widthFix</td><td>缩放模式，宽度不变，高度自动变化，保持原图宽高不变</td></tr><tr><td>heightFix</td><td>缩放模式，高度不变，宽度自动变化，保持原图宽高不变</td></tr></tbody></table></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- image组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/0.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/0.jpg&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/0.jpg&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFill&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/0.jpg&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/0.jpg&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;heightFix&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>navigator</strong></p><ul><li>页面导航组件</li><li>类似于HTML中的a标签</li></ul><h4 id="基础内容"><a href="#基础内容" class="headerlink" title="基础内容"></a>基础内容</h4><h4 id="表单组件"><a href="#表单组件" class="headerlink" title="表单组件"></a>表单组件</h4><h4 id="导航组件"><a href="#导航组件" class="headerlink" title="导航组件"></a>导航组件</h4><h4 id="媒体组件"><a href="#媒体组件" class="headerlink" title="媒体组件"></a>媒体组件</h4><h4 id="map地图组件"><a href="#map地图组件" class="headerlink" title="map地图组件"></a>map地图组件</h4><h4 id="canvas画布组件"><a href="#canvas画布组件" class="headerlink" title="canvas画布组件"></a>canvas画布组件</h4><h4 id="开放能力"><a href="#开放能力" class="headerlink" title="开放能力"></a>开放能力</h4><h4 id="无障碍访问"><a href="#无障碍访问" class="headerlink" title="无障碍访问"></a>无障碍访问</h4><h3 id="小程序的宿主环境-API"><a href="#小程序的宿主环境-API" class="headerlink" title="小程序的宿主环境-API"></a>小程序的宿主环境-API</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ol><li>事件监听API</li></ol><ul><li>特点：以on开头，用来监听某些事件的触发</li><li>举例：wx.onWindowResize(function callback)监听窗口尺寸变化的事件</li></ul><ol start="2"><li>同步API</li></ol><ul><li>特点1：以Sync结尾的API都是同步API</li><li>特点2：同步API的执行结果，可以通过函数返回值直接获取，如果执行出错会抛出异常</li><li>举例：wx.setStorageSync(‘key’,’value’)向本地存储中写入内容</li></ul><ol start="3"><li>异步API</li></ol><ul><li>特点：类似于JQuery中的$.ajax(options)函数，需要通过success、fall、complete接收调用的结果</li><li>举例：wx.request()发起网络数据请求，通过success回调函数接收数据</li></ul><h3 id="协同工作和发布"><a href="#协同工作和发布" class="headerlink" title="协同工作和发布"></a>协同工作和发布</h3><h4 id="协同工作"><a href="#协同工作" class="headerlink" title="协同工作"></a>协同工作</h4><ol><li><p>了解权限管理需求</p></li><li><p>了解项目成员的组织结构<br>项目管理者：统筹整个项目的进展和风险，把控小程序对外发布的节奏<br>产品组：提需求<br>设计组：出设计方案<br>开发组：代码开发<br>测试组：项目测试</p></li><li><p>小程序的开发流程<br>提出需求：产品组<br>设计：设计组<br>开发：开发组<br>体验：产品组、设计组<br>测试：测试组<br>发布：管理者</p></li><li><p>成员管理<br>管理员<br> 项目成员：参与小程序开发、运营，可登录小程序管理后台、管理员可以添加、删除项目成员，并设置项目成员的角色。<br>  运营者、开发者、数据分析者<br>体验成员：参与小程序内测体验的成员、可使用体验版小程序，但不属于项目成员，管理员及项目均可添加、删除体验成员</p></li><li><p>小程序版本</p></li></ol><ul><li>开发版本</li><li>体验版本</li><li>审核中的版本</li><li>线上版本</li></ul><ol start="6"><li>小程序发布上线的整体步骤<br><strong>上传代码</strong></li><li>点击开发者工具顶部工具栏的“上传”按钮</li><li>填写版本号以及项目备注</li><li>在后台查看上传之后的版本<br>登录小程序管理后台-&gt;管理-&gt;版本管理-&gt;版本管理-&gt;开发版本<br><strong>提交审核</strong></li></ol><p><strong>发布</strong></p><ol start="7"><li><p>获取小程序码<br>登录小程序管理后台-&gt;设置-&gt;基本设置-&gt;基本信息-&gt;小程序码及线下物料下载</p></li><li><p>查看小程序运营数据的两种方式</p></li></ol><ul><li><p>在小程序后台查看<br>登录小程序管理后台，点击侧边栏的“统计”，点击相应的tab可以看到相关的数据</p></li><li><p>使用“小程序数据助手”小程序查看</p></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>如何创建小程序项目<br>微信开发者工具的使用、appID的获取</li><li>小程序项目的基本组成结构<br>app.js\app.json\app.wxss\pages文件夹</li><li>小程序页面由几部分组成<br>wxml、wxss、json、js</li><li>小程序中常见的组件如何使用<br>view、text、image</li><li>小程序如何进行协同开发和发布<br>成员管理、发布小程序、查看运营数据</li></ol><h3 id="小程序模板与配置"><a href="#小程序模板与配置" class="headerlink" title="小程序模板与配置"></a>小程序模板与配置</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><ol><li>能够使用wxml模板语法渲染页面结构</li><li>能够使用wxss样式美化页面结构</li><li>能够使用app.json对小程序进行全局性配置</li><li>能够使用page,json对小程序页面进行个性化配置</li><li>能够知道如何发起网络数据请求</li></ol><h4 id="wxml模板语法"><a href="#wxml模板语法" class="headerlink" title="wxml模板语法"></a>wxml模板语法</h4><ol><li>数据绑定的基本原则</li></ol><ul><li>在data中定义数据<br>在页面对应的.js文件中，把数据定义到data对象中即可<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 页面的初始数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> data: &#123;</span><br><span class="line">   <span class="comment">// 字符串类型的数据</span></span><br><span class="line">   info:<span class="string">&quot;hello world!&quot;</span>,</span><br><span class="line">   //数组类型的数据</span><br><span class="line">   msgList:[&#123;msg:<span class="string">&#x27;hello&#x27;</span>&#125;,&#123;msg:<span class="string">&#x27;big cute!&#x27;</span>&#125;]</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure></li><li>在wxml中使用数据（也叫动态绑定内容）<br>Mustache语法{双大括号}将变量包起来即可。语法格式：<br><view><view><br>也叫插值表达式</li></ul><ol start="2"><li>Mustache语法的主要应用场景</li></ol><ul><li>绑定内容</li><li>绑定属性</li><li>运算（三元运算、算术运算等）</li></ul><ol start="3"><li><p>动态绑定属性</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">imgSrc</span>&#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span>随机数字</span><span class="template-variable">&#123;&#123;<span class="name">radom</span>&#125;&#125;</span><span class="template-variable">&#123;&#123;<span class="name">radom</span>&gt;<span class="number">5</span> ? <span class="string">&#x27;大于5&#x27;</span>:<span class="string">&#x27;小于等于5&#x27;</span>&#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> data: &#123;</span></span><br><span class="line"><span class="language-xml">    // 字符串类型的数据</span></span><br><span class="line"><span class="language-xml">    info:&quot;hello world!&quot;,</span></span><br><span class="line"><span class="language-xml">    //数组类型的数据</span></span><br><span class="line"><span class="language-xml">    msgList:[&#123;msg:&#x27;hello&#x27;&#125;,&#123;msg:&#x27;big cute!&#x27;&#125;],</span></span><br><span class="line"><span class="language-xml">    imgSrc:&quot;/images/0.jpg&quot;,</span></span><br><span class="line"><span class="language-xml">    radom:Math.random()*10//生成10以内的随机数</span></span><br><span class="line"><span class="language-xml">  &#125;,</span></span><br></pre></td></tr></table></figure></li><li><p>算数运算</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">radom:Math.random().toFixed(2)//生成一个带两位小数的随机数，例如0.34</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span>随机数字</span><span class="template-variable">&#123;&#123;<span class="name">radom</span>*<span class="number">100</span>&gt;<span class="number">50</span> ? <span class="string">&#x27;大于50&#x27;</span>:<span class="string">&#x27;小于等于50&#x27;</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>事件绑定<br>事件：渲染层到逻辑层的通讯方式。通过事件可以将用户在渲染层产生的行为，反馈到逻辑层进行业务的处理</p></li></ol><p><strong>小程序中常用的事件</strong></p><table><thead><tr><th>类型</th><th>绑定方式</th><th>事件描述</th></tr></thead><tbody><tr><td>tap</td><td>bindtap或bind:tap</td><td>手指触摸后马上离开，类似与html中的click事件</td></tr><tr><td>input</td><td>bindinput或bind:input</td><td>文本框的输入事件</td></tr><tr><td>change</td><td>bindchange或bind:change</td><td>状态改变时触发</td></tr></tbody></table><ol start="6"><li>事件对象的属性列表<br>当事件回调触发的时候，会收到一个事件对象event，它的详细属性如下表所示<table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>事件类型</td></tr><tr><td>timeStamp</td><td>integer</td><td>页面打开到触发事件所经过的毫秒数</td></tr><tr><td>target</td><td>Object</td><td>触发事件的组件的一些属性值集合</td></tr><tr><td>currentTarget</td><td>Object</td><td>当前组件中的一些属性值集合</td></tr><tr><td>detail</td><td>Object</td><td>额外的信息</td></tr><tr><td>touches</td><td>Array</td><td>触摸事件，当前停留在屏幕中的触摸点信息的数组</td></tr><tr><td>changedTouches</td><td>Array</td><td>触摸事件，当前变化的触摸点信息的数组</td></tr></tbody></table></li></ol><h4 id="wxss模板样式"><a href="#wxss模板样式" class="headerlink" title="wxss模板样式"></a>wxss模板样式</h4><h4 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h4><h4 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h4><h4 id="网络数据请求"><a href="#网络数据请求" class="headerlink" title="网络数据请求"></a>网络数据请求</h4><h4 id="案例-本地生活（首页）"><a href="#案例-本地生活（首页）" class="headerlink" title="案例-本地生活（首页）"></a>案例-本地生活（首页）</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL server</title>
      <link href="/2023/06/13/sql-server/"/>
      <url>/2023/06/13/sql-server/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-SERVER介绍"><a href="#SQL-SERVER介绍" class="headerlink" title="SQL SERVER介绍"></a>SQL SERVER介绍</h1><p><strong>数据库：</strong>数据库是“按照数据结构来组织、存储和管理数据的仓库”。是一个长期存储在计算机内的、有组织的、可共享的、统一管理的大量数据的集合。</p><p><strong>应用场景：</strong>在软件系统中无处不在，几乎所有的软件系统背后都有数据库，例如（淘宝，QQ，游戏等）。</p><p><strong>数据表展现形式：</strong> （二维表）</p><p><img src="/img%5C001.PNG" alt="001"></p><p><strong>主流关系型数据库：</strong> SQL SERVER，MySQL，Oracle等。</p><p><strong>数据库的安装：</strong></p><p>（1）百度搜索”I tell you”，或者访问 <a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></p><p>（2）选择合适的版本，下载安装。</p><p><img src="/img%5C002.PNG" alt="002"></p><p><strong>打开数据库：</strong></p><p>（1）启动服务：</p><p>​   【1】命令行启动；【2】SQL SERVER配置管理器；【3】Windows服务；</p><p>（2）打开SQL SERVER Management Studio，使用工具连接到数据库。</p><p>​   【1】Windows身份验证； 【2】SQL SERVER身份验证；</p><p> <strong>数据库基本操作：</strong></p><p>（1）建库。</p><p>（2）建表。</p><p>（3）数据维护。</p><p><strong>数据库的迁移：</strong></p><p>（1）数据库的分离、附加；（分离和删除的区别在于硬盘上是否还留存有数据库文件）</p><p>（2）数据库的备份，还原；</p><p>（3）数据库脚本的保存；</p><h1 id="建库建表"><a href="#建库建表" class="headerlink" title="建库建表"></a>建库建表</h1><h2 id="一、检查数据库名是否存在"><a href="#一、检查数据库名是否存在" class="headerlink" title="一、检查数据库名是否存在"></a>一、检查数据库名是否存在</h2><p>如果需要创建数据库，可能会出现数据库名字重名的现象，我们可以使用如下代码查询数据库名是否存在，存在则删除此数据库。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--删除数据库</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sys.databases <span class="keyword">where</span> <span class="type">name</span> = <span class="string">&#x27;DBTEST&#x27;</span>)</span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">database</span> DBTEST</span><br></pre></td></tr></table></figure><p>此代码检查数据库中是否存在”DBTEST”数据库，如果存在则删除此数据库，此处理方式最好只在学习阶段使用，在正式生产环境中慎用，操作不当可能会删除重要数据。</p><h2 id="二、创建数据库"><a href="#二、创建数据库" class="headerlink" title="二、创建数据库"></a>二、创建数据库</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> DBTEST</span><br><span class="line"><span class="keyword">on</span>  <span class="comment">--数据文件</span></span><br><span class="line">(</span><br><span class="line">    <span class="type">name</span> = <span class="string">&#x27;DBTEST&#x27;</span>,   <span class="comment">--逻辑名称</span></span><br><span class="line">    filename = <span class="string">&#x27;D:\Data\DBTEST.mdf&#x27;</span>,  <span class="comment">--物理路径及名称</span></span><br><span class="line">    size = <span class="number">5</span>MB,  <span class="comment">--数据文件初始大小</span></span><br><span class="line">    filegrowth = <span class="number">2</span>MB <span class="comment">--数据文件增长速度,也可以使用百分比来设置</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">log</span> <span class="keyword">on</span>  <span class="comment">--日志文件</span></span><br><span class="line">(</span><br><span class="line">    <span class="type">name</span> = <span class="string">&#x27;DBTEST_log&#x27;</span>, <span class="comment">--逻辑名称</span></span><br><span class="line">    filename = <span class="string">&#x27;D:\Data\DBTEST_log.ldf&#x27;</span>, <span class="comment">--物理路径及名称</span></span><br><span class="line">    size = <span class="number">5</span>MB, <span class="comment">--日志文件初始大小</span></span><br><span class="line">    filegrowth = <span class="number">2</span>MB <span class="comment">--日志文件增长速度,也可以使用百分比来设置</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>以上代码创建”DBTEST”数据库，并且分别使用on和log on规定了数据文件和日志文件的信息。</p><p>创建数据库也可以按照如下简单语法来创建：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> DBTEST</span><br></pre></td></tr></table></figure><p>如果按照上述方式创建数据库，数据库的数据文件和日志文件的相关信息，全部采取默认值。</p><h2 id="三、建表"><a href="#三、建表" class="headerlink" title="三、建表"></a>三、建表</h2><p><strong>使用数据库和删除数据表：</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use DBTEST  <span class="comment">--切换当前数据库为DBTEST</span></span><br><span class="line"><span class="comment">--删除表(先判断表在当前数据库是否存在,存在则删除,其中type=&#x27;U&#x27;判断对象类型为用户定义表类型)</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sys.objects <span class="keyword">where</span> <span class="type">name</span> = <span class="string">&#x27;Department&#x27;</span> <span class="keyword">and</span> <span class="keyword">type</span> = <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br></pre></td></tr></table></figure><p><strong>创建数据表语法：</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 表名</span><br><span class="line"><span class="comment">(</span></span><br><span class="line"><span class="comment">    字段名1 数据类型(长度)</span>,</span><br><span class="line">    字段名<span class="number">2</span> 数据类型<span class="comment">(长度)</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>其中数据类型，我们在后面用到什么类型，在介绍什么类型，有的类型可以不填写长度。</p><p><strong>创建数据表示例（部门表，职级表，员工信息表）：</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建部门表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Department -</span><br><span class="line">(</span><br><span class="line">    <span class="comment">--创建部门编号;int代表整数类型;primary key代表主键;identity(1,1)代表从1开始步长为1自增长;</span></span><br><span class="line">    DepartmentId <span class="type">int</span> <span class="keyword">primary key</span> <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">    <span class="comment">--创建部门名称;nvarchar(50)代表长度50的字符串;not null代表不能为空;</span></span><br><span class="line">    DepartmentName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="comment">--创建部门描述；text代表长文本;</span></span><br><span class="line">    DepartmentRemark <span class="type">text</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>字符串类型比较：</strong></p><p>char：定长，例如 char(10)，不论你存储的数据是否达到了10个字节，都要占去10个字节的空间 。</p><p>varchar：变长，例如varchar(10)，并不代表一定占用10个字节，而代表最多占用10个字节。最大长度8000，也可以使用varchar(max)表示2G以内的数据，但存储机制会和text一样，效率会降低。</p><p>text：长文本， 最大长度为2^31-1(2,147,483,647)个字符 。</p><p>nchar,nvarchar,ntext：名字前面多了一个n， 它表示存储的是Unicode数据类型的字符，区别varchar(100)可以存储100个英文字母或者50个汉字，而nvarchar(100)可以存储100个英文字母，也可以存储100个汉字。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建职级表，rank为系统关键字，此处使用[]代表自定义名字，而非系统关键字</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [Rank]</span><br><span class="line">(</span><br><span class="line">    RankId <span class="type">int</span> <span class="keyword">primary key</span> <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">    RankName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    RankRemark <span class="type">text</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建员工信息表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> People</span><br><span class="line">(</span><br><span class="line">    PeopleId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">    <span class="comment">--references代表外键引用,此字段必须符合与其它表的外键约束</span></span><br><span class="line">    DepartmentId <span class="type">int</span> <span class="keyword">references</span> Department(DepartmentId)  <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    RankId <span class="type">int</span> <span class="keyword">references</span> [Rank](RankId) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    PeopleName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="comment">--default代表字段默认值; check可以规定字段值的约束条件;</span></span><br><span class="line">    PeopleSex nvarchar(<span class="number">1</span>) <span class="keyword">default</span>(<span class="string">&#x27;男&#x27;</span>) <span class="keyword">check</span>(PeopleSex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span> PeopleSex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    PeopleBirth datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    PeopleSalary <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">check</span>(PeopleSalary<span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;=</span> <span class="number">100000</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="comment">--unique代表唯一约束，为数据提供唯一性保证;</span></span><br><span class="line">    PeoplePhone nvarchar(<span class="number">20</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    PeopleAddress nvarchar(<span class="number">100</span>),</span><br><span class="line">    <span class="comment">--datetime和smalldatetime都可以表示时间类型，getdate()用于获取系统当前时间</span></span><br><span class="line">    PeopleAddTime smalldatetime <span class="keyword">default</span>(getdate())</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="四、修改表结构"><a href="#四、修改表结构" class="headerlink" title="四、修改表结构"></a>四、修改表结构</h1><p> （1）如需在表中添加列，请使用下面的语法: </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="built_in">table_name</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="built_in">column_name</span> datatype</span><br></pre></td></tr></table></figure><p>例如该员工表添加一列员工邮箱：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People</span><br><span class="line"><span class="keyword">add</span> PeopleMail nvarchar(<span class="number">100</span>)</span><br></pre></td></tr></table></figure><p>（2）如需在表中删除列，请使用下面的语法: </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="built_in">table_name</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> <span class="built_in">column_name</span></span><br></pre></td></tr></table></figure><p>例如删除员工表中的邮箱这一列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">column</span> PeopleMail</span><br></pre></td></tr></table></figure><p>（3）如需改变表中列的数据类型，请使用下列语法：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="built_in">table_name</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> <span class="built_in">column_name</span> datatype</span><br></pre></td></tr></table></figure><p>例如需要改变邮箱列的数据类型为varchar(100)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">column</span> PeopleMail <span class="type">varchar</span>(<span class="number">100</span>)</span><br></pre></td></tr></table></figure><h2 id="五、删除添加约束"><a href="#五、删除添加约束" class="headerlink" title="五、删除添加约束"></a>五、删除添加约束</h2><p>删除约束语法：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="type">name</span>=约束名)</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 约束名;</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p>添加约束语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--添加主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名称 <span class="keyword">primary</span> key(列名)</span><br><span class="line"><span class="comment">--添加check约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名称 <span class="keyword">check</span>(条件表达式)</span><br><span class="line"><span class="comment">--添加unique约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名称 <span class="keyword">unique</span>(列名)</span><br><span class="line"><span class="comment">--添加default约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名称 <span class="keyword">default</span> 默认值 <span class="keyword">for</span> 列名</span><br><span class="line"><span class="comment">--添加外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名称 <span class="keyword">foreign</span> key (列名) <span class="keyword">references</span> 关联表名(关联表列名)</span><br></pre></td></tr></table></figure><h1 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h1><h2 id="一、向部门表插入数据"><a href="#一、向部门表插入数据" class="headerlink" title="一、向部门表插入数据"></a>一、向部门表插入数据</h2><p><strong>标准语法：</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into <span class="built_in">Department</span>(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="string">&#x27;软件部&#x27;</span>,<span class="string">&#x27;......&#x27;</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Department</span>(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="string">&#x27;硬件部&#x27;</span>,<span class="string">&#x27;......&#x27;</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Department</span>(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="string">&#x27;市场部&#x27;</span>,<span class="string">&#x27;......&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure><p><strong>简写语法：（省略字段名称）</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department <span class="keyword">values</span>(<span class="string">&#x27;行政部&#x27;</span>,<span class="string">&#x27;公司主管行政工作的部门&#x27;</span>)</span><br></pre></td></tr></table></figure><p>此写法在给字段赋值的时候，必须保证顺序和数据表结构中字段顺序完全一致，不推荐使用此种写法，因为数据表结构变化的时候，数据会出错或产生错误数据。</p><p><strong>一次插入多行数据:</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;市场部&#x27;</span>,<span class="string">&#x27;吹牛的部门&#x27;</span> <span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;产品部&#x27;</span>,<span class="string">&#x27;天马星空的部门&#x27;</span> <span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;总经办&#x27;</span>,<span class="string">&#x27;都是领导的部门&#x27;</span> </span><br></pre></td></tr></table></figure><h2 id="二、向职级表插入数据"><a href="#二、向职级表插入数据" class="headerlink" title="二、向职级表插入数据"></a>二、向职级表插入数据</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into <span class="selector-attr">[Rank]</span>(RankName,RankRemark)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="string">&#x27;初级&#x27;</span>,<span class="string">&#x27;辅助其他人完成任务&#x27;</span>)</span></span></span><br><span class="line">insert into <span class="selector-attr">[Rank]</span>(RankName,RankRemark)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="string">&#x27;中级&#x27;</span>,<span class="string">&#x27;具备独立处理事务的能力&#x27;</span>)</span></span></span><br><span class="line">insert into <span class="selector-attr">[Rank]</span>(RankName,RankRemark)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="string">&#x27;高级&#x27;</span>,<span class="string">&#x27;具备可以带动全场节奏的能力&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure><h2 id="三、向员工表插入数据"><a href="#三、向员工表插入数据" class="headerlink" title="三、向员工表插入数据"></a>三、向员工表插入数据</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1984-7-9&#x27;</span>,<span class="number">20000</span>,<span class="string">&#x27;13554785452&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;孙尚香&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1987-7-9&#x27;</span>,<span class="number">15000</span>,<span class="string">&#x27;13256854578&#x27;</span>,<span class="string">&#x27;荆州&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1988-8-8&#x27;</span>,<span class="number">12000</span>,<span class="string">&#x27;13985745871&#x27;</span>,<span class="string">&#x27;荆州&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;张飞&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1990-8-8&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13535987412&#x27;</span>,<span class="string">&#x27;宜昌&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;赵云&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1989-4-8&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13845789568&#x27;</span>,<span class="string">&#x27;宜昌&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;马超&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1995-4-8&#x27;</span>,<span class="number">9500</span>,<span class="string">&#x27;13878562568&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;黄盖&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1989-4-20&#x27;</span>,<span class="number">8500</span>,<span class="string">&#x27;13335457412&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;貂蝉&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1989-4-20&#x27;</span>,<span class="number">6500</span>,<span class="string">&#x27;13437100050&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">2</span>,<span class="string">&#x27;曹操&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1987-12-20&#x27;</span>,<span class="number">25000</span>,<span class="string">&#x27;13889562354&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;许褚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1981-11-11&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13385299632&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;典韦&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1978-1-13&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13478545263&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;曹仁&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1998-12-12&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13878523695&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;孙坚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1968-11-22&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13698545841&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;孙策&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1988-1-22&#x27;</span>,<span class="number">11000</span>,<span class="string">&#x27;13558745874&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;孙权&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1990-2-21&#x27;</span>,<span class="number">12000</span>,<span class="string">&#x27;13698745214&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;大乔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1995-2-21&#x27;</span>,<span class="number">13000</span>,<span class="string">&#x27;13985478512&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;小乔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1996-2-21&#x27;</span>,<span class="number">13500</span>,<span class="string">&#x27;13778787874&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;周瑜&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1992-10-11&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13987455214&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;鲁肃&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1984-9-10&#x27;</span>,<span class="number">5500</span>,<span class="string">&#x27;13254785965&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;吕蒙&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1987-5-19&#x27;</span>,<span class="number">8500</span>,<span class="string">&#x27;13352197364&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;陆逊&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1996-5-19&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13025457392&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>,getdate()</span></span>)</span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">People</span>(DepartmentId,RankId,PeopleName,PeopleSex,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;太史慈&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1983-6-1&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13077778888&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,getdate()</span></span>)</span><br></pre></td></tr></table></figure><p>其中DepartmentId，RankId，PeopleSalary均为数字类型，在赋值的时候不需要添加单引号，而其它类型需要添加单引号。</p><h2 id="四、查询数据是否插入成功"><a href="#四、查询数据是否插入成功" class="headerlink" title="四、查询数据是否插入成功"></a>四、查询数据是否插入成功</h2><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> Department</span><br><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> [<span class="built_in">Rank</span>]</span><br><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> People </span><br></pre></td></tr></table></figure><h1 id="修改和删除数据"><a href="#修改和删除数据" class="headerlink" title="修改和删除数据"></a>修改和删除数据</h1><h2 id="一、修改数据示例"><a href="#一、修改数据示例" class="headerlink" title="一、修改数据示例"></a>一、修改数据示例</h2><p>工资普调，为每个员工+500 元工资（批量修改）</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update People <span class="keyword">set</span> PeopleSalary <span class="comment">= PeopleSalary + 500</span></span><br></pre></td></tr></table></figure><p>将员工编号为8的工资+1000 元（根据条件修改）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary = PeopleSalary + <span class="number">1000</span> <span class="keyword">WHERE</span> PeopleId = <span class="number">8</span></span><br></pre></td></tr></table></figure><p>将软件部（部门编号已知&#x3D;1）所有员工工资低于1万的全部调整成1 万（根据多条件修改）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update People <span class="built_in">set</span> PEOPLESALARY = 10000 WHERE <span class="attribute">DepartmentId</span>=1 <span class="keyword">and</span> PEOPLESALARY &lt; 10000</span><br></pre></td></tr></table></figure><p>修改刘备工资为以前的2 倍，并且修改其地址为北京（同时修改多个字段）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE People <span class="built_in">SET</span> PEOPLESALARY = PEOPLESALARY<span class="number">*2</span>,<span class="attribute">PEOPLEADDRESS</span>=<span class="string">&#x27;北京&#x27;</span> WHERE PEOPLENAME = <span class="string">&#x27;刘备&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="二、删除数据示例"><a href="#二、删除数据示例" class="headerlink" title="二、删除数据示例"></a>二、删除数据示例</h2><p>删除员工表中所有数据</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> People</span><br></pre></td></tr></table></figure><p>删除市场部(已知部门编号&#x3D;3)中工资大于15000 的所有员工</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> People <span class="keyword">WHERE</span> DepartmentId = <span class="number">3</span> <span class="keyword">and</span> PEOPLESALARY &gt; <span class="number">15000</span></span><br></pre></td></tr></table></figure><h2 id="三、drop、truncate、delete区别"><a href="#三、drop、truncate、delete区别" class="headerlink" title="三、drop、truncate、delete区别"></a>三、drop、truncate、delete区别</h2><p>drop table:删除表对象，表数据、表结构、表对象都进行了删除。</p><p>delete和truncate table：删除表数据，表对象及表结构依然存在。</p><p><strong>delete与truncate table的区别如下：</strong></p><p>delete：</p><p>（1）可以删除表所有数据，也可以根据条件删除数据。</p><p>（2）如果有自动编号，删除后继续编号，例如delete删除表所有数据后，之前数据的自动编号是1，2，3，那么之后新增数据的编号从4开始。</p><p>truncate table：</p><p>（1）只能清空整个表数据，不能根据条件删除数据。</p><p>（2）如果有自动编号，清空表数据后重新编号，例如truncate table清空表所有数据后，之前数据的自动编号是1，2，3，那么之后新增数据的编号仍然从1开始。</p><h1 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h1><p>（1）查询所有行所有列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询所有的部门</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Department</span><br><span class="line"><span class="comment">--查询所有的职级</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [Rank]</span><br><span class="line"><span class="comment">--查询所有的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> People</span><br></pre></td></tr></table></figure><p>（2）指定列查询（姓名，性别，月薪，电话）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PeopleName,PeopleSex,PeopleSalary,PeoplePhone <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（3）指定列查询,并自定义中文列名（姓名，性别，月薪，电话）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PeopleName 姓名,PeopleSex 性别,PeopleSalary 工资,PeoplePhone 电话 <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（4）查询公司员工所在城市（不需要重复数据）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> PeopleAddress <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（5）假设工资普调10%，查询原始工资和调整后的工资，显示（姓名，性别，月薪，加薪后的月薪）（添加列查询）。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">SELECT</span> PeopleName 姓名,PeopleSex 性别,PeopleSalary 月薪,PeopleSalary*<span class="number">1</span>.<span class="number">1</span> 加薪后月薪 from People</span><br></pre></td></tr></table></figure><h1 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h1><p><strong>SQL中常用运算符</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">=：等于，比较是否相等及赋值</span><br><span class="line">!=：比较不等于</span><br><span class="line">&gt;：比较大于</span><br><span class="line">&lt;：比较小于</span><br><span class="line">&gt;=：比较大于等于</span><br><span class="line">&lt;=：比较小于等于</span><br><span class="line">IS NULL：比较为空</span><br><span class="line">IS <span class="built_in">NOT</span> NULL：比较不为空</span><br><span class="line">in：比较是否在其中</span><br><span class="line">like：模糊查询</span><br><span class="line">BETWEEN...AND...：比较是否在两者之间</span><br><span class="line"><span class="built_in">and</span>：逻辑与（两个条件同时成立表达式成立）</span><br><span class="line"><span class="built_in">or</span>：逻辑或（两个条件有一个成立表达式成立） </span><br><span class="line"><span class="built_in">not</span>：逻辑非（条件成立，表达式则不成立；条件不成立，表达式则成立）</span><br></pre></td></tr></table></figure><p><strong>查询示例：</strong></p><p>（1）根据指定列（姓名，性别，月薪，电话）查询性别为女的员工信息,并自定义中文列名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PeopleName 姓名,PeopleSex 性别,PeopleSalary 工资,PeoplePhone 电话 <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">WHERE</span> PEOPLESEX = <span class="string">&#x27;女&#x27;</span></span><br></pre></td></tr></table></figure><p>（2）查询月薪大于等于10000 的员工信息( 单条件 )</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary &gt;= <span class="number">10000</span> </span><br></pre></td></tr></table></figure><p>（3）查询月薪大于等于10000 的女员工信息(多条件)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary &gt;= <span class="number">10000</span> and PeopleSex = <span class="string">&#x27;女&#x27;</span></span><br></pre></td></tr></table></figure><p>（4）显示出出身年月在1980-1-1之后，而且月薪大于等于10000的女员工信息。</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleBirth &gt;= <span class="string">&#x27;1980-1-1&#x27;</span> and PeopleSalary &gt;= <span class="number">10000</span> and PeopleSex = <span class="string">&#x27;女&#x27;</span></span><br></pre></td></tr></table></figure><p>（5）显示出月薪大于等于15000 的员工,或者月薪大于等于8000的女员工信息。</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary &gt;= <span class="number">15000</span> or (PeopleSalary &gt;= <span class="number">8000</span> and PeoPleSex = <span class="string">&#x27;女&#x27;</span>)</span><br></pre></td></tr></table></figure><p>（6）查询月薪在10000-20000 之间员工信息( 多条件 )</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;=</span> <span class="number">20000</span></span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary  <span class="keyword">between</span> <span class="number">10000</span> <span class="keyword">and</span> <span class="number">20000</span></span><br></pre></td></tr></table></figure><p>（7）查询出地址在北京或者上海的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span> <span class="keyword">or</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;上海&#x27;</span></span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeopleAddress <span class="keyword">in</span>(<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br></pre></td></tr></table></figure><p>（8）查询所有员工信息(根据工资排序，降序排列)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--<span class="keyword">order</span> <span class="keyword">by</span>: 排序  <span class="keyword">asc</span>: 正序  <span class="keyword">desc</span>: 倒序</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>（9）显示所有的员工信息，按照名字的长度进行倒序排列</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">order</span> <span class="keyword">by</span> len(PeopleName) <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>（10）查询工资最高的5个人的信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">5</span> * <span class="keyword">from</span> People <span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>（11）查询工资最高的10%的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> percent * <span class="keyword">from</span> People <span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>（12）查询出地址没有填写的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleAddress <span class="keyword">is</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure><p>（13）查询出地址已经填写的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleAddress <span class="keyword">is</span> not <span class="literal">null</span></span><br></pre></td></tr></table></figure><p>（14）查询所有的80后员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeopleBirth <span class="operator">&gt;=</span> <span class="string">&#x27;1980-1-1&#x27;</span> <span class="keyword">and</span> PeopleBirth <span class="operator">&lt;=</span> <span class="string">&#x27;1989-12-31&#x27;</span></span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeopleBirth <span class="keyword">between</span> <span class="string">&#x27;1980-1-1&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;1989-12-31&#x27;</span></span><br><span class="line"><span class="comment">--方案三：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&gt;=</span> <span class="number">1980</span> <span class="keyword">and</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;=</span> <span class="number">1989</span></span><br></pre></td></tr></table></figure><p>（15）查询年龄在30-40 之间，并且工资在15000-30000 之间的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span></span><br><span class="line">(<span class="keyword">year</span>(getdate())<span class="operator">-</span><span class="keyword">year</span>(PeopleBirth) <span class="operator">&gt;=</span> <span class="number">30</span> <span class="keyword">and</span> <span class="keyword">year</span>(getdate())<span class="operator">-</span><span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;=</span> <span class="number">40</span>) <span class="keyword">and</span></span><br><span class="line">(PeopleSalary <span class="operator">&gt;=</span> <span class="number">15000</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;=</span> <span class="number">30000</span>)</span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span></span><br><span class="line">(<span class="keyword">year</span>(getdate())<span class="operator">-</span><span class="keyword">year</span>(PeopleBirth) <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">40</span>)</span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="keyword">between</span> <span class="number">15000</span> <span class="keyword">and</span> <span class="number">30000</span></span><br></pre></td></tr></table></figure><p>（16）查询出巨蟹 6.22–7.22 的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> </span><br><span class="line">(<span class="keyword">month</span>(PeopleBirth) <span class="operator">=</span> <span class="number">6</span> <span class="keyword">and</span> <span class="keyword">DAY</span>(PeopleBirth) <span class="operator">&gt;=</span> <span class="number">22</span>) <span class="keyword">or</span></span><br><span class="line">(<span class="keyword">month</span>(PeopleBirth) <span class="operator">=</span> <span class="number">7</span> <span class="keyword">and</span> <span class="keyword">DAY</span>(PeopleBirth) <span class="operator">&lt;=</span> <span class="number">22</span>)</span><br></pre></td></tr></table></figure><p>（17）查询工资比赵云高的人</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary &gt; </span><br><span class="line">(<span class="keyword">select</span> PeopleSalary <span class="keyword">from</span> People <span class="keyword">where</span> PEOPLENAME = <span class="string">&#x27;赵云&#x27;</span>)</span><br></pre></td></tr></table></figure><p>（18）查询出和赵云在同一个城市的人</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PEOPLEADDRESS = </span><br><span class="line">(<span class="keyword">select</span> PEOPLEADDRESS <span class="keyword">from</span> People <span class="keyword">where</span> PEOPLENAME = <span class="string">&#x27;赵云&#x27;</span>)</span><br></pre></td></tr></table></figure><p>（19）查询出生肖为鼠的人员信息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> People <span class="keyword">where</span> <span class="title">year</span>(<span class="params">PeopleBirth</span>) % 12</span> = <span class="number">4</span></span><br></pre></td></tr></table></figure><p>（20）查询所有员工信息，添加一列显示属相(鼠,牛,虎,兔,龙,蛇,马,羊,猴,鸡,狗,猪)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> PeopleName 姓名,PeopleSex 性别,PeopleSalary 工资,PeoplePhone 电话,PEOPLEBIRTH 生日,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;鼠&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;牛&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">6</span> <span class="keyword">then</span> <span class="string">&#x27;虎&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;兔&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;龙&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">9</span> <span class="keyword">then</span> <span class="string">&#x27;蛇&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;马&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">11</span> <span class="keyword">then</span> <span class="string">&#x27;羊&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;猴&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;鸡&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;狗&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;猪&#x27;</span></span><br><span class="line">    <span class="keyword">ELSE</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">end</span> 生肖</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"> </span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> PeopleName 姓名,PeopleSex 性别,PeopleSalary 工资,PeoplePhone 电话,PEOPLEBIRTH 生日,</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">%</span> <span class="number">12</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;鼠&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;牛&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">6</span> <span class="keyword">then</span> <span class="string">&#x27;虎&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;兔&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;龙&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">9</span> <span class="keyword">then</span> <span class="string">&#x27;蛇&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;马&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">11</span> <span class="keyword">then</span> <span class="string">&#x27;羊&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;猴&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;鸡&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;狗&#x27;</span></span><br><span class="line">    <span class="keyword">when</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;猪&#x27;</span></span><br><span class="line">    <span class="keyword">ELSE</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">end</span> 生肖</span><br><span class="line"><span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><h1 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h1><p>模糊查询使用like关键字和通配符结合来实现，通配符具体含义如下：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%：代表匹配0个字符、1个字符或多个字符。</span></span><br><span class="line"><span class="symbol">_</span>：代表匹配有且只有<span class="number">1</span>个字符。</span><br><span class="line">[]：代表匹配范围内</span><br><span class="line">[^]：代表匹配不在范围内</span><br></pre></td></tr></table></figure><p>（1）查询姓刘的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People  <span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;刘%&#x27;</span></span><br></pre></td></tr></table></figure><p>（2）查询名字中含有 “ 尚 “ 的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People  <span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;%尚%&#x27;</span></span><br></pre></td></tr></table></figure><p>（3）显示名字中含有“尚”或者“史”的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People  <span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;%尚%&#x27;</span> or PeopleName <span class="keyword">like</span> <span class="string">&#x27;%史%&#x27;</span></span><br></pre></td></tr></table></figure><p>（4）查询姓刘的员工，名字是2个字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People  <span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;刘_&#x27;</span></span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> <span class="built_in">SUBSTRING</span>(PeopleName,<span class="number">1</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;刘&#x27;</span> <span class="keyword">and</span> LEN(PeopleName) <span class="operator">=</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>（5）查询出名字最后一个字是香，名字一共三个字的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People  <span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;__香&#x27;</span></span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> <span class="built_in">SUBSTRING</span>(PeopleName,<span class="number">3</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;香&#x27;</span> <span class="keyword">and</span> LEN(PeopleName) <span class="operator">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>（6）查询出电话号码开头138的员工信息</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People  <span class="keyword">where</span> PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138%&#x27;</span></span><br></pre></td></tr></table></figure><p>（7）查询出电话号码开头138的员工信息,第4位可能是7，可能8 ，最后一个号码是5</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138[7,8]%5&#x27;</span></span><br></pre></td></tr></table></figure><p>（8）查询出电话号码开头133的员工信息,第4位是2-5之间的数字 ，最后一个号码不是2和3</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;133[2,3,4,5]%[^2,3]&#x27;</span></span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;133[2-5]%[^2-3]&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h1><p>SQL SERVER中聚合函数主要有：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">count:</span>求数量</span><br><span class="line"><span class="symbol">max:</span>求最大值</span><br><span class="line"><span class="symbol">min:</span>求最小值</span><br><span class="line"><span class="symbol">sum:</span>求和</span><br><span class="line"><span class="symbol">avg:</span>求平均值</span><br></pre></td></tr></table></figure><h2 id="一、聚合函数举例应用"><a href="#一、聚合函数举例应用" class="headerlink" title="一、聚合函数举例应用"></a>一、聚合函数举例应用</h2><p>（1）求员工总人数</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(*) 数量 <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（2）求最大值，求最高工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">MAX</span>(PeopleSalary) 最高工资 <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（3）求最小时，求最小工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">MIN</span>(PeopleSalary) 最低工资 <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（4）求和，求所有员工的工资总和</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUM</span>(PeopleSalary) 工资总和 <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>（5）求平均值，求所有员工的平均工资</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> AVG(PeopleSalary) 平均工资 <span class="keyword">from</span> People</span><br><span class="line"><span class="comment">--方案二：精确到2位小数</span></span><br><span class="line"><span class="keyword">select</span> ROUND(AVG(PeopleSalary),<span class="number">2</span>)  平均工资 <span class="keyword">from</span> People</span><br><span class="line"><span class="comment">--方案三：精确到2位小数</span></span><br><span class="line"><span class="keyword">select</span> Convert(<span class="type">decimal</span>(<span class="number">12</span>,<span class="number">2</span>),AVG(PeopleSalary))  平均工资 <span class="keyword">from</span> People</span><br></pre></td></tr></table></figure><p>ROUND函数用法：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">round(num,len,[<span class="keyword">type</span>])</span><br><span class="line">其中:</span><br><span class="line">num表示需要处理的数字，len表示需要保留的长度，<span class="keyword">type</span>处理类型(<span class="number">0</span>是默认值代表四舍五入，非<span class="number">0</span>代表直接截取)</span><br><span class="line"><span class="keyword">select</span> ROUND(<span class="number">123.45454</span>,<span class="number">3</span>)  <span class="comment">--123.45500</span></span><br><span class="line"><span class="keyword">select</span> ROUND(<span class="number">123.45454</span>,<span class="number">3</span>,<span class="number">1</span>) <span class="comment">--123.45400</span></span><br></pre></td></tr></table></figure><p>（6）求数量，最大值，最小值，总和，平均值，在一行显示</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="built_in">COUNT</span>(*) 数量,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,<span class="built_in">AVG</span>(PeopleSalary) 平均工资 from People</span><br></pre></td></tr></table></figure><p>（7）查询出武汉地区的员工人数，总工资，最高工资，最低工资和平均工资</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;武汉&#x27;</span> 地区,<span class="built_in">COUNT</span>(*) 数量,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资</span><br><span class="line">,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,<span class="built_in">AVG</span>(PeopleSalary) 平均工资 <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">WHERE</span> PEOPLEADDRESS = <span class="string">&#x27;武汉&#x27;</span></span><br></pre></td></tr></table></figure><p>（8）求出工资比平均工资高的人员信息</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">where</span> PeopleSalary &gt; (<span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) 平均工资 <span class="keyword">from</span> People)</span><br></pre></td></tr></table></figure><p>（9）求数量，年龄最大值，年龄最小值，年龄总和，年龄平均值，在一行显示</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--方案一：</span><br><span class="line">select <span class="built_in">COUNT</span>(*) 数量,</span><br><span class="line"><span class="function"><span class="title">MAX</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 最高年龄,</span><br><span class="line"><span class="function"><span class="title">MIN</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 最低年龄,</span><br><span class="line"><span class="function"><span class="title">SUM</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 年龄总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 平均年龄 </span><br><span class="line">from People</span><br><span class="line">--方案二：</span><br><span class="line">select <span class="built_in">COUNT</span>(*) 数量,</span><br><span class="line"><span class="function"><span class="title">MAX</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 最高年龄,</span><br><span class="line"><span class="function"><span class="title">MIN</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 最低年龄,</span><br><span class="line"><span class="function"><span class="title">SUM</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 年龄总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 平均年龄 </span><br><span class="line">from People</span><br></pre></td></tr></table></figure><p>（10）计算出月薪在10000 以上的男性员工的最大年龄，最小年龄和平均年龄</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--方案一：</span><br><span class="line">select <span class="string">&#x27;男&#x27;</span> 性别,<span class="built_in">COUNT</span>(*) 数量,</span><br><span class="line"><span class="function"><span class="title">MAX</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 最高年龄,</span><br><span class="line"><span class="function"><span class="title">MIN</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 最低年龄,</span><br><span class="line"><span class="function"><span class="title">SUM</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 年龄总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 平均年龄 </span><br><span class="line">from People where PeopleSex = <span class="string">&#x27;男&#x27;</span> and PeopleSalary &gt;= <span class="number">10000</span></span><br><span class="line">--方案二：</span><br><span class="line">select <span class="string">&#x27;男&#x27;</span> 性别,<span class="built_in">COUNT</span>(*) 数量,</span><br><span class="line"><span class="function"><span class="title">MAX</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 最高年龄,</span><br><span class="line"><span class="function"><span class="title">MIN</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 最低年龄,</span><br><span class="line"><span class="function"><span class="title">SUM</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 年龄总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 平均年龄 </span><br><span class="line">from People where PeopleSex = <span class="string">&#x27;男&#x27;</span> and PeopleSalary &gt;= <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>（11）统计出所在地在“武汉或上海”的所有女员工数量以及最大年龄，最小年龄和平均年龄</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--方案一：</span><br><span class="line">select <span class="string">&#x27;武汉或上海&#x27;</span> 地区,<span class="string">&#x27;女&#x27;</span> 性别,<span class="built_in">COUNT</span>(*) 数量,</span><br><span class="line"><span class="function"><span class="title">MAX</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 最高年龄,</span><br><span class="line"><span class="function"><span class="title">MIN</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 最低年龄,</span><br><span class="line"><span class="function"><span class="title">SUM</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 年龄总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(year(getdate()</span></span>)<span class="built_in">-year</span>(PeopleBirth)) 平均年龄  </span><br><span class="line">from People where PeopleSex = <span class="string">&#x27;女&#x27;</span> and PeopleAddress <span class="built_in">in</span>(<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line">--方案二：</span><br><span class="line">select <span class="string">&#x27;武汉或上海&#x27;</span> 地区,<span class="string">&#x27;女&#x27;</span> 性别,<span class="built_in">COUNT</span>(*) 数量,</span><br><span class="line"><span class="function"><span class="title">MAX</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 最高年龄,</span><br><span class="line"><span class="function"><span class="title">MIN</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 最低年龄,</span><br><span class="line"><span class="function"><span class="title">SUM</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 年龄总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(DATEDIFF(year, PeopleBirth, getDate()</span></span>)) 平均年龄  </span><br><span class="line">from People where PeopleSex = <span class="string">&#x27;女&#x27;</span> and PeopleAddress <span class="built_in">in</span>(<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br></pre></td></tr></table></figure><p>（12）求出年龄比平均年龄高的人员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> </span><br><span class="line"><span class="keyword">year</span>(getdate())<span class="operator">-</span><span class="keyword">year</span>(PeopleBirth) <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">AVG</span>(<span class="keyword">year</span>(getdate())<span class="operator">-</span><span class="keyword">year</span>(PeopleBirth)) </span><br><span class="line"><span class="keyword">from</span> People)</span><br><span class="line"><span class="comment">--方案二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> </span><br><span class="line">DATEDIFF(<span class="keyword">year</span>, PeopleBirth, getDate()) <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">AVG</span>(DATEDIFF(<span class="keyword">year</span>, PeopleBirth, getDate())) </span><br><span class="line"><span class="keyword">from</span> People)</span><br></pre></td></tr></table></figure><h2 id="二、补充-SQL中常用时间处理函数"><a href="#二、补充-SQL中常用时间处理函数" class="headerlink" title="二、补充-SQL中常用时间处理函数"></a>二、补充-SQL中常用时间处理函数</h2><p>GETDATE() 返回当前的日期和时间</p><p>DATEPART() 返回日期&#x2F;时间的单独部分</p><p>DATEADD()  返回日期中添加或减去指定的时间间隔</p><p>DATEDIFF() 返回两个日期直接的时间</p><p>DATENAME() 返回指定日期的指定日期部分的整数</p><p>CONVERT()  返回不同格式的时间</p><p><strong>示例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATEDIFF(<span class="keyword">day</span>, <span class="string">&#x27;2019-08-20&#x27;</span>, getDate());    <span class="comment">--获取指定时间单位的差值</span></span><br><span class="line"><span class="keyword">SELECT</span> DATEADD(<span class="keyword">MINUTE</span>,<span class="number">-5</span>,GETDATE())               <span class="comment">--加减时间,此处为获取五分钟前的时间,MINUTE 表示分钟，可为 YEAR,MONTH,DAY,HOUR</span></span><br><span class="line"><span class="keyword">select</span> DATENAME(<span class="keyword">month</span>, getDate());                <span class="comment">--当前月份</span></span><br><span class="line"><span class="keyword">select</span> DATENAME(WEEKDAY, getDate());              <span class="comment">--当前星期几</span></span><br><span class="line"><span class="keyword">select</span> DATEPART(<span class="keyword">month</span>, getDate());                <span class="comment">--当前月份</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">DAY</span>(getDate());                            <span class="comment">--返回当前日期天数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">MONTH</span>(getDate());                          <span class="comment">--返回当前日期月数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">YEAR</span>(getDate());                           <span class="comment">--返回当前日期年数</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">22</span>),GETDATE(),<span class="number">20</span>)          <span class="comment">--2020-01-09 14:46:46</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">24</span>),GETDATE(),<span class="number">21</span>)          <span class="comment">--2020-01-09 14:46:55.91</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">22</span>),GETDATE(),<span class="number">23</span>)          <span class="comment">--2020-01-09</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONVERT</span>(<span class="type">VARCHAR</span>(<span class="number">22</span>),GETDATE(),<span class="number">24</span>)          <span class="comment">--15:04:07</span></span><br><span class="line"><span class="keyword">Select</span> <span class="keyword">CONVERT</span>(<span class="type">varchar</span>(<span class="number">20</span>),GETDATE(),<span class="number">14</span>)          <span class="comment">--15:05:49:330</span></span><br></pre></td></tr></table></figure><p><strong>时间格式控制字符串：</strong></p><table><thead><tr><th>名称</th><th>日期单位</th><th>缩写</th></tr></thead><tbody><tr><td>年</td><td>year</td><td>yyyy 或yy</td></tr><tr><td>季度</td><td>quarter</td><td>qq,q</td></tr><tr><td>月</td><td>month</td><td>mm,m</td></tr><tr><td>一年中第几天</td><td>dayofyear</td><td>dy,y</td></tr><tr><td>日</td><td>day</td><td>dd,d</td></tr><tr><td>一年中第几周</td><td>week</td><td>wk,ww</td></tr><tr><td>星期</td><td>weekday</td><td>dw</td></tr><tr><td>小时</td><td>Hour</td><td>hh</td></tr><tr><td>分钟</td><td>minute</td><td>mi,n</td></tr><tr><td>秒</td><td>second</td><td>ss,s</td></tr><tr><td>毫秒</td><td>millisecond</td><td>ms</td></tr></tbody></table><h1 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h1><p>（1）根据员工所在地区分组统计员工人数 ,员工工资总和 ,平均工资，最高工资和最低工资</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--方案一：使用union(此方案需要知道所有的地区，分别查询出所有地区的数据，然后使用union拼接起来。)</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;武汉&#x27;</span> 地区,COUNT(*) 数量,MAX(PeopleSalary) 最高工资,MIN(PeopleSalary) 最低工资</span><br><span class="line">,SUM(PeopleSalary) 工资总和,AVG(PeopleSalary) 平均工资 <span class="keyword">from</span> People</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress = <span class="string">&#x27;武汉&#x27;</span> <span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;北京&#x27;</span> 地区,COUNT(*) 数量,MAX(PeopleSalary) 最高工资,MIN(PeopleSalary) 最低工资</span><br><span class="line">,SUM(PeopleSalary) 工资总和,AVG(PeopleSalary) 平均工资 <span class="keyword">from</span> People</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress = <span class="string">&#x27;北京&#x27;</span></span><br><span class="line"> <span class="comment">--...其它地区数据</span></span><br><span class="line"> <span class="comment">--...其他地区数据</span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">--方案二：使用Group by</span></span><br><span class="line"><span class="keyword">select</span> PeopleAddress 地区,COUNT(*) 人数,SUM(PeopleSalary) 工资总和,</span><br><span class="line">AVG(PeopleSalary) 平均工资,MAX(PeopleSalary) 最高工资,MIN(PeopleSalary) 最低工资 </span><br><span class="line"><span class="keyword">from</span> People <span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br></pre></td></tr></table></figure><p>（2）根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资，1985 年及以后出身的员工不参与统计。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> PeopleAddress 地区,<span class="built_in">COUNT</span>(*) 人数,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,</span><br><span class="line"><span class="built_in">AVG</span>(PeopleSalary) 平均工资,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资 </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleBirth &lt; <span class="string">&#x27;1985-1-1&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br></pre></td></tr></table></figure><p>（3）根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资，要求筛选出员工人数至少在2人及以上的记录，并且1985年及以后出身的员工不参与统计。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> PeopleAddress 地区,<span class="built_in">COUNT</span>(*) 人数,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,</span><br><span class="line"><span class="built_in">AVG</span>(PeopleSalary) 平均工资,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资 </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleBirth &lt; <span class="string">&#x27;1985-1-1&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">COUNT</span>(*) &gt;= <span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h2 id="一、笛卡尔乘积"><a href="#一、笛卡尔乘积" class="headerlink" title="一、笛卡尔乘积"></a>一、笛卡尔乘积</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People,Department</span><br></pre></td></tr></table></figure><p>此查询结果会将People表的所有数据和Department表的所有数据进行依次排列组合形成新的记录。例如People表有10条记录，Department表有3条记录，则排列组合之后查询结果会有10*3&#x3D;30条记录。</p><h2 id="二、简单多表查询"><a href="#二、简单多表查询" class="headerlink" title="二、简单多表查询"></a>二、简单多表查询</h2><p>此种查询不符合主外建关系的数据不会被显示</p><p><strong>查询员工信息，同时显示部门名称</strong></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People,Department <span class="keyword">where</span> People.DepartmentId = Department.DepartmentId </span><br></pre></td></tr></table></figure><p><strong>查询员工信息，同时显示职级名称</strong></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> People,<span class="built_in">Rank</span> where People.<span class="built_in">RankId</span> = <span class="built_in">Rank</span>.<span class="built_in">RankId</span></span><br></pre></td></tr></table></figure><p><strong>查询员工信息，同时显示部门名称，职位名称</strong></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> People,Department,<span class="built_in">Rank</span></span><br><span class="line">where People.DepartmentId = Department.DepartmentId <span class="built_in">and</span> People.<span class="built_in">RankId</span> = <span class="built_in">Rank</span>.<span class="built_in">RankId</span></span><br></pre></td></tr></table></figure><h2 id="三、内连接"><a href="#三、内连接" class="headerlink" title="三、内连接"></a>三、内连接</h2><p>此种查询不符合主外建关系的数据不会被显示</p><p><strong>查询员工信息，同时显示部门名称</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId = Department.DepartmentId </span><br></pre></td></tr></table></figure><p><strong>查询员工信息，同时显示职级名称</strong></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> People inner <span class="built_in">join</span> <span class="built_in">Rank</span> on People.<span class="built_in">RankId</span> = <span class="built_in">Rank</span>.<span class="built_in">RankId</span></span><br></pre></td></tr></table></figure><p><strong>查询员工信息，同时显示部门名称，职位名称</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId = Department.DepartmentId </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Rank <span class="keyword">on</span> People.RankId = Rank.RankId</span><br></pre></td></tr></table></figure><h2 id="三、外连接"><a href="#三、外连接" class="headerlink" title="三、外连接"></a>三、外连接</h2><p>外连接分为左外连接、右外连接和全外连接。</p><p>左外联接：以左表为主表显示全部数据，主外键关系找不到数据的地方null取代。</p><p><strong>以下是左外连接的语法示例：</strong></p><p><strong>查询员工信息，同时显示部门名称</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId = Department.DepartmentId </span><br></pre></td></tr></table></figure><p><strong>查询员工信息，同时显示职级名称</strong></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span> * <span class="keyword">from</span> People left <span class="built_in">join</span> <span class="built_in">Rank</span> on People.<span class="built_in">RankId</span> = <span class="built_in">Rank</span>.<span class="built_in">RankId</span></span><br></pre></td></tr></table></figure><p><strong>查询员工信息，同时显示部门名称，职位名称</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId = Department.DepartmentId </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Rank <span class="keyword">on</span> People.RankId = Rank.RankId</span><br></pre></td></tr></table></figure><p>右外连接（right join）：右外连接和左外连接类似，A left join B  &#x3D;&#x3D;  B right join A</p><p>全外连接（full join）：两张表的所有数据无论是否符合主外键关系必须全部显示，不符合主外键关系的地方null取代。</p><h2 id="四、多表查询综合示例"><a href="#四、多表查询综合示例" class="headerlink" title="四、多表查询综合示例"></a>四、多表查询综合示例</h2><p>（1）查询出武汉地区所有的员工信息，要求显示部门名称以及员工的详细资料</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> PeopleName 姓名,People.DepartmentId 部门编号 ,DepartmentName 部门名称,</span><br><span class="line">PeopleSex 性别,PeopleBirth 生日,</span><br><span class="line">PeopleSalary 月薪,PeoplePhone 电话,PeopleAddress 地区</span><br><span class="line"><span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> DEPARTMENT <span class="keyword">on</span> Department.DepartmentId = People.DepartmentId</span><br><span class="line"><span class="keyword">where</span> PeopleAddress = <span class="string">&#x27;武汉&#x27;</span></span><br></pre></td></tr></table></figure><p>（2）查询出武汉地区所有的员工信息，要求显示部门名称，职级名称以及员工的详细资料</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> PeopleName 姓名,DepartmentName 部门名称,RankName 职位名称,</span><br><span class="line">PeopleSex 性别,PeopleBirth 生日,</span><br><span class="line">PeopleSalary 月薪,PeoplePhone 电话,PeopleAddress 地区</span><br><span class="line"><span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> DEPARTMENT <span class="keyword">on</span> Department.DepartmentId = People.DepartmentId</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> [Rank].RankId = People.RankId</span><br><span class="line"><span class="keyword">where</span> PeopleAddress = <span class="string">&#x27;武汉&#x27;</span></span><br></pre></td></tr></table></figure><p>（3）根据部门分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--提示：在进行分组统计查询的时候添加二表联合查询。</span><br><span class="line"><span class="keyword">select</span> DepartmentName 部门名称,<span class="built_in">COUNT</span>(*) 人数,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,</span><br><span class="line"><span class="built_in">AVG</span>(PeopleSalary) 平均工资,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资 </span><br><span class="line"><span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> DEPARTMENT <span class="keyword">on</span> Department.DepartmentId = People.DepartmentId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Department.DepartmentId,DepartmentName</span><br></pre></td></tr></table></figure><p>（4）根据部门分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资，平均工资在10000 以下的不参与统计，并且根据平均工资降序排列。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DepartmentName 部门名称,<span class="built_in">COUNT</span>(*) 人数,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,</span><br><span class="line"><span class="built_in">AVG</span>(PeopleSalary) 平均工资,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资 </span><br><span class="line"><span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> DEPARTMENT <span class="keyword">on</span> Department.DepartmentId = People.DepartmentId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Department.DepartmentId,DepartmentName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">AVG</span>(PeopleSalary) &gt;= <span class="number">10000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>（5）根据部门名称，然后根据职位名称，分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select DepartmentName 部门名称,RANKNAME 职级名称,<span class="built_in">COUNT</span>(*) 人数,<span class="built_in">SUM</span>(PeopleSalary) 工资总和,</span><br><span class="line"><span class="function"><span class="title">AVG</span><span class="params">(PeopleSalary)</span></span> 平均工资,<span class="built_in">MAX</span>(PeopleSalary) 最高工资,<span class="built_in">MIN</span>(PeopleSalary) 最低工资 </span><br><span class="line">from People </span><br><span class="line">LEFT JOIN DEPARTMENT on Department<span class="selector-class">.DepartmentId</span> = People<span class="selector-class">.DepartmentId</span></span><br><span class="line">LEFT JOIN <span class="selector-attr">[Rank]</span> on <span class="selector-attr">[Rank]</span><span class="selector-class">.RANKID</span> = People<span class="selector-class">.RANKID</span></span><br><span class="line">group by Department<span class="selector-class">.DepartmentId</span>,DepartmentName,<span class="selector-attr">[Rank]</span><span class="selector-class">.RANKID</span>,RANKNAME</span><br></pre></td></tr></table></figure><h2 id="五、自连接"><a href="#五、自连接" class="headerlink" title="五、自连接"></a>五、自连接</h2><p>自连接：自己连接自己。</p><p>例如有如下结构和数据：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">create <span class="selector-tag">table</span> Dept</span><br><span class="line">(</span><br><span class="line">    DeptId int primary key,  --部门编号</span><br><span class="line">    DeptName <span class="built_in">varchar</span>(<span class="number">50</span>) not null, --部门名称</span><br><span class="line">    ParentId int not null,  --上级部门编号</span><br><span class="line">)</span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">1</span>,<span class="string">&#x27;软件部&#x27;</span>,<span class="number">0</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">2</span>,<span class="string">&#x27;硬件部&#x27;</span>,<span class="number">0</span>)</span></span></span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">3</span>,<span class="string">&#x27;软件研发部&#x27;</span>,<span class="number">1</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">4</span>,<span class="string">&#x27;软件测试部&#x27;</span>,<span class="number">1</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">5</span>,<span class="string">&#x27;软件实施部&#x27;</span>,<span class="number">1</span>)</span></span></span><br><span class="line"> </span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">6</span>,<span class="string">&#x27;硬件研发部&#x27;</span>,<span class="number">2</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">7</span>,<span class="string">&#x27;硬件测试部&#x27;</span>,<span class="number">2</span>)</span></span></span><br><span class="line">insert into <span class="built_in">Dept</span>(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="function"><span class="title">values</span><span class="params">(<span class="number">8</span>,<span class="string">&#x27;硬件实施部&#x27;</span>,<span class="number">2</span>)</span></span></span><br></pre></td></tr></table></figure><p>如果要查询出所有部门信息，并且查询出自己的上级部门，查询结果如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--部门编号      部门名称     上级部门</span></span><br><span class="line"><span class="comment">-- 3           软件研发部     软件部</span></span><br><span class="line"><span class="comment">-- 4           软件测试部     软件部</span></span><br><span class="line"><span class="comment">-- 5           软件实施部     软件部</span></span><br><span class="line"><span class="comment">-- 6           硬件研发部     硬件部</span></span><br><span class="line"><span class="comment">-- 7           硬件测试部     硬件部</span></span><br><span class="line"><span class="comment">-- 8           硬件实施部     硬件部</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> A.DeptId 部门编号,A.DeptName 部门名称,B.DeptName 上级名称 <span class="keyword">from</span> Dept A </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Dept B <span class="keyword">on</span> A.ParentId = B.DeptId</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>操作系统计算题</title>
      <link href="/2023/06/03/cao-zuo-xi-tong-ji-suan-ti/"/>
      <url>/2023/06/03/cao-zuo-xi-tong-ji-suan-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="1-假定在单CPU条件下有下列要执行的作业："><a href="#1-假定在单CPU条件下有下列要执行的作业：" class="headerlink" title="1.假定在单CPU条件下有下列要执行的作业："></a>1.假定在单CPU条件下有下列要执行的作业：</h3><table><thead><tr><th>作业</th><th>到达时间</th><th>运行时间</th><th>优先级</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>10</td><td>2</td></tr><tr><td>2</td><td>1</td><td>4</td><td>3</td></tr><tr><td>3</td><td>2</td><td>3</td><td>5（高）</td></tr></tbody></table><p>（1）用一个执行时间图描述在采用非抢占优先级算法时执行这些作业的情况；<br>（2）对于上述算法，各个作业的周转时间是多少？平均周转时间是多少？<br>（3）对于上述算法，各个作业的带权周转时间是多少？平均带权周转时间是多少?</p><blockquote><p>   作业1                         作业3        作业2<br>(1) |__<em><strong><strong>_<em><strong><strong><strong><strong><strong><strong><strong>|</strong></strong></strong></strong></strong></strong></strong>|</em>_</strong></strong></em>_________|<br>时间0                      10              13              17</p><p>（2）作业一 :10-0&#x3D;10;<br>    作业二：17-1&#x3D;16；<br>    作业三：13-2&#x3D;11；<br>    平均周转时间：（10+16+11）&#x2F;3&#x3D;38&#x2F;3</p><p>(3)<br>    作业一 :10&#x2F;10&#x3D;1;<br>    作业二：16&#x2F;4&#x3D;4;<br>    作业三：11&#x2F;3&#x3D;3.7;<br>  平均带权周转时间:(1+3.7+4)&#x2F;3&#x3D;2.9</p></blockquote><blockquote><p>在单CPU条件下，非抢占式优先级调度算法是一种调度策略，它根据任务的优先级来确定任务的执行顺序，但不允许一个正在执行的任务被中断。当一个任务开始执行后，直到它主动释放CPU或者任务执行完毕，其他任务才能获得执行机会。<br>周转时间&#x3D;完成时间-到达时间<br>带权周转时间&#x3D;周转时间&#x2F;运行时间</p></blockquote><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>有两个程序，A程序按顺序使用CPU 10S， 使用设备甲5s，使用CPU5S，使用设备<br>乙10S， 最后使用CPU 10S。B程序按顺序使用设备甲10S， 使用CPU 10S，使用设<br>备乙5s，使用CPU5S,使用设备乙10S。在顺序环境下先执行A程序再执行B程序，<br>CPU的利用率是多少?提示: CPU利用率&#x3D;CPU运行时间&#x2F;程序运行时间。</p><blockquote><p>A的总时间：10+5+5+10+10&#x3D;40s<br>B的总时间：10+10+5+5+10&#x3D;40s<br>CPU运行时间：10+5+10+10+5&#x3D;40s<br>程序运行时间：40+40&#x3D;80s<br>CPU利用率：40&#x2F;80&#x3D;50%</p></blockquote><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>在单机系统中，系统中各个进程到达就绪队列的时刻、执行时间和优先级如下表所示. 假设进程的调度时间忽略不计。请分别给出采用下面不同的进程调度算法时各个进程的调度次序，画出执行时间图，并计算平均周转时间、平均带权周转时间。</p><table><thead><tr><th>进程</th><th>到达就绪队列的时刻</th><th>执行时间（ms）</th><th>优先级</th></tr></thead><tbody><tr><td>P1</td><td>0</td><td>3</td><td>3</td></tr><tr><td>P2</td><td>2</td><td>6</td><td>5</td></tr><tr><td>P3</td><td>4</td><td>4</td><td>1</td></tr><tr><td>P4</td><td>6</td><td>5</td><td>2</td></tr><tr><td>P5</td><td>8</td><td>2</td><td>4</td></tr></tbody></table><p>(1)先来先服务调度算法;<br>(2)时间片轮换调度算法(时间片为1ms);<br>(3)抢占式短进程优先调度算法;<br>(4)抢占式优先级调度算法;<br>(5)非抢占式优先级调度算法。</p><p>(1)</p><table><thead><tr><th>进程</th><th>创建时间</th><th>运行时间</th><th>优先级</th><th>周转时间</th><th>带权周转时间</th></tr></thead><tbody><tr><td>P1</td><td>0</td><td>3</td><td>3</td><td>3</td><td>1</td></tr><tr><td>P2</td><td>2</td><td>6</td><td>5</td><td>7</td><td>7&#x2F;6</td></tr><tr><td>P3</td><td>4</td><td>4</td><td>1</td><td>11</td><td>11&#x2F;4</td></tr><tr><td>P4</td><td>6</td><td>5</td><td>2</td><td>12</td><td>12&#x2F;5</td></tr><tr><td>P5</td><td>8</td><td>2</td><td>4</td><td>12</td><td>6</td></tr></tbody></table><p>   平均周转时间：（3+7+11+12+12）&#x2F;5&#x3D;9<br>  平均带权周转时间：（1+7&#x2F;6+11&#x2F;4+12&#x2F;5+6）&#x2F;5&#x3D;</p><p>（2）<br><img src="/../assets/%E6%97%B6%E9%97%B4%E7%89%87%E7%AE%97%E6%B3%95.jpg" alt="时间片算法"></p><table><thead><tr><th>进程</th><th>创建时间</th><th>运行时间</th><th>周转时间</th><th>带权周转时间</th></tr></thead><tbody><tr><td>P1</td><td>0</td><td>3</td><td>4-0</td><td>4&#x2F;3</td></tr><tr><td>P2</td><td>2</td><td>6</td><td>18-2</td><td>16&#x2F;6</td></tr><tr><td>P3</td><td>4</td><td>4</td><td>17-4</td><td>13&#x2F;4</td></tr><tr><td>P4</td><td>6</td><td>5</td><td>20-6</td><td>14&#x2F;5</td></tr><tr><td>P5</td><td>8</td><td>2</td><td>15-8</td><td>7&#x2F;2</td></tr></tbody></table><blockquote><p>后进来的优先级高</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web前端开发</title>
      <link href="/2023/04/03/web-qian-duan-kai-fa/"/>
      <url>/2023/04/03/web-qian-duan-kai-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="框架结构组成标记"><a href="#框架结构组成标记" class="headerlink" title="框架结构组成标记"></a>框架结构组成标记</h3><frameset>:主要定义浏览器窗口的分隔方式、各分隔窗口（框架）的大小以及格式化框架边框<h3 id="防盗链是什么？怎么解决？"><a href="#防盗链是什么？怎么解决？" class="headerlink" title="防盗链是什么？怎么解决？"></a>防盗链是什么？怎么解决？</h3><ul><li>防盗链（hotlinking）是指一个网站在未得到原网站授权的情况下，直接引用原网站上的资源，例如图片、视频、音频等，而不是通过链接的形式进行使用。这种行为会让原网站的服务器承担更多的流量和负担，同时也可能会损害原网站的利益。</li></ul><p>为了解决防盗链问题，可以采用以下方法：</p><ol><li>HTTP Referer检查：在HTTP头中添加Referer字段，用来记录访问者是从哪个网站跳转到当前网站的。通过检查Referer字段，可以判断是否是本站访问，如果不是，则返回403禁止访问。</li><li>限制IP地址：可以将资源只允许特定的IP地址或网段访问，禁止其他IP地址访问。</li><li>图片防盗链技术：对于图片等资源，可以使用防盗链技术，例如对图片加上水印、转换格式、设置防盗链过期时间等方式来防止盗链。</li><li>CDN加速：使用CDN（内容分发网络）服务可以将资源分发到全球各地的节点服务器上，减轻原网站的压力，同时也可以防止盗链。</li></ol><h3 id="表格标记语法"><a href="#表格标记语法" class="headerlink" title="表格标记语法"></a>表格标记语法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>……<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            ……</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>……<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            ……</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure> <td>、<th>常用属性 |属性|描述| |----|----||align|设置单元格内容的水平对齐方式（td默认左对齐，th默认居中对齐）||rowspan|跨行合并||colspan|跨列合并||width|设置单元格宽度，单位为像素或表格宽度的百分比||height|设置单元格高度||valign|设置单元格内容的垂直对齐（top、middle、bottom）默认居中对齐||bgcolor|设置单元格背景颜色||background|设置单元格背景图像||bordercolor|设置单元格的边框颜色|<h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><ul><li>访问者输入的信息需要服务器端处理程序处理</li><li>访问者输入的信息可以使用GET和POST这两种方式提交到服务器端</li></ul><ol><li>表单的基本工作原理</li></ol><ul><li>访问者填写完整表单提交到web服务器</li><li>服务器端运行服务端程序处理表单数据</li><li>动态生成一个HTML网页回复访问者</li></ul><h4 id="为什么要隐藏一个input标记？"><a href="#为什么要隐藏一个input标记？" class="headerlink" title="为什么要隐藏一个input标记？"></a>为什么要隐藏一个input标记？</h4><h3 id="隐藏域"><a href="#隐藏域" class="headerlink" title="隐藏域"></a>隐藏域</h3><p>作用：隐藏域在页面中对用户是不可见的，其作用是用于在页面之间转递数据。</p><h3 id="复选框如果value一样还能复选嘛"><a href="#复选框如果value一样还能复选嘛" class="headerlink" title="复选框如果value一样还能复选嘛"></a>复选框如果value一样还能复选嘛</h3><p>如果多个复选框的 value 属性相同，则它们在提交表单时将具有相同的值。因此，当多个复选框的 value 属性相同时，它们仍然可以被选中，但是在提交表单时，它们的值只会被提交一次。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2023/04/03/ji-suan-ji-wang-luo/"/>
      <url>/2023/04/03/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[<h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h3><p>FTP是文件传输协议（File Transfer Protocol）的缩写，它是一种用于在网络上进行文件传输的标准协议。FTP协议可以让用户从一台计算机向另一台计算机传输文件，或从一个文件服务器向用户的计算机传输文件。FTP使用客户端-服务器架构，客户端通过FTP客户端软件与服务器通信，进行文件上传、下载、删除、移动、复制等操作。FTP支持匿名登录和认证登录两种方式进行访问，具有广泛的应用领域，如软件发布、网站运营、云存储等。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS3</title>
      <link href="/2023/01/05/css3/"/>
      <url>/2023/01/05/css3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>div标签一般是用来网页布局，所以写div的样式时，一般使用类名</p></blockquote><h4 id="认识"><a href="#认识" class="headerlink" title="认识"></a>认识</h4><ol><li>定义：层叠样式表</li><li>作用：给页面中的HTML标签设置样式</li><li>写在style标签中，style标签一般写在head标签里面，title标签下面</li><li>选择器{css属性}，写完加分号。选择器的作用是查找标签。</li><li>注释是&#x2F;**&#x2F;,快捷键是ctrl+&#x2F;</li></ol><h4 id="CSS的引入方式"><a href="#CSS的引入方式" class="headerlink" title="CSS的引入方式"></a>CSS的引入方式</h4><ol><li>内嵌式：写在style标签内.小案例使用</li><li>外联式：写在一个单独的.css文件中。项目中使用</li></ol><ul><li>需要通过link标签在网页中引入<blockquote><p>&lt;\link rel&#x3D;”stylesheet” href&#x3D;”.&#x2F;mycss.css”&gt;</p></blockquote></li></ul><ol start="3"><li>行内式：CSS写在标签的style属性中。配合js使用</li></ol><ul><li>现在不推荐使用，之后配合js使用</li></ul><h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4><p> <strong>标签选择器</strong><br>通过标签名，找到网页中所有这类标签，设置样式<br>注意：</p><ol><li>选择的是一类标签，而不是单独某一个</li><li>无论嵌套关系有多深，都能找到对应的标签<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p&#123;   /*p是css的选择器，这里就是控制p标签的内容*/</span><br><span class="line">        color: rgb(39, 34, 34);  /*字体颜色*/</span><br><span class="line">        font-size: 25px;  /*字体大小*/</span><br><span class="line">        background-color: rgb(247, 232, 148);/*背景颜色*/</span><br><span class="line">        width: 450px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>类选择器</strong></li><li>结构： .类名{css属性名：属性值；}</li><li>作用：通过类名，找到网页中所有带有这个类名的标签，设置样式<br>注意：</li></ol><ul><li>所有标签都有class属性，属性值为 类名</li><li>类名可由数字、字母、下划线、中划线组成，但不能以数字或中划线开头</li><li>一个标签可以有多个类名，不同类名空格隔开</li><li>类名可以重复，一个类选择器可以同时选中多个标签</li><li>先定义，后使用才能生效<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.one</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.two</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one two&quot;</span>&gt;</span>这是被标红的字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>id选择器</strong><br>结构：#id属性值{css属性名：属性值；;}<br>作用：通过id属性值，找到页面中带有这个id属性值的标签，设置样式<br>注意：</li><li>所有标签都有id属性</li><li>id属性类似于身份证号码，在一个页面中是唯一的，不可重复</li><li>一个标签上只能有一个id属性值</li><li>一个id选择器只能选中一个标签<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#blue</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blueviolet;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;blue&quot;</span>&gt;</span>这是一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><strong>通配符选择器</strong><br>结构：*{CSS属性名：属性值}<br>作用：找到页面中所有的标签，设置样式<br>注意：1.开发中使用较少<br>   2.可能会用于去除标签默认的margin和padding</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    *&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blueviolet;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p><strong>字体大小</strong><br>属性名：font—size<br>取值：数字+px<br>注意：</p><ul><li>谷歌浏览器默认文字大小是16px</li><li>单位需要设置，否则无效</li></ul><p><strong>字体粗细</strong><br>属性名：font-weight<br>取值：<br>1.关键字：正常：normal<br>         加粗：bold<br>2.纯数字：100——900的整数<br>         正常：400<br>         加粗：700<br>注意：</p><ul><li>不是所有字体都提供了九种粗细</li><li>实际开发以正常和加粗两种使用最多</li></ul><p><strong>文字倾斜</strong><br>属性名：font-style<br>取值：正常：normal<br>      倾斜：italic</p><pre><code>  或者&lt;em&gt;&lt;/em&gt;      &lt;i&gt;&lt;/i&gt;</code></pre>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">      <span class="attribute">font-style</span>: italic;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>字体</strong><br>属性名：font-family<br>常见取值：具体字体1，具体字体2……</p><ul><li>具体字体：“Microsoft YaHei”、微软雅黑（windows默认）、黑体、宋体</li><li>字体系列：sans-serif、monospace等<br>渲染规则：</li></ul><ol><li>从左到右按照顺序查找，如果电脑中未安装该字体，则显示</li><li>如果都不支持，会根据操作系统，显示最后字体系列<br>注意：</li><li>若字体名称中存在多个单词，推荐用引号包裹</li><li>最后一项字体系列不需要用引号包裹</li><li>网页开发时尽量使用系统常见自带字体</li></ol><p><strong>常见字体系列</strong></p><ol><li><p>无衬线字体（sans-serif）<br>特点：文字壁画粗细均匀，首尾无修饰<br>场景：网页中采用<br>常见该系列字体：黑体、Arial</p></li><li><p>衬线字体（serif）<br>特点：文字笔画粗细不均，首尾有笔锋修饰<br>场景：书籍<br>常见该系列字体：宋体</p></li><li><p>等宽字体<br>特点：每个字母或文字的宽度相等<br>场景：一般用于程序代码编写，有利于代码的阅读和编写<br>常见该系列字体：Consolas、fira code</p></li></ol><p><strong>字体font相关属性的连写</strong><br>属性名：font<br>取值：style weight size family<br>省略要求：只能省略前两个，如果省略了相当于设置了默认值<br>注意点：<br>font:style weight size 字体</p><ul><li>如果需要同时设置单独和连写形式</li><li>要么把单独的样式写在连写的下面</li><li>要么把单独的样式写在连写的里面<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">       <span class="attribute">font</span>:normal <span class="number">500</span> <span class="number">30px</span> 楷体;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>文本样式</strong></p><ol><li>文本缩进：text-indent  一般为text-indent:32px或text-indent:2em;</li><li>文本水平对齐方式：text-align<br>属性值：left 左对齐<br>right 右对齐<br>center 居中</li></ol><ul><li>如果要让文本水平居中，text-align属性给文本所在标签（文本的父元素）设置</li><li>居中的元素可以有：<blockquote><ol><li>文本</li></ol></blockquote></li></ul><ol start="2"><li>span标签、a标签</li><li>input标签、img标签<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> &gt;</span>这是一个需要居中的段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>SPAN<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是一个需要居中的图片&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是一个需要居中的图片&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文本修饰：text-decoration<br>属性值：underline  下划线<br> none   无装饰线</li></ol><ul><li>开发中常用text-decoration：none;来清除a标签默认的下划线<figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a&#123;</span><br><span class="line">   <span class="built_in">text</span>-decoration: <span class="built_in">none</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &lt;a href=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;百度链接&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>行高：控制一行的上下行间距<br>属性名：line-height<br>取值：</li></ol><ul><li>数字+px</li><li>倍数（当前标签font-size的倍数<blockquote><p>应用：</p></blockquote></li></ul><ol><li><p>让单行文本垂直居中可以设置line-height：文字父元素高度</p></li><li><p>网页精准布局时，会设置line-height：1 可以取消上下间距</p></li><li><p>如果同时设置了行高和font连写，注意覆盖问题<br>  font：style weight size&#x2F;line-height family</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">500</span> <span class="number">24px</span>/<span class="number">1.2</span> 楷体;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>在浏览器里面可以检查调试div的宽度高度；<br>手动换行：tab键；<br>出现删除线代表被覆盖<br>出现黄叹号表示代码出错</p></blockquote></li><li><p>标签水平居中方法总结margin： 0 auto<br>0表示上下间距。auto表示左右间距<br>注意：</p></li></ol><ul><li>如果要让div、p、h（大盒子）水平居中，直接给当前元素设置即可</li><li>margin： 0 auto 一般针对于固定宽度的盒子，如果大盒子没有设置宽度，此时默认沾满父元素的宽度<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"> <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"> <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"> <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="选择器进阶"><a href="#选择器进阶" class="headerlink" title="选择器进阶"></a>选择器进阶</h4><h5 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h5><ol><li>后代选择器：空格</li></ol><ul><li>作用：根据HTML标签的嵌套关系，选择父元素后代中满足条件的元素<blockquote><p>语法：选择器1 选择器2{CSS}</p></blockquote></li><li>结果：在选择器1找到标签的后代（儿子、孙子、重孙子…）中，找到满足选择器2的标签，设置样式<blockquote><p>注意点：1.后代包括：儿子、孙子、重孙子……<br>  2.后代选择器中，选择器与选择器之间通过空格隔开</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个单独的p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个以div为父级的p标签，让他变红<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>子代选择器</li></ol><ul><li>作用：根据HTML标签的嵌套关系，选择父元素自带中满足条件的元素</li><li>语法：选择器1&gt; 选择器2{<br>CSS<br>}</li><li>结果：在选择器1找到标签的后代（儿子）中，找到满足选择器2的标签，设置样式<blockquote><p>注意：1.子代只包括：儿子</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>这是div里面的链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>这是div里面的p里面的链接标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h5><ul><li>作用：同时选择多组标签，设置相同的样式</li><li>语法：选择器1，选择器2{CSS}</li><li>结果：找到选择器1和选择器2选中的标签，设置样式<blockquote><p>注意点：1.并集选择器中的每组选择器之间通过，分隔<br>    2.并集选择器中的每组选择器可以是基础选择器或复合选择器<br>    3.并集选择器中的每组选择器通常一行写一个，提高代码的可读性</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>,</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">a</span>,</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">span</span>,</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>bababab<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>yeyeyey<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>uiuiuiuiu<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li></ul><h5 id="交集选择器-紧挨着用"><a href="#交集选择器-紧挨着用" class="headerlink" title="交集选择器(紧挨着用)"></a>交集选择器(紧挨着用)</h5><ul><li>作用：选择页面中同时满足多个选择器的标签</li><li>语法：选择器1选择器2{CSS}</li><li>结果：（即又原则）找到页面中既能被选择器1选中又能被选择器2选中的标签，设置样式<blockquote><p>注意点：1.交集选择器之间是紧挨着的，没有东西分隔<br>   2.交集选择器中如果有标签选择器，标签选择器必须写在最前面</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"> <span class="comment">/* 只让类是one的p标签的文字变红 */</span></span></span><br><span class="line"><span class="language-css"> <span class="selector-tag">p</span><span class="selector-class">.one</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css"> &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>pppppp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>babkabaahahj<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>haofddisjsjs<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="hover伪类选择器"><a href="#hover伪类选择器" class="headerlink" title="hover伪类选择器"></a>hover伪类选择器</h5><ul><li>作用：选中鼠标悬停在元素上的状态，设置样式</li><li>选择器语法：选择器：hover{CSS}<blockquote><p>注意：1.伪选择器选中的元素的某种状态</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>这是一个div标签，鼠标放在上面可以变成粉红色，并且这个样式对任何标签都适用<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li></ul><h5 id="优先级计算"><a href="#优先级计算" class="headerlink" title="优先级计算"></a>优先级计算</h5><ol><li>全是继承时，继承里面谁高，看继承哪个父级，哪个父级高，哪个选择器生效</li></ol><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p> <strong>背景颜色</strong><br> 属性名：background-color（bgc）<br> 属性值：关键字、rgb表示法、rgba表示法、十六进制（#开头+六位数或三位数）……（6个0是纯黑色）每两位表示一个通道。<br> #000000简写成#00，#ff0000简写成#f00</p><p> 注意：</p><ul><li>背景色默认是透明：rgba（0，0，0，0）、transparent.a表示透明度。如rgba(255,255,255,0.3).</li><li>背景颜色不会影响盒子大侠，并且还能看清盒子的大小位置，一般在布局中会习惯先给盒子设背景色。</li></ul><p><strong>背景图片</strong><br>属性名：background-image(bgi)<br>属性值：background-image：url(‘图片路径’)<br>注意：</p><ul><li>背景图片中url中可以省略引号</li><li>背景图片默认是水平和垂直方向平铺的</li><li>背景图片仅仅是值给盒子内起到装饰的作用，类似于背景颜色，不能撑开盒子<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">style&gt;</span><br><span class="line">  <span class="selector-tag">div</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">688px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./0.jpg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span>&gt;巴拉巴拉&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>背景平铺</strong><br>属性名：background-repeat(bgr)<br>属性值：repeat 默认的水平和垂直方向都平铺<br>no-repeat 不平铺<br>repeat-x 沿水平方向平铺<br>repeat-y 沿垂直方向平铺</p><p><strong>背景位置</strong><br>属性名：background-position（bgp）<br>属性值：水平方向位置 垂直方向位置</p><ol><li>方位名词（最多表示9个位置）</li></ol><ul><li>水平方向：left、center、right</li><li>垂直方向：top、center、 bottom</li></ul><ol start="2"><li>数字+px（坐标）</li></ol><ul><li>原点（0.0）在盒子的左上角<br>x轴水平向右<br>y轴垂直向下<br>操作：将图片左上角于坐标点重合即可</li></ul><blockquote><p>注意：两种可以混合使用，第一个取值表示水平，第二个取值表示垂直.背景图和背景色只显示在盒子的里面</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">width</span>: <span class="number">1300px</span>;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">height</span>: <span class="number">788px</span>;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">margin</span>: auto auto;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./0.jpg</span>);</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* background-position: center center; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-position</span>: center ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>背景相关属性连写</strong><br>属性名：background（bg)<br>推荐：background：color image repeat position<br>注意：</p><ul><li>可以按照需求省略</li><li>特殊情况：在pc端，若盒子大小和背景图片大小一样，可以直接写background: url()</li></ul><p><strong>ing和背景图的差别</strong><br>img一般用于比较重要的图，例如产品图片，宣传图片，轮播图<br>美化性的图用背景图</p><h4 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h4><h5 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h5><ul><li>显示特点：</li></ul><ol><li>独占一行；</li><li>宽度默认是父元素的宽度，高度默认由内容撑开；</li><li>可以设置行高</li></ol><ul><li>代表标签：div,p,h系列,ul,li,dl,dt,dd,form,header,nav,footer</li></ul><h5 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h5><ul><li>显示特点：</li></ul><ol><li>一行可以显示多个</li><li>宽度和高度默认由内容撑开</li><li>不可以设置行高</li></ol><ul><li>代表标签：a, span, b, u,i,s,strong,ins,em,del……</li></ul><h5 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h5><ul><li>显示特点：</li></ul><ol><li>一行可以显示多个</li><li>可以设置宽高</li></ol><ul><li>代表标签：input,textarea,button,select……</li><li>特殊情况：img标签又行内块元素的特点</li></ul><h5 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h5><ul><li>目的：改变元素默认的显示特点，让元素符合布局的要求</li><li>语法：<table><thead><tr><th>属性</th><th>效果</th><th>使用频率</th></tr></thead><tbody><tr><td>display:block</td><td>转换成块级元素</td><td>较多</td></tr><tr><td>display:inline-block</td><td>转换成行内块元素</td><td>较多</td></tr><tr><td>display:inline</td><td>转换成行内元素</td><td>较少</td></tr></tbody></table></li></ul> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css"> &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>11<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>22<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="嵌套标签"><a href="#嵌套标签" class="headerlink" title="嵌套标签"></a>嵌套标签</h5><ol><li>块级元素一般作为大容器，可以嵌套：文本、块级元素、行内元素、行内块元素等。但是p标签中不要嵌套div，p，h等块级元素</li><li>a标签内可以嵌套任意元素，但是a标签不能嵌套a标签</li></ol><h4 id="CSS特性"><a href="#CSS特性" class="headerlink" title="CSS特性"></a>CSS特性</h4><h5 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h5><ul><li>特性：子元素有默认继承父元素样式的特点</li><li>可以继承的常见属性（文字控制属性都可以继承）</li></ul><ol><li>color</li><li>font-style,font-weight,font-size,font-family</li><li>text-indent,text-align</li><li>line-height<br>……<blockquote><p>注意：可以通过调试工具判断样式是否可以继承</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是div里面的文字</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是div里面的span里面的文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h5><ul><li>特性：<ol><li>同一个标签不同的样式，会共同作用</li><li>同一个标签相同的样式，最后的样式会覆盖前面的样式<blockquote><p>注意：当样式冲突时，只有当选择器优先级相同时，才能通过层叠性判断结果</p></blockquote></li></ol></li></ul><h5 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h5><ul><li>介绍：不同选择器具有不同的优先级，优先级高的选择器样式会覆盖优先级低的选择器样式</li><li>优先级公式：<br>继承&lt;通配符选择器(*)&lt;标签选择器(.one)&lt;类选择器&lt;(id)选择器&lt;行内样式&lt;!important</li><li>注意点：<ol><li>!important写在属性值的后面，分号的前面</li><li>!important不能提升继承的优先级，只要是继承优先级最低</li><li>实际开发中不建议使用!important<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: yellow <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"> <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css"> &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div&quot;</span> <span class="attr">id</span>=<span class="string">&quot;div&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: purple;&quot;</span>&gt;</span>测试优先级<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h5 id="权重叠加计算"><a href="#权重叠加计算" class="headerlink" title="权重叠加计算"></a>权重叠加计算</h5><ul><li>场景：如果是复合选择器，此时需要通过权重叠加计算方法，判断最终选择哪个选择器优先级最高会生效</li><li>权重叠加公式：（每一级之间不存在进位）<br> <img src="/assets/%E6%9D%83%E9%87%8D%E5%8F%A0%E5%8A%A0%E8%AE%A1%E7%AE%97.jpg" alt="权重叠加计算"></li><li>比较规则：</li></ul><ol><li>先比较第一级数字，如果比较出来了，之后的就不用看</li><li>如果第一级数字相同，此时再去比较第二级数字，如果比较出来了，之后就不用看</li><li>……</li><li>如果所有数字相同，表示优先级相同，则比较层叠性（谁写在下面，谁说了算）</li></ol><ul><li>注意：！important 如果不是继承，则权重最高<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* (0,1,0,1) */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-id">#one</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* (0,0,2,0) */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.father</span> <span class="selector-class">.son</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* (0,0,1,1) */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.father</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: greenyellow;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* (0,0,0,2) */</span></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: pink;&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span> &gt;</span>猜猜这是什么颜色的字体<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>以上显然是skyblue</p></blockquote></li></ul><h5 id="pxcook的使用"><a href="#pxcook的使用" class="headerlink" title="pxcook的使用"></a>pxcook的使用</h5><p>如果是png，则使用设计<br>psd，使用开发模式</p><h4 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h4><ul><li>概念：</li></ul><ol><li>网页中的每一个标签，都可看作是一个盒子，通过盒子的视角更方便进行布局</li><li>浏览器在渲染网页时，会将网页中的元素看做是一个个的矩形区域</li></ol><ul><li>盒子模型：<br> CSS中规定每个盒子分别由： 内容区域(content),内边距区域(padding)，边框区域(border)，外边距区域构成(margin)<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 纸箱子，填充泡沫 */</span></span></span><br><span class="line"><span class="language-css"> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 边框线==纸箱子 */</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 内边距==填充泡沫：出现在内容和盒子边缘之间*/</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*外边距：出现在两个盒子之间，出现在盒子的外边*/</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"> &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>盒子内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>盒子内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="内容区域的宽度和高度"><a href="#内容区域的宽度和高度" class="headerlink" title="内容区域的宽度和高度"></a>内容区域的宽度和高度</h5><ul><li>作用：利用width和height属性默认设置是盒子内容区域的大小</li><li>属性：width和height</li><li>常见取值：数字+px</li></ul><h5 id="边框border"><a href="#边框border" class="headerlink" title="边框border"></a>边框border</h5><ul><li>属性值：单个取值的连写，取值之间以空格隔开<br>        粗细   线条样式 颜色<br>如：border： 10px solid red;（不分现后顺序）<br>快捷键：bd+tab</li></ul><blockquote><p>solid:实线<br>  dashed：虚线<br>  dotted：点线</p></blockquote><p><strong>单方向设置</strong><br>场景：只给盒子的某个方向单独设置边框<br>属性名： border-方位名词<br>属性值：连写的取值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"> <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"> <span class="attribute">background-color</span>: pink;</span><br><span class="line"> <span class="attribute">border-bottom</span>: <span class="number">1px</span> dotted <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：border会撑大div盒子的尺寸，所以在写w和h时要减去边框的宽度</p></blockquote><h5 id="内边距padding"><a href="#内边距padding" class="headerlink" title="内边距padding"></a>内边距padding</h5><p>padding属性可以当复合属性使用，表示单独设置某个方向的内边距，最多取四个值，代表上右下左的内边距<br>，如果是3个，则第二个取值代表左和右；如果是2个，则第一个代表上下，第二个代表左右</p><blockquote><p>注意：padding和border都会撑大盒子，实际开发中盒子的div的w和h要把这两个剪掉</p></blockquote><h5 id="自动内减（内减模型）"><a href="#自动内减（内减模型）" class="headerlink" title="自动内减（内减模型）"></a>自动内减（内减模型）</h5><ul><li>操作：给盒子设置属性box-sizing:border-box;即可</li><li>优点：浏览器会自动计算多余大小，自动在内容中减去<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="外边距margin"><a href="#外边距margin" class="headerlink" title="外边距margin"></a>外边距margin</h5><p>写法规则和padding一样</p><h5 id="清除默认样式"><a href="#清除默认样式" class="headerlink" title="清除默认样式"></a>清除默认样式</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   *&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>ppppppp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="导航制作"><a href="#导航制作" class="headerlink" title="导航制作"></a>导航制作</h4><p>布局顺序：</p><ol><li>从外到内，从上到下<br>每一个盒子的样式</li><li>宽高</li><li>辅助的背景颜色</li><li>盒子的模型部分：boder、padding、margin</li><li>其他样式：color、font—、text……</li><li>必须是li里面套a</li></ol><h5 id="版心居中"><a href="#版心居中" class="headerlink" title="版心居中"></a>版心居中</h5><p>版心指浏览器中的有效区域<br>margin:0 auto; 即可</p><h4 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h4><p><strong>行内块</strong><br>display：inline-block;<br>若代码换行，会产生空格间距</p><div></div><div></div><p>作用：网页布局<br>特点：脱离标准流，可以覆盖标准流里的元素，下一个浮动会浮动在上一个浮动左右，浮动标签是顶对齐的<br>margin-top：50px可以使之下来</p><p><strong>css书写顺序</strong></p><ol><li>浮动&#x2F;display</li><li>盒子模型：margin、border、padding、宽度、高度、背景色</li><li>文字样式</li></ol><h5 id="外边距折叠"><a href="#外边距折叠" class="headerlink" title="外边距折叠"></a>外边距折叠</h5><ol><li>合并现象</li></ol><ul><li>场景：垂直布局的块级元素：上下的margin合并</li><li>结果：最终两者距离为margin的最大值<br>解决：只给其中一个盒子设置margin</li></ul><ol start="2"><li>塌陷现象</li></ol><ul><li>场景：相互嵌套的块级元素，子元素的margin-top会作用在父元素上</li><li>结果：导致父元素一起往下移动<br>解决：</li></ul><ol><li>给父元素设置border-top或者padding-top（分隔父子元素的margin-top）</li><li>给父元素设置overflow：hidden</li><li>转换成行内块元素</li><li>设置浮动<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* padding-top: 40px; */</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* border: 1px solid #000; */</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* display: inline-block; */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">overflow</span>: hidden; </span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.son</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-top</span>:<span class="number">40px</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="行内元素的垂直内外边距问题"><a href="#行内元素的垂直内外边距问题" class="headerlink" title="行内元素的垂直内外边距问题"></a>行内元素的垂直内外边距问题</h4><p>行内元素的padding和margin在垂直方向上没有作用，若要有，则可以加line-height</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* margin: 30px; */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>span <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>span <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="浮动-1"><a href="#浮动-1" class="headerlink" title="浮动"></a>浮动</h4><h5 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h5><ol><li>作用：根据元素在HTML中的结构关系查找元素</li><li>优势：减少对HTML中类的依赖，有利于保持代码整洁</li><li>场景：常用于查找某父级选择器中的子元素</li><li>选择器<table><thead><tr><th>选择器</th><th>说明</th></tr></thead><tbody><tr><td>E:first-child{}</td><td>匹配父元素中第一个子元素，并且是E元素</td></tr><tr><td>E:last-child{}</td><td>匹配父元素中最后一个元素，并且是E元素</td></tr><tr><td>E:nth-child(n){}</td><td>匹配父元素中第n个子元素，并且是E元素</td></tr><tr><td>E:nth-last-child(n){}</td><td>匹配父元素中倒数第n个子元素，并且是E元素</td></tr></tbody></table><blockquote><p>注意：n可以是常见的公式</p><table><thead><tr><th>功能</th><th>公式</th></tr></thead><tbody><tr><td>偶数</td><td>2n,even</td></tr><tr><td>奇数</td><td>2n+1,2n-1,odd</td></tr><tr><td>找到前5个</td><td>-n+5(n从0开始取)</td></tr><tr><td>找到从第5个往后</td><td>n+5</td></tr></tbody></table></blockquote></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n)&#123;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n+<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(-n+<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第1个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第2个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第3个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第4个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第5个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第6个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第7个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第8个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-last-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第1个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第2个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第3个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第4个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第5个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第6个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第7个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第8个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h5><ul><li>一般页面中的非主体内容可以用伪元素，装饰性的伪元素</li><li>区别：<ol><li>元素：HTML设置的标签</li><li>伪元素：由CSS模拟出的标签效果</li></ol></li><li>种类<table><thead><tr><th>伪元素</th><th>作用</th></tr></thead><tbody><tr><td>::before</td><td>在父元素内容的最前添加一个伪元素</td></tr><tr><td>::after</td><td>在父元素内容的最后添加一个伪元素</td></tr></tbody></table></li><li>注意：</li></ul><ol><li>必须设置content属性才能生效</li><li>伪元素默认是行内元素<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&#x27;老鼠&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">77</span>, <span class="number">49</span>, <span class="number">49</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&#x27; &#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span>爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="标准流"><a href="#标准流" class="headerlink" title="标准流"></a>标准流</h5><ul><li>定义：标签默认的排列方式，又叫文档流<br>比如垂直排列，水平排列</li></ul><h5 id="浮动-2"><a href="#浮动-2" class="headerlink" title="浮动"></a>浮动</h5><ul><li>问题：浏览器在解析行内块或行内元素的时候，如果标签换行书写会产生一个空格的距离</li><li>早期作用：图文环绕<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line">  啥结案后的经济哈吉杀杀杀事实说话卡机德哈卡拿出来数据集案例的啦</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>现在作用：网页布局</li></ul><p><strong>浮动的特点</strong></p><ol><li>浮动元素会脱离标注流，在标准流中不占位置（相当于从地面飘到了空中）</li><li>浮动元素比标准流高半个级别，可以覆盖标准流中的元素（不可以盖住字）</li><li>浮动找浮动，下一个浮动元素会在上一个浮动元素后面左右浮动</li><li>浮动的标签是顶对齐的,如果不想顶对齐，可以加margin</li><li>浮动元素有特殊的显示效果（具备行内块特点）</li></ol><ul><li>一行可以显示多个</li><li>可以设置宽高</li></ul><blockquote><p>注意：浮动的元素不能通过text-align:center或margin:0 auto居中</p></blockquote><h5 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h5><ul><li>含义：清除浮动带来的影响<br>影响：如果子元素浮动了，此时子元素不能撑开标准流的块级父元素</li><li>原因：子元素浮动后脱标，不占位置</li><li>目的：需要父元素有高度，从而不影响其他网页元素的布局<br><strong>方法</strong></li></ul><ol><li>直接设置父元素高度<br>缺点：有些布局不能固定父元素高度</li><li>额外标签法</li></ol><ul><li>操作：1. 在父元素内容的最后添加一个块级元素<br>2. 给添加的块级元素设置clear:both</li><li>特点：<br> 缺点：会给页面中添加额外的标签，会让html结构变得复杂<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* height: 500px; */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bottom</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.clearfix</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/*清除左右两侧浮动的影响*/</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>单伪元素清除法<br>操作：用为元素替代额外的标签<br>基本写法：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.clearfix::after&#123;</span><br><span class="line">  content: &#x27;&#x27;;</span><br><span class="line">  display:block;</span><br><span class="line">  clear:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>补充写法：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.clearfix::after&#123;</span><br><span class="line">  content: &#x27;&#x27;;</span><br><span class="line">  display:block;</span><br><span class="line">  clear:both;</span><br><span class="line">  height:0;</span><br><span class="line">  visibility:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* height: 500px; */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bottom</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 为了兼容性可以写 */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">visibility</span>: hidden;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 通过单伪元素清除 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>双伪元素清楚法<br>操作：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> .clearfix::before,</span><br><span class="line">.clearfix::after&#123;</span><br><span class="line"> content: &#x27;&#x27;;</span><br><span class="line"> display:table;<span class="comment">&lt;!-- 为了解决 塌陷问题--&gt;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 外边距塌陷：父子标签，都是块级，子级加margin会影响父级的位置 --&gt;</span></span><br><span class="line">.clearfix::after&#123;</span><br><span class="line"> clear:both;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li>给父元素设置overflow:hidden<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* height: 500px; */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.left</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bottom</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 通过单伪元素清除 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="CSS书写顺序"><a href="#CSS书写顺序" class="headerlink" title="CSS书写顺序"></a>CSS书写顺序</h5><ol><li>浮动&#x2F;display</li><li>盒子模型：margin border padding 宽度高度背景色</li><li>文字样式</li></ol><ul><li>这样写执行效率最高</li></ul><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h5 id="根目录-网站的第一级文件夹"><a href="#根目录-网站的第一级文件夹" class="headerlink" title="根目录 网站的第一级文件夹"></a>根目录 网站的第一级文件夹</h5><p>尽量用英文或拼音，因为服务器不支持中文</p><ol><li>图片文件夹：images</li><li>样式文件夹：CSS</li><li>首页：index.html<br>&lt;\link rel&#x3D;”stylesheet” href&#x3D;”.&#x2F;css&#x2F;index.css”&gt;</li></ol><h4 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h4><h5 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h5><ol><li>标准流</li></ol><ul><li>块级元素独占一行-&gt;<strong>垂直布局</strong></li><li>行内元素&#x2F;行内块元素一行显示多个-&gt;水平布局</li></ul><ol start="2"><li>浮动</li></ol><ul><li>让原本垂直布局的<strong>块级元素变成水平布局</strong></li></ul><ol start="3"><li>定位</li></ol><ul><li>可以人元素自由地摆放在网页的任意位置</li><li>一般用于盒子之间的层叠情况</li></ul><h5 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h5><p>使用定位的步骤</p><ol><li>设置定位的方式</li></ol><ul><li>属性名：position</li><li>常见属性值：<table><thead><tr><th>定位方式</th><th>属性值</th></tr></thead><tbody><tr><td>静态定位</td><td>static</td></tr><tr><td>相对定位</td><td>relative</td></tr><tr><td>绝对定位</td><td>absolute</td></tr><tr><td>固定定位</td><td>fixed</td></tr></tbody></table></li></ul><ol start="2"><li>设置偏移量</li></ol><ul><li>偏移量设置为分为两个方向，水平和垂直方向各选一个使用即可</li><li>选取的元组一般是就近原则（高哪边近用哪个）<br>position-+left,right,top,bottom,属性值都是数字+px&#x2F;百分比</li></ul><h5 id="静态定位"><a href="#静态定位" class="headerlink" title="静态定位"></a>静态定位</h5><h5 id="相对定位-快捷键：por"><a href="#相对定位-快捷键：por" class="headerlink" title="相对定位(快捷键：por)"></a>相对定位(快捷键：por)</h5><p>介绍：自恋型定位，相对于自己之前的位置进行移动</p><ul><li>代码：position:relative;</li><li>特点：1.需要配合方位属性实现移动</li></ul><ol start="2"><li>相对于自己原来位置进行移动</li><li>在页面中占位置-&gt;没有脱标(占有原来的位置)</li><li>仍然具体标签原有的显示模式的特点</li><li>改变位置参照自己原来的位置</li></ol><ul><li>应用场景：1. 配合绝对定位组CP（子绝父相）<br>     2. 用于小范围的移动</li><li>注意：如果left和right都有，以left为准；<br>  top和botto都有，以top为准<br>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">688px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.mask</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h5><ul><li>介绍：拼爹型定位，相对于非静态定位的父元素进行定位移动</li><li>代码：position:absolute;</li><li>特点：1. 需要配合方位属性实现移动<br> 2. 默认相对于浏览器可视区域进行移动<br> 3. 在页面中不占位置-&gt;已经脱标<br> 4. 改变标签的显示模式特点：具备行内块特点，在一行共存，可改变宽高大小。</li><li>应用场景：</li></ul><ol><li>配合绝对定位组CP(子绝父相)一般父级采用相对定位，子级采用绝对定位</li></ol><h5 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h5><p>绝对定位查找父级的方式，就近找定位的父级，如果逐层查找不到这样的父级，就以浏览器窗口为参照进行定位<br>绝对定位的盒子不能使用左右margin auto<br><strong>居中</strong><br>position:absolute<br>left:50%,移动到参照物的50%<br>margin-left:-(盒子宽度的一半)px;<br>top:50%;<br>margin-top:-(盒子高度一半)px</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 整个盒子移动到浏览器中间偏右的位置 */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 把盒子向左移动自己宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-left</span>: -<span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-top</span>: -<span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>位移居中</strong><br>transform: translate(-50%,-50%);可以替换原本左移右移的像素</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 整个盒子移动到浏览器中间偏右的位置 */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 把盒子向左移动自己宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">303px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h5><p>介绍：死心眼型定位，相对于浏览器进行定位移动</p><ul><li>代码：position:fixed;</li><li>特点：</li></ul><ol><li>需要配合方位属性实现移动</li><li>相对于浏览器可视区域进行移动</li><li>在页面中不占位置-&gt;已经脱标</li></ol><ul><li>应用场景</li></ul><ol><li>让盒子固定在屏幕中的某个位置<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="元素的层级关系"><a href="#元素的层级关系" class="headerlink" title="元素的层级关系"></a>元素的层级关系</h5><ul><li>不同布局方式元素的层级关系：标准流&lt;浮动&lt;定位</li><li>不同定位间的层级关系：</li></ul><ol><li>相对、绝对、固定默认层级相同</li><li>此时html中写在下面的元素层级更高，即下压上，后来者居上</li></ol><ul><li>改变：z-index:整数;取值越大，显示顺序越往上<br>默认情况下z-index的取值为0，必须配合定位才生效，取值不带像素</li></ul><h5 id="CSS书写顺序-1"><a href="#CSS书写顺序-1" class="headerlink" title="CSS书写顺序"></a>CSS书写顺序</h5><ol><li>定位&#x2F;浮动&#x2F;display</li><li>盒子模型</li></ol><h4 id="装饰"><a href="#装饰" class="headerlink" title="装饰"></a>装饰</h4><h5 id="垂直对齐方式"><a href="#垂直对齐方式" class="headerlink" title="垂直对齐方式"></a>垂直对齐方式</h5><p>浏览器遇到行内和行内块标签当文字处理，默认文字是按基线对齐<br>属性名：vertical-align<br>属性值：</p><table><thead><tr><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>baseline</td><td>默认，基线对齐</td></tr><tr><td>top</td><td>顶部对齐</td></tr><tr><td>middle</td><td>中部对齐</td></tr><tr><td>bottom</td><td>底部对齐</td></tr><tr><td><strong>文字对齐问题</strong></td><td></td></tr></tbody></table><ul><li>场景：解决行内&#x2F;行内块元素垂直对齐问题</li><li>问题：当图片和文字在一行中显示师，其实底部不是对齐的<br>由于浏览器解析行内和行内块都按文字处理，所以垂直居中有两种方式：</li><li>vertical-align:middle;</li><li>display:block;<br>如果要水平居中，那就给父级加上：text-align:center;<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.father</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">1260px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">vertical-align</span>: middle; </span></span><br><span class="line"><span class="language-css">      </span></span><br><span class="line"><span class="language-css">      <span class="comment">/* display: block; */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="光标类型"><a href="#光标类型" class="headerlink" title="光标类型"></a>光标类型</h5><h5 id="边框圆角"><a href="#边框圆角" class="headerlink" title="边框圆角"></a>边框圆角</h5><h5 id="overflow溢出显示部分"><a href="#overflow溢出显示部分" class="headerlink" title="overflow溢出显示部分"></a>overflow溢出显示部分</h5><h5 id="元素本身隐藏"><a href="#元素本身隐藏" class="headerlink" title="元素本身隐藏"></a>元素本身隐藏</h5><h2 id="web开发进阶"><a href="#web开发进阶" class="headerlink" title="web开发进阶"></a>web开发进阶</h2><h4 id="平面转换-x2F-2D转换"><a href="#平面转换-x2F-2D转换" class="headerlink" title="平面转换&#x2F;2D转换"></a>平面转换&#x2F;2D转换</h4><p>位移<br>旋转<br>缩放<br><strong>语法</strong></p><ol><li>位移<br>transform:translate(水平移动距离，垂直移动距离)<br>快捷键：tf<br>取值：正负均可，</li></ol><ul><li>像素单位数值</li><li>百分比（参考盒子）<blockquote><p>技巧：1.translate()如果只给出一个值，表示X轴方向移动的距离<br> 2. 单独设置某个方向的移动距离：translateX()&amp;translateY()</p></blockquote></li></ul><p>.box li:hover{<br>  transform: translate(30px);&#x2F;<em>只水平移动</em>&#x2F;<br>  transform: translateY(30px);<br>}</p><h4 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h4><p><strong>语法</strong><br>transform：scale(x轴缩放倍数，y轴缩放倍数)</p><blockquote><p>一般只取一个值等比例缩放<br>transform：scale(缩放倍数);<br>缩放倍数大于1放大，小于1缩小</p></blockquote><h4 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h4><p><strong>语法</strong><br>background-image:linear-gradient{<br>颜色1，<br>颜色2<br>};</p><p><strong>半透明渐变</strong></p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p><strong>定义动画</strong></p><blockquote><p>两个状态<br>@keyframes 动画名称{<br>  from{}<br>  to{}<br> }</p></blockquote><p> 或</p><blockquote><p>多个状态<br>  @keyframes 动画名称{<br>  0%{}<br>  10%{}<br>  15%{}<br>  100%{}<br> }</p></blockquote><p> <strong>使用动画</strong><br> animation: 动画名称 动画花费时长;</p><h3 id="乱数假文"><a href="#乱数假文" class="headerlink" title="乱数假文"></a>乱数假文</h3> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入Lorem，回车就会生成</span><br></pre></td></tr></table></figure><h2 id="name-class-ID的区别"><a href="#name-class-ID的区别" class="headerlink" title="name,class,ID的区别"></a>name,class,ID的区别</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端学习路线</title>
      <link href="/2023/01/01/qian-duan-xue-xi-lu-xian/"/>
      <url>/2023/01/01/qian-duan-xue-xi-lu-xian/</url>
      
        <content type="html"><![CDATA[<p>路线一：1.HTML,CSS,JS<br>2.VUE,ElementUI<br><a href="https://www.runoob.com/">菜鸟教程HTML和CSS</a><br><a href="https://element.eleme.cn/#zh-CN">VUE学习</a><br>3.后端建议VisualStudio WEBApi搭建Restful接口服务<br><a href="https://www.jianshu.com/p/c8e35b2057d2">Asp.Net Core WebApi 从开发到部署</a><br>4.案例研究<br><a href="https://panjiachen.github.io/vue-element-admin-site/zh/">案例研究</a></p><p>html-&gt;js-&gt;css  2个月<br>ES6 小马哥、阮一峰技术文档  一周<br>AJAX 尚硅谷  2天<br>vue2基础  张天宇  1月<br>react</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Maya学习</title>
      <link href="/2022/12/09/maya-xue-xi/"/>
      <url>/2022/12/09/maya-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="界面介绍"><a href="#界面介绍" class="headerlink" title="界面介绍"></a>界面介绍</h1><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>窗口，设置，首选项，文件项目，自动保存不要开。<br>文件对话框，换成本地。<br>图像文件，自动加载更新的图像文件<br>shift+鼠标 放大缩小<br>alt +鼠标左键  旋转<br>alt +鼠标右键  放大放小<br>alt+鼠标中键   平移</p><p>空格加鼠标左键  透视图</p><h3 id="导出格式"><a href="#导出格式" class="headerlink" title="导出格式"></a>导出格式</h3><p>导出obg就可以与其他平台对接。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java Script</title>
      <link href="/2022/10/28/java-script/"/>
      <url>/2022/10/28/java-script/</url>
      
        <content type="html"><![CDATA[<h3 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h3><p>运行在客户端的脚本语言，是一门脚本语言，不需要编译，运行过程由js解释器来逐行解释并执行。现在也可以基于Node.js技术进行服务器端编程。<br>是一种嵌入到HTML文件中的<strong>基于对象</strong>和<strong>事件驱动</strong>并具有安全性的脚本语言。<br>不需要经过编译，直接在运行时有浏览器解释执行。<br>安全性：不允许访问本地的硬盘。<br>B&#x2F;S架构：所有的客户端都用浏览器。<br>js主要用于在客户端动态地，与客户交互地完成一些html文件所不能实现的功能<br><strong>对大小写敏感</strong></p><h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><ol><li>Snipaste<br>f1截图  fn+f1<br>f3定在屏幕上  fn+f3<br> 取色：shift切换  fn+esc “锁定功能键”</li><li>Zoomlt64.exe<br> ctrl+1 放大<br> ctrl+2 画图<br> 画图时按住ctrl是矩形<br> 按住tab是圆形<br> 按住字母可以改变颜色 r红色 b蓝色 g绿色 p粉色 o橙色</li><li></li></ol><h4 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h4><p>改变html显示文本、图像等内容<br>改变html样式<br>检验用户输入的内容<br>有效地组织网页内容（不同条件下页面内容的显示和隐藏）</p><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ol><li>表单动态校验(JS产生的最初目的)</li><li>网页特效（监听用户的一些行为让昂也做出对应的反馈）</li><li>服务端开发(Node.js)</li><li>桌面程序</li><li>App(Cordova)</li><li>控制硬件-物联网</li><li>游戏开发(cocos2d-js)</li><li>数据交换（获取后台数据，渲染到前端）</li><li>服务端编程（node.js）</li></ol><h4 id="html和css和js的关系"><a href="#html和css和js的关系" class="headerlink" title="html和css和js的关系"></a>html和css和js的关系</h4><p>前两个是描述语言，后者是编程类语言</p><h4 id="浏览器执行JS"><a href="#浏览器执行JS" class="headerlink" title="浏览器执行JS"></a>浏览器执行JS</h4><p>浏览器组成：</p><ol><li>渲染引擎：用来解析html和css，俗称内核</li><li>JS引擎：也叫JS解释器，用来读取网页中的javaScript代码，对其处理后运行。</li></ol><h4 id="JS组成"><a href="#JS组成" class="headerlink" title="JS组成"></a>JS组成</h4><ol><li>ECMAScript：javascript语法</li><li>Web API:由DOM(网页文档对象模型)和BOM（浏览器对象模型）组成<br> DOM：页面文档对象模型,对各种元素进行操作(移动、大小、添加和删除元素)<br> BOM：浏览器对象模型，提供了独立于内容、可以与浏览窗口进行互动的对象结构，可以操作浏览器窗口，比如弹出框，控制浏览器跳转、获取分辨率等。</li></ol><h4 id="书写位置"><a href="#书写位置" class="headerlink" title="书写位置"></a>书写位置</h4><ol><li><p>行内式：直接写到元素的内部<br>&lt;\input type&#x3D;”button” value&#x3D;”唐伯虎” onclick&#x3D;”alert(‘点秋香’)”&gt;</p></li><li><p>内嵌式：(在body里面写，在</body>的上面)，js要写在html文件底部附近，因为若写在上面，可能会因为html尚未加载而失效</p></li><li><p>外部式：<script src="myjs.js"></script>，两个script标签中间不要写代码，因为会被忽略</p></li></ol><p>注意：js中用单引号写文本内容<br>两个script标签内不能写内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;script&gt; </span></span><br><span class="line"><span class="comment">    // 弹出警示框（内嵌式）</span></span><br><span class="line"><span class="comment">    alert(&#x27;努力，奋斗!&#x27;);</span></span><br><span class="line"><span class="comment">  &lt;/script&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    //外部式</span></span><br><span class="line"><span class="comment">  &lt;script src=&quot;./myjs.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 行内式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;唐伯虎&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;点秋香&#x27;)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;嗨！我回来了！&#x27;)&quot;</span> &gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><ol><li>单行&#x2F;&#x2F; ctrl+&#x2F;</li><li>多行&#x2F;**&#x2F; shift+alt+a</li><li>js结束可以加分号，或者都不加分号</li></ol><h4 id="输入输出语句"><a href="#输入输出语句" class="headerlink" title="输入输出语句"></a>输入输出语句</h4><table><thead><tr><th>方法</th><th>说明</th><th>归属</th></tr></thead><tbody><tr><td>alert(msg)</td><td>浏览器弹出警示框</td><td>浏览器</td></tr><tr><td>console.log(msg)</td><td>浏览器控制台打印输出信息</td><td>浏览器</td></tr><tr><td>prompt(info)</td><td>浏览器弹出输入框</td><td>浏览器</td></tr></tbody></table><ul><li>输出语法</li></ul><ol><li><p>document.write(‘要输出的内容’)<br>作用：向body内输出内容<br>注意：如果输出的内容写的是标签，也会被解析成网页元素</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;</span></span></span><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标签</span></span></span><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#x27;);</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>alert(‘弹出警示框的内容’)；<br> 作用：页面弹出警告对话框</p></li><li><p>console.log(‘控制台打印’)；<br> 作用：控制台输出语法，程序员调试使用（用户看不到）</p></li></ol><ul><li>输入语法</li></ul><ol><li>prompt(‘请输入您的姓名：’)<br> 作用：显示一个对话框，对话框中包含一条文字信息，用来提示用户输入文字。</li></ol><ul><li>JavaScript代码执行顺序<br>1.按html文档流顺序执行javascript代码<br>2.alert()和prompt()它们会跳过页面渲染先被执行</li></ul><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><ul><li>前任</li></ul><ol><li>声明 var age;&#x2F;&#x2F;声明一个名称为age的变量<br>var是js的关键字，用来声明变量（varlable变量的意思）。</li><li>赋值：age&#x3D;10;</li><li>输出：console.log(age);</li><li>初始化：var age&#x3D;10;</li></ol><ul><li>现任</li></ul><ol><li>声明<br>语法：let 变量名<br>let age</li><li>赋值<br>age &#x3D; 18</li><li>输出变量<br>alert(‘age’)</li><li>声明的同时赋值<br>let age&#x3D;80</li></ol><ul><li>let、var的区别</li></ul><ol><li><p>作用域不同<br> var是函数作用域（伪全局作用域），而let是块级作用域。在块级作用域内声明的变量无法在块级作用域外面使用</p></li><li><p>let不能在定义之前访问该变量，但是var可以在定义之前访问（let不会预解析）。</p></li><li><p>let不能被重新定义，但是var是可以的</p></li></ol><ul><li><p>更新变量<br>目标赋值后还可以通过简单给它一个不同的值来更新它<br>let age &#x3D; 18<br>age &#x3D; 19</p></li><li><p>不能写成 let age &#x3D; 18<br>    let age &#x3D; 19<br>  let 不允许多次声明一个变量</p></li><li><p>声明多个变量<br>let age &#x3D; 18,uname &#x3D;  ‘哈哈’</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> uname=<span class="title function_">prompt</span>(<span class="string">&#x27;请输入姓名&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(uname)</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="交换变量值"><a href="#交换变量值" class="headerlink" title="交换变量值"></a>交换变量值</h3> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> num1 = <span class="number">20</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> num2 = <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> temp</span></span><br><span class="line"><span class="language-javascript">      temp = num1</span></span><br><span class="line"><span class="language-javascript">      num1 = num2</span></span><br><span class="line"><span class="language-javascript">      num2 = temp</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;num1的值为&#x27;</span>+num1)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;num2的值为&#x27;</span>+num2)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h3><p> 是程序在内存中申请的一块用来存放数据的小空间<br>区分大小写<br>只能下划线、数字、字母、$组成，数字不能开头<br>字母严格区分大小写，例如Age和age是不同的变量<br>一般用小驼峰命名法</p><h2 id="WEB-API"><a href="#WEB-API" class="headerlink" title="WEB API"></a>WEB API</h2><h3 id="let-or-const"><a href="#let-or-const" class="headerlink" title="let or const"></a>let or const</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复杂数据类型放在堆里面，先在栈里面存放一个地址，地址指向堆里面</span></span><br><span class="line">       <span class="comment">//数组</span></span><br><span class="line">       <span class="keyword">const</span> arr=[<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>]</span><br><span class="line">       arr.<span class="title function_">push</span>(<span class="string">&#x27;blue&#x27;</span>)<span class="comment">//追加之后，地址不变，就不会有错误</span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"></span><br><span class="line">       <span class="comment">//以下是错误的写法，因为地址变了，对象就变了</span></span><br><span class="line">       <span class="comment">//arr=[1,2,3]</span></span><br><span class="line">       <span class="comment">//console.log(arr)</span></span><br></pre></td></tr></table></figure><p>以后声明变量时优先使用const，且必须赋值，如果发现它后面是要被修改的，再改为let。<br>对象是应用类型，里面存储的是地址，只要地址不变，就不会报错。<br>建议数组和对象都使用const来声明。</p><p>如果基本数据类型的值或引用地址发生变化的时候，就要用let。<br>例如，一个变量进行加减运算，比如for循环中的I++.</p><h4 id="数据类型-数字类型"><a href="#数据类型-数字类型" class="headerlink" title="数据类型-数字类型"></a>数据类型-数字类型</h4><p>NaN代表一个计算错误。它是一个不正确的或者一个未定义的数学操作所得到的结果<br>NaN是粘性的，任何对NaN的操作都会返回NaN</p><p>DOM:文档对象模型，用来操作标签，网页中的内容<br>DOM树：将HTML文档以树状结构直观地表现出来，体现标签与标签之间的关系<br>DOM对象：浏览器根据html标签生成的JS对象，所有的标签属性都可以再这个对象上面找到<br>  修改这个对象的属性会自动映射到标签身上。对象都有属性和方法</p><p>  DOM 对象核心：把网页内容当作对象处理</p><p>  document对象：是DOM里提供的一个对象，它提供的属性和方法都是用来访问和操作网页内容的。<br>  例如：document.write()</p><h3 id="DOM-获取元素"><a href="#DOM-获取元素" class="headerlink" title="DOM-获取元素"></a>DOM-获取元素</h3><ol><li>获取元素<br>根据css选择器来获取<br>语法：<br>1.1 选择匹配的第一个元素</li></ol><ul><li>document.querySelector(‘CSS选择器’)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> box=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(box)</span><br></pre></td></tr></table></figure><p>注：参数：包含一个或多个有效的css选择器字符串<br>返回值：CSS选择器匹配的第一个元素，一个HTMLElement对象。如果没有匹配的，就返回NULL.</p><p>1.2 选择匹配的多个元素<br>语法：</p><ul><li>document.querySelectorAll(‘css选择器’)<br><strong>参数</strong>：包含一个或多个有效的CSS选择器字符串<br><strong>返回值</strong>：css选择器匹配的NodeList对象集合<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取第一个li</span></span><br><span class="line"><span class="comment">// const li=document.querySelector(&#x27;ul li:first-child&#x27;)</span></span><br><span class="line"> <span class="comment">//获取所有的li</span></span><br><span class="line">      <span class="keyword">const</span> lis=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;ul li&#x27;</span>)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(lis)</span><br></pre></td></tr></table></figure></li></ul><p>注：document.querySelectorAll(‘CSS选择器’)得到的是一个<strong>伪数组</strong>，有长度有索引号的数组，但没有Pop(),Push()等数组方法。想要得到里面的每一个对象，则需要遍历（for）的方式获得。</p><p>1.3 其他获取DOM元素的方法<br>根据id获取一个元素</p><ul><li>document.getElementById(‘nav’)</li></ul><p>根据标签获取一类元素 获取页面所有div<br>-document.getElementsByTagName(‘div’)</p><p>根据 类名 获取元素  获取页面 所有类名为w的<br>-document.getElementsByClassName(‘w’)</p><ol start="2"><li>修改属性<br> 2.1 修改对象内容<br> 元素<strong>innerText</strong>属性</li></ol><ul><li>将文本内容添加&#x2F;更新到任意标签位置</li><li>显示纯文本，不解析标签</li></ul><p>例如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">   <span class="attr">name</span>:<span class="string">&#x27;haha&#x27;</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//1.获取元素</span></span><br><span class="line"> <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box1&#x27;</span>)</span><br><span class="line"> <span class="comment">//2.修改文字内容  对象.innerText 属性</span></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">innerText</span>)<span class="comment">//获取文字内容</span></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>)</span><br><span class="line"> box.<span class="property">innerText</span> = <span class="string">&#x27;我是一个盒子&#x27;</span><span class="comment">//修改文字内容</span></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">innerText</span>)<span class="comment">//获取文字内容</span></span><br><span class="line"> box.<span class="property">innerText</span> = <span class="string">&#x27;&lt;strong&gt;我是一个盒子&lt;/strong&gt;&#x27;</span> <span class="comment">//不解析标签</span></span><br></pre></td></tr></table></figure><p>元素<strong>innerHTML</strong>属性</p><ul><li>将文本内容添加&#x2F;更新到任意标签位置</li><li>会解析标签，多标签建议使用模板字符</li></ul><h4 id="案例：抽奖名单"><a href="#案例：抽奖名单" class="headerlink" title="案例：抽奖名单"></a>案例：抽奖名单</h4><p>步骤：</p><ol><li>声明数组</li><li>生成随机数const random &#x3D; Math.floor(Math.random() * personArr.length)</li><li>获取元素 document.querySelector(‘#one’)</li><li>把随机生成的数组里的名字给这个元素的innerHTML</li><li>把名字从名单里面删除</li><li>重复2，3，4，5步，分别从剩下的名单里面抽取</li></ol><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>抽奖名单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一等奖：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>???<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>二等奖：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>???<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>三等奖：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;three&quot;</span>&gt;</span>???<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1.声明数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> personArr=[<span class="string">&#x27;大可爱&#x27;</span>,<span class="string">&#x27;小可爱&#x27;</span>,<span class="string">&#x27;中可爱&#x27;</span>,<span class="string">&#x27;翟苏燕&#x27;</span>,<span class="string">&#x27;杨文慧&#x27;</span>,<span class="string">&#x27;范源敏&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.先做一等奖</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//生成随机数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> random = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * personArr.<span class="property">length</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//console.log(personArr[random])</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.2获取one元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#one&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.3 把名字给one</span></span></span><br><span class="line"><span class="language-javascript">    one.<span class="property">innerHTML</span>=personArr[random]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.4删除这个名字</span></span></span><br><span class="line"><span class="language-javascript">    personArr.<span class="title function_">splice</span>(random,<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//测试是否删除了</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// console.log(personArr)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//3.再做二等奖</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//生成随机数,因为名单长度减一，所以要重新生成</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> random2 = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * personArr.<span class="property">length</span>)</span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//2.2获取two元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> two=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#two&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.3 把名字给two</span></span></span><br><span class="line"><span class="language-javascript">    two.<span class="property">innerHTML</span>=personArr[random2]</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">//2.4删除这个名字</span></span></span><br><span class="line"><span class="language-javascript">    personArr.<span class="title function_">splice</span>(random2,<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3.再做二等奖</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//生成随机数,因为名单长度减一，所以要重新生成</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> random3 = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * personArr.<span class="property">length</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.2获取three元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> three=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#three&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.3 把名字给three</span></span></span><br><span class="line"><span class="language-javascript">    three.<span class="property">innerHTML</span>=personArr[random3]</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">//2.4删除这个名字</span></span></span><br><span class="line"><span class="language-javascript">    personArr.<span class="title function_">splice</span>(random3,<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="操作元素属性"><a href="#操作元素属性" class="headerlink" title="操作元素属性"></a>操作元素属性</h3><ol><li>常用属性修改</li></ol><ul><li>还可以通过JS设置&#x2F;修改标签元素属性，比如通过src更换图片</li><li>最常见的属性比如： href、title、src等</li><li><strong>语法</strong>：对象.属性 &#x3D; 值</li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取图片元素</span></span><br><span class="line">   <span class="keyword">const</span> img= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">   <span class="comment">//2. 修改图片对象的属性  对象.属性 = 值</span></span><br><span class="line">    img.<span class="property">src</span> = <span class="string">&#x27;./Pic/1.jpg&#x27;</span></span><br><span class="line">    img.<span class="property">title</span> = <span class="string">&#x27;啦啦啦&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="案例-页面刷新，图片随机更换"><a href="#案例-页面刷新，图片随机更换" class="headerlink" title="案例 页面刷新，图片随机更换"></a>案例 页面刷新，图片随机更换</h4><p>要求：刷新页面时，页面中的图片随机显示不同的图片<br>分析：</p><ul><li>随机显示，需要用到随机函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取从N~M的随机整数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N,M</span>)&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(M-N+<span class="number">1</span>))+N</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>更换图片需要用到图片的src属性，进行修改</li><li>核心思路：获取图片元素，随机得到图片序号，图片.src&#x3D;图片随机路径</li></ul><p><strong>代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Pic/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//取从N~M的随机整数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N,M</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(M-N+<span class="number">1</span>))+N</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//获取图片元素</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> img=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//随机得到图片序号</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> random=<span class="title function_">getRandom</span>(<span class="number">1</span>,<span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//图片.src=图片随机路径</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 注意：``是tab上边的反引号</span></span></span><br><span class="line"><span class="language-javascript"> img.<span class="property">src</span>=<span class="string">`./Pic/<span class="subst">$&#123;random&#125;</span>.jpg`</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>操作元素样式属性</li></ol><ul><li>还可以通过JS设置&#x2F;修改标签元素的样式属性。<br>比如通过 轮播图小圆点自动更换颜色样式<br>点击按钮可以滚动图片，这是移动的图片的位置 left等等</li></ul><p>学习路径：<br>2.1 通过style属性操作css</p><blockquote><p>语法： 对象.style.样式属性 &#x3D; 值     别忘了跟单位  多组单词时采用小驼峰命名法</p></blockquote><p>例如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取元素</span></span><br><span class="line">    <span class="keyword">const</span> box= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span><br><span class="line">    <span class="comment">//2.修改盒子宽高,别忘了加单位</span></span><br><span class="line">    box.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;400px&#x27;</span></span><br><span class="line">    <span class="comment">//3. 修改盒子背景色，遇到多组单词时采用小驼峰命名法</span></span><br><span class="line">    box.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;hotpink&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="案例-页面刷新，页面随机更换背景图片"><a href="#案例-页面刷新，页面随机更换背景图片" class="headerlink" title="案例 页面刷新，页面随机更换背景图片"></a>案例 页面刷新，页面随机更换背景图片</h4><p>分析：</p><ul><li>随机函数</li><li>css页面背景图片 background-image</li><li>标签选择body，因为body是唯一的标签，可以直接写成document.body.style</li></ul><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">./Pic/1.jpg</span>) no-repeat top center/cover;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1.随机函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N,M</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(M-N+<span class="number">1</span>))+N</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2. 获取随机数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> random=<span class="title function_">getRandom</span>(<span class="number">1</span>,<span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3.得到随机路径</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundImage</span>=<span class="string">`url(./Pic/<span class="subst">$&#123;random&#125;</span>.jpg)`</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.2 操作类名（className）操作css</p><ul><li>如果修改的样式比较多，直接通过style 属性修改比较麻烦，可以借助css类名的形式<br><strong>语法</strong><blockquote><p>元素.className &#x3D; ‘active’   &#x2F;&#x2F;active 是一个css类名</p></blockquote></li></ul><p>注意：</p><ul><li>由于class是关键字，所以使用className去代替</li><li>className是使用新值换旧值，如果需要添加一个类，需要保留之前的类名</li></ul><p>例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">50px</span> <span class="number">25px</span> <span class="built_in">rgb</span>(<span class="number">251</span>, <span class="number">252</span>, <span class="number">253</span>) inset ;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//修改样式</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">className</span>=<span class="string">&#x27;box&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.3 通过classList操作类型CSS</p><ul><li>为了解决className容易覆盖以前的类名，我们可以通过classList方式追加和删除类名<br><strong>语法</strong>：<blockquote><p>&#x2F;&#x2F;追加一个类名<br>元素.classList.add(‘类名’)<br>&#x2F;&#x2F;删除一个类<br>元素.classList.remove(‘类名’)<br>&#x2F;&#x2F;切换一个类<br>元素.classList.toggle(‘类名’)</p></blockquote></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">50px</span> <span class="number">25px</span> <span class="built_in">rgb</span>(<span class="number">251</span>, <span class="number">252</span>, <span class="number">253</span>) inset ;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//追加样式,类名不加点，且为字符串</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//切换样式， toggle() ,有或没有，有就删掉，没有就加上</span></span></span><br><span class="line"><span class="language-javascript">   box.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;active&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>操作表单元素属性</li></ol><p>表单很多情况，也需要修改属性，比如点击眼镜，可以看到密码，本质是把表单类型转换为文本框。<br>正常的有属性有取值的跟其他的标签属性没有任何区别</p><ul><li>获取：DOM对象.属性名</li><li>设置：DOM对象.属性名 &#x3D; 新值</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">表单<span class="selector-class">.value</span> = <span class="string">&#x27;用户名&#x27;</span></span><br><span class="line">表单<span class="selector-class">.type</span> = <span class="string">&#x27;password&#x27;</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;内容&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1.获取表单元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> uname= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.获取值 获取表单里面的值  表单.value</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//3. 不能用uname.innerHTML  innerHTML得不到表单的内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(uname.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">     uname.<span class="property">value</span> = <span class="string">&#x27;我是内容&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    uname.<span class="property">type</span>=<span class="string">&#x27;password&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表单属性中添加就有效果，移除就没有效果，一律用布尔值表示，如果为true代表添加了该属性，如果是false代表移除了该属性</p><p>比如：disabled、checked、selected</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> &gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> ipt=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">   <span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="property">checked</span>)<span class="comment">//false 代表没有选中</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//ipt.checked=&#x27;true&#x27;//为true时代表选中，但不提倡有引号的，有隐式转换，虽然除了空其他全为true</span></span></span><br><span class="line"><span class="language-javascript">  ipt.<span class="property">checked</span>=<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//获取</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> button= <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(button.<span class="property">disabled</span>) <span class="comment">//默认false 不禁用</span></span></span><br><span class="line"><span class="language-javascript">  button.<span class="property">disabled</span> = <span class="literal">true</span> <span class="comment">//禁用按钮</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>自定义属性<br>标准属性：标签天生自带的属性 比如class、id、title等，可以直接使用点语法操作 比如：disabled、checked、selected<br>自定义属性：</li></ol><ul><li>在html5中推出来了专门的data-自定义属性</li><li>在标签上一律以data-开头</li><li>在dom对象上一律以dataset对象方式获取</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">data-spm</span>=<span class="string">&quot;不知道&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> one=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(one.<span class="property">dataset</span>.<span class="property">spm</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="定时器-间歇函数"><a href="#定时器-间歇函数" class="headerlink" title="定时器-间歇函数"></a>定时器-间歇函数</h4><p><strong>介绍</strong><br>网页中经常会需要一种功能：每隔一段世家需要自动执行一段代码，不需要我们手动去出发，例如网页中的倒计时，要实现这种需求，需要定时器函数，定时器函数有两种<br><strong>使用</strong></p><ol><li>开启定时器<br>setInterval(函数，间隔时间)<br>作用：每隔一段时间调用这个函数</li></ol><h3 id="DOM-事件基础"><a href="#DOM-事件基础" class="headerlink" title="DOM-事件基础"></a>DOM-事件基础</h3><ol><li><p>注册事件</p></li><li><p>tab栏切换</p></li></ol><h3 id="DOM-事件进阶"><a href="#DOM-事件进阶" class="headerlink" title="DOM-事件进阶"></a>DOM-事件进阶</h3><ol><li><p>事件对象</p></li><li><p>事件委托</p></li></ol><h3 id="DOM-节点操作"><a href="#DOM-节点操作" class="headerlink" title="DOM-节点操作"></a>DOM-节点操作</h3><ol><li>结点的增删查改</li></ol><h3 id="BOM-操作浏览器"><a href="#BOM-操作浏览器" class="headerlink" title="BOM-操作浏览器"></a>BOM-操作浏览器</h3><ol><li><p>BOM</p></li><li><p>插件</p></li><li><p>本地存储</p></li></ol><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>html5</title>
      <link href="/2022/10/15/html5/"/>
      <url>/2022/10/15/html5/</url>
      
        <content type="html"><![CDATA[<h4 id="vscode-介绍-HTML认知"><a href="#vscode-介绍-HTML认知" class="headerlink" title="vscode 介绍 HTML认知"></a>vscode 介绍 HTML认知</h4><p><strong>打开</strong><br>把文件夹拖至vscode 的空白区域即可；<br>新建文件，名字+.html；<br><strong>网页主体</strong></p><blockquote><p>快捷键：!<br>shift+alt+箭头的下 可以实现快速复制</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>打开网页</strong></p><blockquote><p>Alt+B<br><strong>注释</strong><br>快捷键：Ctrl+&#x2F;,取消再进行一次<br> <!--  --><br><strong>文字加粗</strong><br><strong> 变粗的文字</strong></p></blockquote><p><strong>标签的关系</strong><br>父子关系，兄弟关系</p><h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><p>&lt;h1&gt;一级标题&lt;&#x2F;h1&gt;<br>&lt;h2&gt;二级标题&lt;&#x2F;h2&gt;<br>&lt;h3&gt;三级标题&lt;&#x2F;h3&gt;<br>&lt;h4&gt;四级标题&lt;&#x2F;h4&gt;<br>&lt;h5&gt;五级标题&lt;&#x2F;h5&gt;<br>&lt;h6&gt;六级标题&lt;&#x2F;h6&gt;<br>独占一行</p><h4 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h4><p>&lt;p&gt;这是一段文字&lt;/p&gt;<br>如果内容太长，可以查看，自动换行<br>特点：独占一行，两段之间有缝隙。<br><strong>选中相同内容</strong></p><blockquote><p>先选中其中一个，再CTRL+D<br><strong>换行</strong><br>&lt;br&gt;<br>&lt;hr&gt;<br><strong>水平分割线</strong><br>&lt;hr&gt;</p></blockquote><p><strong>文本格式化标签</strong></p><table><thead><tr><th>标签</th><th>说明</th><th>标签（突出强调重要性的语境）</th><th>说明</th></tr></thead><tbody><tr><td>b</td><td>加粗</td><td>strong</td><td>加粗</td></tr><tr><td>u</td><td>下划线</td><td>ins</td><td>下划线</td></tr><tr><td>i</td><td>倾斜</td><td>em</td><td>倾斜</td></tr><tr><td>s</td><td>删除线</td><td>del</td><td>删除</td></tr></tbody></table><h4 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h4><p>&lt;img src&#x3D;” “ alt&#x3D;””&gt;<br>需要进行标签属性的设置src&#x3D;””,alt&#x3D;””.src是属性名，引号中是属性值.</p><blockquote><p>属性注意点：</p></blockquote><ol><li>标签的属性写在开始标签内部</li><li>标签上可以同时存在多个属性</li><li>属性之间以空格隔开</li><li>标签名和属性之间以空格隔开</li><li>属性之间无顺序</li></ol><p> 属性名：<br> alt：替换文本<br> 若图片加载不出来时，以文字代替。</p><p> title：提示文本<br> 当鼠标悬停在图片上时显示的文本，不仅可以用于图片标签，还可以用于其他标签。</p><p> width和height(一般只设置一个)<br> 设置图片的高度和宽度，若只设置了其中一个，另一个就会等比例缩放（这样图片不会变形）</p><p> <strong>路径介绍</strong></p><ol><li>绝对路径：目录下的绝对位置，通常从盘符开始。<br>  例如：C:\Users\杨宛荧\Desktop\3.png<br>  完整的网络地址 <a href="https://sakuraywy.github.io/about/#lg=1&amp;slide=0">https://sakuraywy.github.io/about/#lg=1&amp;slide=0</a></li></ol><p>  linux系统：\为根目录</p><ol start="2"><li>相对路径：从当前文件开始找目标文件<br>分类：<br>同级目录(图片在同一个文件夹中)<br>&lt;\img src&#x3D;”目标图片.jpg”&gt;<br>&lt;\img src&#x3D;”.&#x2F;目标图片.jpg”&gt;<br>下级目录（图片所在文件夹与当前在同一个文件夹中）<br>&lt;\img src&#x3D;”img&#x2F;3.png”&gt;<br>上级目录（当前所在的文件夹与图片在同一个文件夹中）<br>返回上一级..&#x2F;<br>&lt;\img src&#x3D;”..&#x2F;3.png”&gt;<blockquote><p>注：&lt;后的\去掉，因为格式问题加上 的</p></blockquote></li></ol><p><strong>音频标签</strong><br>&lt;\audio src&#x3D;”.&#x2F;music.mp3” controls&gt;</audio></p><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>音频的路径</td></tr><tr><td>controls</td><td>显示播放的控件</td></tr><tr><td>autoplay</td><td>自动播放(部分浏览器不支持)</td></tr><tr><td>loop</td><td>循环播放</td></tr></tbody></table><p>注意：目前只支持三种格式：MP3，wav，ogg</p><p><strong>视频标签</strong><br>&lt;\video src&#x3D;”.&#x2F;video.mp4” controls&gt;</video></p><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>视频的路径</td></tr><tr><td>controls</td><td>显示播放的控件</td></tr><tr><td>autoplay</td><td>自动播放(谷歌浏览器需要增加 muted实现静音播放)</td></tr><tr><td>loop</td><td>循环播放</td></tr></tbody></table><p><strong>链接标签</strong><br>&lt;\a href&#x3D;”.&#x2F;目标网页.html”&gt;超链接</a><br>注意：</p><ol><li>当开发网站初期，还不知道跳转链接时，href的值可以写#（空链接）</li><li>href的标签值是跳转地址</li></ol><p>属性名：target<br>属性值：网页的打开形式</p><table><thead><tr><th>取值</th><th>效果</th></tr></thead><tbody><tr><td>_self</td><td>默认值，在当前窗口中跳转（覆盖原网页）</td></tr><tr><td>_blank</td><td>在新窗口中跳转（保留原网页）</td></tr></tbody></table><p>例如：&lt;\a href&#x3D;”<a href="https://sakuraywy.github.io/&quot;">https://sakuraywy.github.io/&quot;</a> target&#x3D;”_blank”&gt;我的博客网址&lt;/a&gt;</p><h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><ol><li>无序列表<table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>ul</td><td>表示无序列表的整体，用于包囊标签</td></tr><tr><td>li</td><td>表示无序列表的每一项，用于包含每一项的内容</td></tr></tbody></table></li></ol><p> 特点：列表的每一项前默认显示圆点标识<br> ul只能包含li标签，li标签可以包含任意内容</p><blockquote><p>去掉列表的符号<br>     li{<br>      list-style: none;<br>     }<br>2. 有序列表</p><table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>ol</td><td>表示无序列表的整体，用于包囊标签</td></tr><tr><td>li</td><td>表示无序列表的每一项，用于包含每一项的内容</td></tr></tbody></table></blockquote><p> 特点：列表的每一项前默认序号<br> ol只能包含li标签，li标签可以包含任意内容</p><ol start="3"><li>自定义列表<table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>dl</td><td>表示自定义列表的整体，用于包裹dt&#x2F;dd标签</td></tr><tr><td>dt</td><td>表示自定义列表的主题</td></tr><tr><td>dd</td><td>表示自定义列表的针对主题的每一项内容</td></tr></tbody></table></li></ol><p>注意：dd前会默认显示缩进效果；<br>dl标签中只允许包含dt&#x2F;dd标签</p><h4 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h4><table><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>table</td><td>表格整体，用于包含多个tr</td></tr><tr><td>tr</td><td>表格每行，可用于包含td</td></tr><tr><td>td</td><td>表格单元格，可用于包含内容</td></tr><tr><td>例如：</td><td></td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>这是一个表格<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>专业<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>小仙女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2211221<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>种花<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>氨基酸<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2947533<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>造蛋白质<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>属性</strong></p><table><thead><tr><th>属性名</th><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>border</td><td>数字</td><td>边框宽度</td></tr><tr><td>width</td><td>数字</td><td>表格宽度</td></tr><tr><td>height</td><td>数字</td><td>表格高度</td></tr></tbody></table><p>写在table标签内部<br>实际开发时推荐使用css</p><p><strong>表格标题和表头单元格标签</strong></p><table><thead><tr><th>标签名</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>caption</td><td>表格大标题</td><td>默认在表格整体顶部居中位置显示</td></tr><tr><td>th</td><td>表头单元格</td><td>表示一列小标题，默认文字加粗居中显示</td></tr></tbody></table><p>caption标签书写在table标签的下面一行<br>th标签写在tr标签内部，用于替换td标签</p><p><strong>表格的结构标签</strong></p><table><thead><tr><th>标签名</th><th>名称</th></tr></thead><tbody><tr><td>thead</td><td>表格头部</td></tr><tr><td>tbody</td><td>表格主题</td></tr><tr><td>tfoot</td><td>表格底部</td></tr></tbody></table><p>表格结构标签内部用于包含tr标签<br>表格的结构标签可以省略，但是加上的话可以让浏览器执行效率更高</p><p><strong>单元格合并</strong><br>步骤：</p><ol><li>明确合并哪几个单元格</li><li>通过左上原则，确定保留谁删除谁<br>上下合并保留上，左右合并保留左</li><li>给保留的单元格设置格式<table><thead><tr><th>属性名</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>rowspan</td><td>合并单元格个数</td><td>跨行合并（上下合并）</td></tr><tr><td>colspan</td><td>合并单元格个数</td><td>跨列合并（左右合并）</td></tr></tbody></table></li></ol><p>注意：只有同一个结构标签中的单元格才能合并，不能跨结构标签合并（不能跨thead、tbody、tfoot合并）</p><p>属性加在td标签中，例如：&lt;\td rowspan&#x3D;’2’&gt;</p><h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h4><p><strong>应用</strong>：登录、注册、搜索<br><strong>input系列</strong><br>标签名：input<br>这个标签可以通过type属性值的不同，展示不同的效果</p><table><thead><tr><th>type属性值</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td>文本框，用于输入单行文本</td></tr><tr><td>password</td><td>密码框，用于输入密码</td></tr><tr><td>radio</td><td>单选框，用于多选一</td></tr><tr><td>checkbox</td><td>多选框</td></tr><tr><td>file</td><td>文件选择，用于之后上传文件</td></tr><tr><td>submit</td><td>提交按钮</td></tr><tr><td>reset</td><td>重置按钮</td></tr><tr><td>button</td><td>普通按钮，默认无功能，之后配合js添加功能</td></tr><tr><td>placeholder</td><td>占位符，提示用户输入内容的文本</td></tr></tbody></table><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">&quot;text&quot;</span> <span class="attribute">placeholder</span>=<span class="string">&quot;这是一个占位符&quot;</span>&gt;</span><br><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">&quot;password&quot;</span> <span class="attribute">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>单选框</strong></p><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>分组，有相同name属性值的为一组，一组中同时只能有一个被选中</td></tr><tr><td>cheaked</td><td>默认选中</td></tr></tbody></table><p>注意：name属性对于单选框有分组功能；有相同name属性值的单选框为一组，一组中只能有一个被选中</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性别： &lt;<span class="keyword">input</span> <span class="keyword">type</span>=&quot;radio&quot; <span class="type">name</span>=&quot;gender&quot;&gt;男 &lt;<span class="keyword">input</span> <span class="keyword">type</span>=&quot;radio&quot; <span class="type">name</span>=&quot;gender&quot;&gt;女</span><br><span class="line">默认：&lt;<span class="keyword">input</span> <span class="keyword">type</span>=&quot;radio&quot; checked&gt;默认选项</span><br><span class="line">方框选项：&lt;<span class="keyword">input</span> <span class="keyword">type</span>=&quot;checkbox&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>文件选择</strong></p><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>mutiple</td><td>多文件选择</td></tr></tbody></table><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件选择：&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> multiple&gt;</span><br></pre></td></tr></table></figure><p><strong>按钮</strong></p><table><thead><tr><th>标签名</th><th>属性</th></tr></thead><tbody><tr><td>submit</td><td>提交按钮</td></tr><tr><td>reset</td><td>重置按钮</td></tr><tr><td>button</td><td>普通按钮，默认无功能，之后配合js添加功能</td></tr><tr><td>要实现以上按钮功能，需要配合form标签使用，即用form标签把表单标签包含起来即可。</td><td></td></tr></tbody></table><blockquote><p>注：submit和reset要有表单域才能用，普通按钮可以添加属性value&#x3D;”按钮说明”</p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span> action=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">br</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span>&gt;</span><br><span class="line">    性别：&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;gender&quot;</span>&gt;男 &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;gender&quot;</span>&gt;女</span><br><span class="line">    提交按钮</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">  重置按钮</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;按钮呀&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="button按钮标签"><a href="#button按钮标签" class="headerlink" title="button按钮标签"></a>button按钮标签</h4><p>用于在网页中显示用户点击的按钮，是双标签.<br>标签名为button的属性：</p><table><thead><tr><th>type属性值</th><th>说明</th></tr></thead><tbody><tr><td>submit</td><td>提交按钮，点击之后提交</td></tr><tr><td>reset</td><td>重置按钮</td></tr><tr><td>button</td><td>普通按钮，默认无功能，可用js加功能</td></tr></tbody></table><h4 id="select下拉菜单标签"><a href="#select下拉菜单标签" class="headerlink" title="select下拉菜单标签"></a>select下拉菜单标签</h4><p>用于提供多个选择的下拉菜单表单控件<br>标签组成：<br> select标签：下拉菜单的整体<br> option标签：下拉菜单的每一项<br> selected：下拉菜单的默认选中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> &gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> &gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> &gt;</span>广东<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> &gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>南京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="textarea文本域标签"><a href="#textarea文本域标签" class="headerlink" title="textarea文本域标签"></a>textarea文本域标签</h4><p>在网页中提供可输入多行文本的表单空间<br>标签名：textarea<br>属性：</p><ul><li>cols:规定了文本域内可见宽度</li><li>rows:规定了文本域内可见行数</li></ul><p>注意点：</p><ul><li>右下角可以拖拽改变大小</li><li>实际开发时针对样式效果推荐使用css设置 <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;textarea&gt;</span><span class="section">&lt;/textarea&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h4><p>场景：常用于绑定内容与表单标签的关系<br>使用方法1：</p><ul><li>用label标签把内容（如：文本）包裹起来</li><li>在表单中添加id属性</li><li>在label标签的for属性中设置对应的id属性<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attribute">id</span>=<span class="string">&quot;男&quot;</span>&gt;&lt;label <span class="attribute">for</span>=<span class="string">&quot;男&quot;</span>&gt;男&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="attribute">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attribute">id</span>=<span class="string">&quot;nv&quot;</span>&gt;&lt;label <span class="attribute">for</span>=<span class="string">&quot;nv&quot;</span>&gt;女&lt;/label&gt;</span><br></pre></td></tr></table></figure>使用方法2：</li><li>直接用label标签把内容和表单标签一起包裹起来</li><li>需要把label标签的for属性删除即可</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attribute">id</span>=<span class="string">&quot;nan&quot;</span>&gt;&lt;label <span class="attribute">for</span>=<span class="string">&quot;nan&quot;</span>&gt;男&lt;/label&gt;</span><br><span class="line">&lt;label&gt;&lt;input <span class="attribute">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attribute">name</span>=<span class="string">&quot;gender&quot;</span>&gt;女&lt;/label&gt;</span><br></pre></td></tr></table></figure><h4 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h4><p>没有语义的布局标签div和span<br>场景：实际开发网页时会大量频繁地使用div和span</p><ul><li>div标签：一行只显示一个（独占一行）</li><li>span标签：一行可以显示多个</li></ul><p>有语义的标签<br>场景：在html5中，推出了一些给手机端用户使用</p><table><thead><tr><th>标签名</th><th>语义</th></tr></thead><tbody><tr><td>header</td><td>网页头部</td></tr><tr><td>nav</td><td>网页导航</td></tr><tr><td>footer</td><td>网页底部</td></tr><tr><td>aside</td><td>网页侧边栏</td></tr><tr><td>section</td><td>网页区块</td></tr><tr><td>article</td><td>网页文章</td></tr></tbody></table><blockquote><p>注：以上显示特点和div一样，但是比div多了不同的属性</p></blockquote><h4 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h4><p>场景：在网页中展示特殊符号时，需要使用字符实体替代<br>结构：&amp;英文<br>常见字符实体：空格  &amp;nbsp分号</p><h4 id="设置滚动字幕"><a href="#设置滚动字幕" class="headerlink" title="设置滚动字幕"></a>设置滚动字幕</h4><p>1 .<marquee>默认情况下，滚动文字从右向做滚动</marquee><br>2.属性：direction可以修改字幕滚动方向<br>  属性值：up 从下往上<br>       down 从上往下<br>       left 从右往左<br>       right 从左往右</p><p>  属性：behavior设置滚动字幕的滚动行为<br>  属性值：scroll 设置文字循环滚动（默认）<br>          slide 只进行一次滚动<br>          alternate 循环交替往返滚动</p><p>  属性：scorllamount 设置滚动速度  默认速度值为6<br>        scrolldelay  设置滚动延迟  默认100毫秒<br>  属性值：value，取值为数字</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法</title>
      <link href="/2022/10/09/shu-ju-jie-gou-yu-suan-fa/"/>
      <url>/2022/10/09/shu-ju-jie-gou-yu-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="第三章-栈和队列"><a href="#第三章-栈和队列" class="headerlink" title="第三章 栈和队列"></a>第三章 栈和队列</h1><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><ol><li>特点：先进后出</li><li>表示：<br>（1） 顺序栈：地址连续，自栈底到栈顶，指针top指示栈顶元素<br>  栈空表示：top&#x3D;0<br>  一般设两个常量：initSize存储空间初始分配量、increment存储空间增量<br>  定义： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">   SElemType *base;<span class="comment">//栈底指针，始终指向栈底</span></span><br><span class="line">  SElemType *top;<span class="comment">//栈顶指针，栈空时top=base，插入新的栈顶元素时，top+1；删除栈顶元素时，top-1.非空栈的栈顶指针始终在栈顶元素的下一个位置上</span></span><br><span class="line"> <span class="type">int</span> stacksize;<span class="comment">//当前可使用的最大容量</span></span><br><span class="line">&#125;SqStack;</span><br></pre></td></tr></table></figure></li><li>基本操作：<br> （1）构造空栈 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">InitStack</span><span class="params">(SqStack &amp;S)</span>&#123;</span><br><span class="line">   S.base=(SElemType*)<span class="built_in">malloc</span>(initSize*<span class="keyword">sizeof</span>(SElemtype));</span><br><span class="line">   <span class="keyword">if</span>(!S.base) <span class="built_in">exit</span>;<span class="comment">//分配内存失败</span></span><br><span class="line">   S.top=S.base;</span><br><span class="line">   S.stacksize=initSize;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> (2)插入新元素 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">Push</span><span class="params">(SqStack &amp;S，ElemType e)</span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(S.top-S.base&gt;=S.stacksize)&#123;</span><br><span class="line">       S.base=(SElemType*)<span class="built_in">realloc</span>(S.base,(S.stacksize+increment)*<span class="keyword">sizeof</span>(SElemType));</span><br><span class="line">       <span class="keyword">if</span>(!S.base)<span class="built_in">exit</span>;</span><br><span class="line">       S.top=S.base+S.stacksize;</span><br><span class="line">       S.stacksize+=increment;</span><br><span class="line">   &#125;</span><br><span class="line">  *S.top++=e;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> (3)删除元素 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">Pop</span><span class="params">(SqStack &amp;S,ElemType &amp;e)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(S.top==S.base)<span class="keyword">return</span> ERROR;</span><br><span class="line">  e=*--S.top;<span class="comment">//栈不空就删除栈顶元素</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>应用<br> （1）数制转换<br> （2）括号匹配检验<br> （3）行编辑程序<br> （4）迷宫求解<br> （5）表达式求值</li></ol><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><ol><li>特点：先进先出，队尾插入，队头删除</li><li>表示</li><li>基本操作</li><li>应用</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言查缺补漏</title>
      <link href="/2022/10/02/c-yu-yan-cha-que-bu-lou/"/>
      <url>/2022/10/02/c-yu-yan-cha-que-bu-lou/</url>
      
        <content type="html"><![CDATA[<ol><li>C语言double类型输入：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;a);<span class="comment">//应用scanf(&quot;%lf&quot;,&amp;a);</span></span><br></pre></td></tr></table></figure>double类型的输入不能使用%f进行输入，得用%lf才能正常得到a的值。<br>而在输出double类型时却可以用%f，因为printf(“%f”,a);在执行时C自动将float型的参数转换成double型，故double型的输入输出形式如下：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>,a);</span><br></pre></td></tr></table></figure></li><li>告别黑框框，图形化界面<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;easyx.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  initgraph(length,weighth);<span class="comment">//创建窗口</span></span><br><span class="line">  cleardevice();<span class="comment">//刷新</span></span><br><span class="line">  <span class="comment">//颜色，常见：WHITE,BLACK,RED,GREEN,BLUE,YELLOW</span></span><br><span class="line">  <span class="comment">//不常见RGB(150,245,200);</span></span><br><span class="line">  <span class="comment">//音乐：将MP3文件放到.cpp的文件夹下，包含头文件mmsystem.h,包含库文件winmm.lib</span></span><br><span class="line">  <span class="comment">//库文件包含：pragma comment(lib,&quot;winmm.lib&quot;)</span></span><br><span class="line">  <span class="comment">//mciSendString mci-media control interface 发送字符串</span></span><br><span class="line">  mciSendString(<span class="string">L&quot;open 花海.mp3&quot;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//或Wav</span></span><br><span class="line">  mciSendString(<span class="string">L&quot;play 花海.mp3&quot;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  mciSendString(<span class="string">L&quot;pause 花海.mp3&quot;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  mciSendString(<span class="string">L&quot;close 花海.mp3&quot;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="comment">//文字</span></span><br><span class="line">  settextcolor(RGB(<span class="number">123</span>,<span class="number">250</span>,<span class="number">200</span>));<span class="comment">//设置文字颜色</span></span><br><span class="line">  settextstyle(<span class="number">100</span>,<span class="number">0</span>,<span class="string">&quot;字魂24号-镇魂手书&quot;</span>);<span class="comment">//设置文字风格，100是字的高度，0是自适应</span></span><br><span class="line">  outtextxy(<span class="number">240</span>，<span class="number">240</span>，“哈哈哈哈”);<span class="comment">//输出文字的坐标</span></span><br><span class="line">  <span class="comment">//图片处理</span></span><br><span class="line">  <span class="comment">//1，普通绘图</span></span><br><span class="line">  IMAGE tupian;<span class="comment">//定义图片</span></span><br><span class="line">  loadimage(&amp;tupian,<span class="string">&quot;111.jpg&quot;</span>);<span class="comment">//加载图片</span></span><br><span class="line">  putimage(<span class="number">0</span>,<span class="number">0</span>,&amp;tupian);<span class="comment">//展示图片</span></span><br><span class="line">  <span class="comment">//2，批量绘图</span></span><br><span class="line">  BeginBatchDraw();<span class="comment">//开始将图片绘制到缓冲区</span></span><br><span class="line">  <span class="comment">//所有想要显示在窗口重点东西都在这两行代码中间</span></span><br><span class="line">  EndBatchDraw();<span class="comment">//结束缓存区的绘制，将完整一帧图像输出到窗口中</span></span><br><span class="line">  getchar(<span class="number">0</span>，<span class="number">0</span>，&amp;tupian);<span class="comment">//防止闪退</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><p>模板：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp=fopen(<span class="string">&quot;文件路径&quot;</span>,<span class="string">&quot;打开方式&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(fp==<span class="literal">NULL</span>)&#123;</span><br><span class="line">  reurn <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line">fp==<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>从文件读取一个字符<br>fgetc只能读取窄字符（窄字符就是ASCII码值，中文是宽字符，需要在前面加一个L）<br>怎么判断读完？<br>feof是用来检测是否读到了文件尾，如果已经到文件尾，就返回非零值，其他情况返回0.<br>while(!feof(fp)){<br>  ch&#x3D;fgetc(fp);<br>  printf(“%c”,ch);<br>}</p><p><strong>char类型与int类型转换</strong><br> 最简单的方法就是利用ASSCII码的差值，直接用char的值减去‘0’就行了<br>eg：char a &#x3D; ‘9’;int a_ &#x3D; a-‘0’;</p><p><strong>从文件中读取一行</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fscanf</span>(fptr,<span class="string">&quot;%[^\n]&quot;</span>, c);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;读取内容:\n%s&quot;</span>, c);</span><br></pre></td></tr></table></figure><p><strong>switch语句</strong><br>在switch语句里定义了新的变量。在上例中在case ‘#’语句块中定义了新的变量other。<br>解决办法<br>给定义了新变量的case语句块套上大括号，这个错误就没了。</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习</title>
      <link href="/2022/09/27/ji-qi-xue-xi/"/>
      <url>/2022/09/27/ji-qi-xue-xi/</url>
      
        <content type="html"><![CDATA[<h4 id="机器学习目的：根据数据输入来预测输出"><a href="#机器学习目的：根据数据输入来预测输出" class="headerlink" title="机器学习目的：根据数据输入来预测输出"></a>机器学习目的：根据数据输入来预测输出</h4><p>例如：假设我有数据集如下：云大学子2021年体测成绩（也叫输入）+对应的每一个学生的体质状况（生了某种病，健康……）（也叫输出）<br>     现在我把数据平均分为两份，其中一份取名叫训练集（</font><font color=#008000>输入1+输出1</font>），另一份取名叫验证集（</font><font color=Red>输入2+输出2</font>）。<br>     步骤如下<br>    1. 用训练集的数据（</font><font color=#008000>输入1+输出1</font>）通过机器学习算法生成一个<strong>模型</strong>&#x2F;程序（此模型相当于一个程序）；<br>    2. 用验证集的数据中的 </font><font color=Red>输入2</font>输入第一步得到的<strong>模型</strong>，此时得到一个</font><font color=Red>输出</font>，再将此输出于</font><font color=Red>输出2</font>进行对比，得到这个模型的预测准确度。<br><img src="/assets/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%A7%A3%E9%87%8A%E5%9B%BE.jpg" alt="机器学习解释图"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创新创业</title>
      <link href="/2022/09/23/chuang-xin-chuang-ye/"/>
      <url>/2022/09/23/chuang-xin-chuang-ye/</url>
      
        <content type="html"><![CDATA[<h3 id="互联网思维"><a href="#互联网思维" class="headerlink" title="互联网思维"></a>互联网思维</h3><ol><li>用户思维</li><li>简约思维</li><li>极致思维</li><li>迭代思维</li><li>流量思维</li><li>大数据思维</li><li>平台思维</li><li>跨界融合思维</li><li>共享增值思维</li><li>金融思维</li><li>服务思维</li><li>社交思维</li></ol><h3 id="规避雷区"><a href="#规避雷区" class="headerlink" title="规避雷区"></a>规避雷区</h3><ol><li>开源：多方筹措资金，并虚招潜在的合作者</li><li>节流：想方设法降低经营成本<br>大学生要充分了解当地政策和申请条件再开始创业<br> 尽量通过网络经营减少经营场地的租金和费用 网店，微商，soho；<br> 尽量利用创业孵化园和废旧厂区改造创客空间；<br> 通过构建网络平台吸引兼职人员减少全职用工成本；<br> 通过信息共享和物流降低库存成本；<br> 通过网络营销减少推广成本；自媒体公众号</li><li>警惕融资和借贷风险<br>理性分析资金需求和预期收益，认真评估偿还能力和偿还周期</li><li>化解技术和信息风险<br>在创业之前通过各种渠道参与该行业的相关工作，分析总结该行业的特点，积累人脉关系</li><li>注意市场环境和政策风险<br>政策往往有滞后性，要保持敏锐的洞察力，政策落地时，第一时间将产品投放市场</li><li>防范管理风险<br>精细化管理，堵住管理漏洞</li></ol><h3 id="知己知彼，百战百胜"><a href="#知己知彼，百战百胜" class="headerlink" title="知己知彼，百战百胜"></a>知己知彼，百战百胜</h3><h3 id="分析羊了个羊"><a href="#分析羊了个羊" class="headerlink" title="分析羊了个羊"></a>分析羊了个羊</h3><p>消耗时间和注意力，三个道具120秒，200局大约6个多小时，<br>虚荣心，攀比心，各省排名，比智商等等会让用户更愿意参与<br>转发等收获关系，传播<br>平台讨论，获得传播性，话题性<br>生命周期短<br>这个产品反向pua用户<br>关键是能找到能够刺激用户的点<br>好的互联网产品可以帮助用户消耗或节约时间，合理利用用户碎片化时间，记录闯关，抓住噱头巧妙设置关卡，读懂用户的人性<br>操作简单，没有任何学习成本，好友裂变引流，收割用户时间，流量，产品侧，用户侧，运营测</p><h3 id="怎么进行融资"><a href="#怎么进行融资" class="headerlink" title="怎么进行融资"></a>怎么进行融资</h3><p>可以借助成熟的资本市场；<br>创业者需要全面了解资本市场，掌握当前可用的融资渠道<br><strong>六种常用的融资渠道</strong><br><img src="/assets/%E8%B5%84%E9%87%91%E6%B8%A0%E9%81%93.jpg" alt="资金渠道"><br><strong>资金分析</strong><br><img src="/assets/%E8%B5%84%E9%87%91%E5%88%86%E6%9E%90.jpg" alt="资金分析"><br><strong>初始投入资金预算</strong><br><img src="/assets/%E5%88%9D%E5%A7%8B%E6%8A%95%E5%85%A5%E8%B5%84%E9%87%91%E9%A2%84%E7%AE%97.jpg" alt="初始投入资金预算"></p><p>风险投资</p><ol><li>专业化投资</li><li>扶持新创企业或高成长企业</li><li>不以长期经营企业为目的，只追求高资本回报率</li><li>投资原则是风险共担利益共享</li><li>风投公司要参与企业管理</li></ol><p><strong>天使投资和风险投资的区别</strong><br><img src="/assets/%E5%A4%A9%E4%BD%BF%E6%8A%95%E8%B5%84%E4%B8%8E%E9%A3%8E%E9%99%A9%E6%8A%95%E8%B5%84.jpg" alt="天使投资和风险投资"><br><strong>不同阶段的投资渠道</strong><br><img src="/assets/%E4%B8%8D%E5%90%8C%E9%98%B6%E6%AE%B5%E7%9A%84%E6%8A%95%E8%B5%84%E6%B8%A0%E9%81%93.jpg" alt="不同阶段的投资渠道"><br><strong>后续运营资金预测与预留</strong><br><img src="/assets/%E5%90%8E%E7%BB%AD%E8%BF%90%E8%90%A5%E8%B5%84%E9%87%91%E9%A2%84%E6%B5%8B%E4%B8%8E%E9%A2%84%E7%95%99.jpg" alt="后续运营资金预测与预留"><br><strong>负债融资</strong></p><ol><li>银行贷款</li><li>融资租赁</li><li>商业信用</li><li>政府融资</li><li>私人借贷</li><li>网络借贷</li></ol><h4 id="商业模式"><a href="#商业模式" class="headerlink" title="商业模式"></a>商业模式</h4><p>阐明某个特定实体的商业逻辑，描述了公司所能为客户提供的价值，以及公司的内部结构，合作伙伴网络，关系资本等借以实现这一价值并产生可持续盈利收入的要素。<br>公司通过什么方式来赚钱。<br>围绕价值创造、传递和获取。由价值主张、客户资源、核心能力、盈利模式获得。<br>吉列模式：利用低利润的剃须刀来带动高利润刀片的销售<br>反吉列模式：靠开发刀片来带动剃刀的销售<br><strong>作用</strong></p><ol><li>发现和挖掘客户的真实需求，关注顾客的体验和个性差异，通过产品和服务的创新给客户创造最大价值。</li><li>超越自我局限，开展商业合作，建立战略联盟，积聚战略资源</li><li>扬长避短，积累和培养独特的核心能力，构筑模仿壁垒，形成核心竞争力</li><li>整合产品和服务价值链的全过程，对企业理念、要素和流程进行系统集成，也对企业战略动态组合</li></ol><p><strong>设计</strong><br>商业模式画布<br>4个视角，9个模块<br><strong>商业模式创新的动力</strong></p><ol><li>技术创新</li><li>需求拉动</li><li>竞争压力</li><li>高管支持</li><li>系统作用<br><strong>商业模式的四个部分</strong></li><li>用户价值定义 重新定义客户的需求</li><li>利润公式   重新定义产品&#x2F;服务</li><li>产业定位   重新定义客户的接触方式</li><li>核心资源与流程  重新定义供应链方式</li><li>扩大以顾客价值为中心的网络协同效应</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python编辑excel</title>
      <link href="/2022/09/22/python-bian-ji-excel/"/>
      <url>/2022/09/22/python-bian-ji-excel/</url>
      
        <content type="html"><![CDATA[<h3 id="文件导入和简单修改"><a href="#文件导入和简单修改" class="headerlink" title="文件导入和简单修改"></a>文件导入和简单修改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> alignment</span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">from</span> openpyxl.styles <span class="keyword">import</span>* <span class="comment">#对单元格格式进行简单操作</span></span><br><span class="line"></span><br><span class="line">workbook =openpyxl.load_workbook(<span class="string">&quot;E:\python练习\汇总积极分子.xlsx&quot;</span>)</span><br><span class="line">worksheet=workbook.worksheets[<span class="number">0</span>] <span class="comment">#取出第0个工作表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,worksheet.max_row+<span class="number">1</span>): <span class="comment">#从第二行到最后1行</span></span><br><span class="line">    position = <span class="string">&quot;Q&quot;</span> + <span class="built_in">str</span>(i) <span class="comment">#取出第O列的第i行</span></span><br><span class="line">    value = <span class="string">&quot;=O&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;+P&quot;</span>+<span class="built_in">str</span>(i)<span class="comment">#让Oi和Pi相加</span></span><br><span class="line">    worksheet[position]=value <span class="comment">#让worksheet的position位置的值设为value</span></span><br><span class="line"></span><br><span class="line">alight = Alignment(  <span class="comment">#对齐方式设置</span></span><br><span class="line">    horizontal =<span class="string">&#x27;center&#x27;</span>, <span class="comment">#可填 center,left,right</span></span><br><span class="line">    vertical =<span class="string">&#x27;center&#x27;</span> <span class="comment">#可填 center,left,right</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,worksheet.max_row+<span class="number">1</span>): <span class="comment">#单元格对齐方式设置为alight</span></span><br><span class="line">    worksheet[<span class="string">&#x27;O&#x27;</span>+<span class="built_in">str</span>(i)].alignment =alight</span><br><span class="line">    worksheet[<span class="string">&#x27;P&#x27;</span>+<span class="built_in">str</span>(i)].alignment =alight</span><br><span class="line">    worksheet[<span class="string">&#x27;Q&#x27;</span>+<span class="built_in">str</span>(i)].alignment =alight</span><br><span class="line"></span><br><span class="line">workbook.save(filename=<span class="string">&quot;E:\python练习\汇总积极分子.xlsx&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多媒体技术原理</title>
      <link href="/2022/09/17/duo-mei-ti-ji-zhu-yuan-li/"/>
      <url>/2022/09/17/duo-mei-ti-ji-zhu-yuan-li/</url>
      
        <content type="html"><![CDATA[<h4 id="1位图像"><a href="#1位图像" class="headerlink" title="1位图像"></a>1位图像</h4><p>每个像素仅由0和1表示，0表示黑色，1表示白色</p><h4 id="8位灰度图像"><a href="#8位灰度图像" class="headerlink" title="8位灰度图像"></a>8位灰度图像</h4><p>每个像素由0~255表示，数字越大，颜色越白</p><h4 id="图像数据类型"><a href="#图像数据类型" class="headerlink" title="图像数据类型"></a>图像数据类型</h4><p>常见的有24位图和8位图</p><h4 id="24位彩色图像"><a href="#24位彩色图像" class="headerlink" title="24位彩色图像"></a>24位彩色图像</h4><p>每个像素由三个字节表示，有256<em>256</em>256种颜色组合，分别代表RGB三个通道的亮度</p><h4 id="8位彩色图像"><a href="#8位彩色图像" class="headerlink" title="8位彩色图像"></a>8位彩色图像</h4><p>每个像素的颜色使用索引来存储，这个索引是查找表的索引，查找表的每一项具有三个字节来表示RGB的亮度</p><h4 id="颜色查找表"><a href="#颜色查找表" class="headerlink" title="颜色查找表"></a>颜色查找表</h4><p>使用中值区分算法。</p><ol><li>找出最小的方形区和包含的所有颜色</li><li>沿方形区的长边排序所有颜色</li><li>在排列链表的中间区将方形区划分为2个部分</li><li>重复2、3步骤，知道颜色空间被划分为256个区域</li><li>将每个区域的R,G,B的平均值作为其代表的（中间）颜色</li><li>根据每一个像素的R、G、B与中间值的距离为每一个像素分配一个颜色，在指向颜色查找表中用索引代替像素。</li></ol><h4 id="常见的文件格式"><a href="#常见的文件格式" class="headerlink" title="常见的文件格式"></a>常见的文件格式</h4><ol><li>GIF</li><li>JPEG</li><li>png</li></ol><h4 id="视频编码"><a href="#视频编码" class="headerlink" title="视频编码"></a>视频编码</h4><p><img src="/assets/%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81.jpg" alt="视频编码"></p><h2 id="流媒体服务"><a href="#流媒体服务" class="headerlink" title="流媒体服务"></a>流媒体服务</h2><p>边下载边播放DNS解析<br>DNS服务器（<a href="http://www.com/">www.com</a>)</p><h4 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h4><p>时间快，抖动小.大多数情况下是基于这个的,播放时延小。</p><h4 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h4><p>数据可靠，抖动和迟延没有DUP好</p><h4 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h4><p>基于CS、TCP的，延迟大.可以通过CDN将数据部署到离用户较近的地方。会用到DASH,自适应调整，因为基于web，所以会根据带宽调整，一般用于做点播任务。</p><h4 id="基于HTTP的动态自适应流-DASH技术"><a href="#基于HTTP的动态自适应流-DASH技术" class="headerlink" title="基于HTTP的动态自适应流 DASH技术"></a>基于HTTP的动态自适应流 DASH技术</h4><h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><p>内容分发网络，让用户从较近的地方调取资源，流媒体点播业务使用。<br>会有一个DNS服务，来找路径，部署。</p><h4 id="VOICE-OVER-IP"><a href="#VOICE-OVER-IP" class="headerlink" title="VOICE OVER IP"></a>VOICE OVER IP</h4><p>基于IP的J交互式语音交流，延迟不超过150毫秒。大于400毫秒体验就变差。<br>无sever服务参与。更多的是采用UDP.</p><p>语音突发期：编码，存储 64kbps<br>语音静默期：不编码，不存储<br>编码速率：64kbps<br>header+chunk:信封加数据（通常是160bytes）。通常以UDP传。</p><p>网络损失：路由器（数据溢出丢失）<br>延迟损失：要放的时候的数据还没有传输到，这些数据就损失了。典型的是400毫秒</p><p>在损失不超过10%的情况下可以补救。<br>FEC前向纠错<br>simple FEC，每一位都采用一个异或操作，一共发了N+1个chunk<br>自适应PLAYOUT损失：EWMA(指数加权平均，为了计算时延)。针对突发期的每一个数据，通过一个制约关系得到丢失块，所以最多只能丢失一块。</p><p>other FEC scheme：<br>通过前后相邻关系来弥补<br>加一个时间戳信号和一个序号。</p><p>FEC:为了弥补损失，糊弄观众。前向纠错（发送N+1块数据），知道错，还知道错哪。满足异或关系。<br>检错码只知道错，但不知道错哪。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ps入门</title>
      <link href="/2022/09/06/ps-ru-men/"/>
      <url>/2022/09/06/ps-ru-men/</url>
      
        <content type="html"><![CDATA[<p>常见颜色模式：1.HSB模式：色相&#x2F;色调、饱和度、亮度<br>             2. RGB模式：<br>             3.CMYK模式：用于印刷，代表青色、洋红、黄色、黑色<br>             4.Lab模式：由亮度分量（L）和a、b两个色度分量组成，具有最宽的色域<br>位图模式：只用黑白两种颜色表示<br>双色调模式：两种油墨来打印灰度图<br>索引颜色模式：只能表现256钟颜色，常用于网页和多媒体的制作<br>多通道模式：</p><p><strong>行业软件介绍</strong></p><table><thead><tr><th>PS</th><th>AI</th><th>ID</th></tr></thead><tbody><tr><td>位图处理，图片会失真，色彩表现力好，文件大</td><td>矢量图处理，图片不失真，文件小</td><td>专业书籍排版软件</td></tr><tr><td>影视后期制作<br>效果图后期处理图像合成<br>电影海报<br>电商<br>网页设计<br>UI设计</td><td>印刷名片<br>包装盒设计制作<br>企业VI手册设计（企业形象识别系统）<br>logo设计</td><td>杂志<br>广告设计<br>目录<br>零售商设计工作室和报纸出版方案等</td></tr></tbody></table><p><strong>ps基本操作</strong></p><table><thead><tr><th>新建画布</th><th>分辨率和颜色</th><th>文件的打开</th><th>置入</th></tr></thead><tbody><tr><td>ctrl+N</td><td>印刷输出：300分辨率，CMYK颜色模式<br>电子屏幕显示：72分辨率，RGB颜色模式</td><td>ctrl+O,拖拽到属性栏或菜单栏打开，双击空白工作区打开文件</td><td>拖拽到画布中，右键置入命令，或直接enter键确定</td></tr></tbody></table><blockquote><p>文件打开是拖进工作区外，会新建一个画布中；置入是拖入工作区，不会新建画布，但可以在同一个画布放入多个素材，有定界框，enter键或对勾√可以去除；二者都可多选。<br> 若图片不能拖入ps，则可以用2345看图王存一遍图片就可以</p></blockquote><p><strong>图片类型</strong></p><table><thead><tr><th>文件类型</th><th>文件的保存方式</th></tr></thead><tbody><tr><td>psd:源文件格式可再次修改<br>jpg：图片格式，不可修改<br>png：背景透明，免抠图</td><td>快捷键：ctrl+s<br>另存为快捷键：ctrl+shift+s<br>存储为web所用格式：快捷键ctrl+shift+alt+S</td></tr></tbody></table><p>首选项快捷键:ctrl+k<br>若文件太大不能上传，则可以点文件——》导出——》存储为web所用格式</p><p><strong>制作桌面</strong><br>图像——&gt;图像大小，按下alt键取消就会变成复位，重定图像像素<br>先查看电脑分辨率1600<em>900，然后ctrl+N新建1600</em>900，重定图像像素1600*900，ctrl+E合并图层，ctrl+s存储<br> 颜色替换工具</p><p> 自由变换：ctrl+T,回车键确定旋转，绕中心锚点旋转<br> 斜切：光标放在边界中间shift+CTRL键<br> 扭曲：光标放在四个点，按下ctrl键<br> 投影透视：shift+ctrl+alt</p><p> 编辑，变换，再次，shift+ctrl+T(+ALT)复制图层<br> 选中全部副本图层，ctrl+E合并图层</p><p> 蒙版实现渐变效果，蒙版用来控制图层的显示，黑色隐藏，白色展现（渐变工具）<br> 移到值杯底和边缘，右键变形，拖动锚点（尽量一次完成），柔光模式，，蒙版画笔工具，调节流量和不透明度</p><p> <strong>选择工具</strong><br> 快速蒙版选择法<br> 选择-&gt;反向<br> 图像，调整，反相</p><p> 移动正圆：椭圆工具，shift+空格键</p><p> 从圆心开始延申画圆：shift+alt<br> 编辑，拷贝，打开目标文件，编辑，粘贴<br> 图层，图层样式，投影<br> alt键拖动即复制<br> 磁性套索<br> 复制图层，矩形，多边形索讨工具，shift键垂直，出现小圈圈表示连到一起了<br> ctrl+J<br> 创建剪贴模板：图层alt+CTRL+J</p><p> <strong>魔棒工具</strong><br> 调整容差，越小可以选到的背景越精确<br> 图层混合模式，正片叠底<br><strong>快速选择工具</strong><br>拖动鼠标时选区会向外扩展<br>Alt键变为逻辑减<br>移动工具拖拽<br><strong>色彩范围命令</strong><br>选择，色彩范围，本地化色彩蹙，逻辑加。选中为白色<br><strong>内容识别比例</strong><br>alt键双击背景图层，变为普通图层<br>编辑，内容识别比例<br>保护肤色<br>裁剪工具。<br><strong>保护aha通道</strong><br>选择工具选中，右键储存选区，通道里就出现Alpha通道。<br><strong>快速蒙版</strong><br>编辑选中的图层<br><strong>调整边缘命令</strong><br>模板工具选中区域，选择，调整边缘，智能半径，抹除调整工具，净化颜色，输出到新建带有图层蒙版的图层，调整羽化半径。<br> 右键，添加蒙版到选区。<br> （一般选头发发梢）<br> <strong>浅景深荷花实例</strong><br> 快速选择，选中前景，反选，将选区转化成通道，选择，修改，羽化，存储为通道，滤镜，模糊，镜头模糊。调整，自然饱和度</p><p> <strong>制作老照片</strong><br> 滤镜，镜头矫正滤镜，晕影-100，中心点+100，确定。<br> 添加杂色：滤镜，杂色，添加杂色，勾选预览。<br> 图层，新建填充图层，H40,S33,<br> T图层模式：颜色<br> 刮擦图片拖过来，图片模式：柔光，降低不透明度<br><strong>去除白云</strong><br> 魔棒，建立选区。建立图层，渐变填充图层，渐变填充，前景色到背景色渐变。色标颜色，饱和度。<br> 新建图层，柔边笔，300大小。<br> alt键选中蒙版复制到太阳图层上。<br> 添加光晕：新建图层，滤色的混合模式，填充屏幕中性色，滤镜，渲染，镜头光晕，移动光晕位置，35毫米聚焦<br> <strong>衣服印花</strong><br> 选区选中，新建图案填充图层，线性加深。<br> 选中图案ctrl+a，编辑，定义图案，图案填充，线性加深<br> 加深颜色ctrol+j</p><p> <strong>蒙版</strong><br> 添加图层蒙版，图层蒙版缩略图，黑色可以遮盖当前图像。<br> 半透明效果，灰色涂抹<br> 添加图层蒙版<br> 椭圆工具<br> 对选区进行羽化30px<br> 再建蒙版</p><p> 17周交ps大作业<br> 篇幅不超过六页，双面打印</p><p> 蒙版，色相饱和度<br> 笔刷<br> 魔棒先选中背景，然后shift+contrl+i反选出瓶子<br> 合并拷贝<br> 在ctrl+V<br> 把风景图拖过来<br> 取名风景<br> 降低图片不透明度<br> 调至合适位置，ctrl+alt+G创建剪贴蒙版<br> 图层 显示蒙版 画笔工具</p><p> 制作倒影<br> 合并拷贝，粘贴<br> 编辑，变换，垂直翻转，按住shift键往下移动<br> 不透明度降低</p><p> 添加图层蒙版，显示全部，渐变工具编辑图层蒙版<br> 线性渐变</p><p> 变大长腿<br> 先选中，移动，ctrl+t拉长</p><p> 编辑，操控变形，让图像矢量化，定锚点</p><p> <strong>相片调整</strong><br> 1.总体不透明度将为50%<br> 2.揉脚橡皮擦<br> <strong>对齐照片</strong><br> 选中图层，编辑，自动对齐图层</p><p> 编辑，合并到HDR,添加打开的文件，尝试自动对齐原图像<br> <strong>拼接照片</strong><br> 文件，自动，photomarch，三个都勾选上</p><p> <strong>滤镜</strong><br> ps中的滤镜是插件模块<br>ps内置的滤镜<br>外挂滤镜</p><p>镜头矫正</p><p>量角器把镜头拉平</p><p>透视变形<br>镜头矫正，垂直透视</p><p>极坐标<br>图像，图像大小，长宽都是600像素，编辑，变换，垂直翻转，滤镜，扭曲，极坐标，变换，垂直翻转</p><p><strong>制作倒影</strong><br>选中实物，ctrl+J,CTRL+T,右键，垂直翻转。按住shift下移，遮住水面。色阶，图像，调整，色阶。中性色右移。输出色阶199.。模糊滤镜，动感模糊，90度，距离，40度，确定</p><h2 id="人像精修"><a href="#人像精修" class="headerlink" title="人像精修"></a>人像精修</h2><p>1.建设观察层<br>曲线在渐变映射上面</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python入门</title>
      <link href="/2022/09/04/python-ru-men/"/>
      <url>/2022/09/04/python-ru-men/</url>
      
        <content type="html"><![CDATA[<h4 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h4><ol><li>python的BIF（内置函数）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span>(__builtins__)</span><br></pre></td></tr></table></figure></li><li>获取python内置函数的使用方法<br>help(函数名称)<br>例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(<span class="built_in">input</span>)</span><br></pre></td></tr></table></figure></li><li>在使用变量之前需要赋值</li><li>原始字符串：在字符串前加一个英文字母r即可<br>原始字符串最后不能加反斜杠。<br>例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">r&quot;C:\now&quot;</span></span><br></pre></td></tr></table></figure>若非要加，可以<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">r&#x27;C:\Program Files\FishC\Good&#x27;</span><span class="string">&#x27;\\&#x27;</span></span><br></pre></td></tr></table></figure></li><li>跨越多行的字符串，需要用到三重引号字符串<br>例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&quot;&quot;&quot;床前明月光</span></span><br><span class="line"><span class="string">疑是地上霜</span></span><br><span class="line"><span class="string">举头望明月</span></span><br><span class="line"><span class="string">低头思故乡</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li><li>and逻辑操作符</li><li>rand模块：引入随机数<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">secret=random.randint(<span class="number">1</span>,<span class="number">10</span>)<span class="comment">#生成1到10之间的随机整数</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h4><ol><li><p>猜数字游戏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">secret=random.randint(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">temp=<span class="built_in">input</span>(<span class="string">&quot;猜猜我想的是哪个数字&quot;</span>)</span><br><span class="line">guess=<span class="built_in">int</span>(temp)</span><br><span class="line"><span class="keyword">while</span> guess!=secret:</span><br><span class="line">    <span class="keyword">if</span> guess&gt;secret:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;大了大了&quot;</span>)</span><br><span class="line">        temp=<span class="built_in">input</span>(<span class="string">&quot;再猜猜是哪个数字吧&quot;</span>)</span><br><span class="line">        guess=<span class="built_in">int</span>(temp)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> guess&lt;secret:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;小了小了&quot;</span>)</span><br><span class="line">            temp=<span class="built_in">input</span>(<span class="string">&quot;在猜猜是哪个数字吧&quot;</span>)</span><br><span class="line">            guess=<span class="built_in">int</span>(temp)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;恭喜你，猜对了！游戏结束&quot;</span>) </span><br></pre></td></tr></table></figure></li><li><p>&#x2F;&#x2F;:整除<br>&#x2F;：有小数的除法<br>**：幂</p></li><li><p>逻辑操作符：and，or，not</p></li><li><p>优先级问题：<br><img src="/assets/python1.jpg" alt="优先级问题"></p></li><li><p>打飞机框架：<br>加载背景音乐<br>播放背景音乐<br>我方飞机出现<br>间隔&#x3D;0</p></li></ol><p>while ture：<br>  if 用户点击了关闭按钮：<br>     退出程序</p><p>间隔+&#x3D;1<br>if 间隔&#x3D;&#x3D;50：<br>间隔&#x3D;1<br>小飞机出现，<br>小飞机移动一个位置，<br>屏幕刷新</p><p>if 用户鼠标产生移动：<br> 我方飞机中心位置&#x3D;用户鼠标位置<br> 屏幕刷新</p><p> if 我方飞机与小飞机发生碰撞：<br> 我方挂，播放坠机音乐<br> 修改我方飞机图案<br> 打印“game over”<br> 停止背景音乐，最好淡出</p><ol start="6"><li>elif: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> score=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的分数！&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> <span class="number">90</span>&lt;=score&lt;=<span class="number">100</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;A&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">80</span>&lt;=score&lt;<span class="number">90</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;B&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">70</span>&lt;=score&lt;<span class="number">80</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;C&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">60</span>&lt;=score&lt;<span class="number">70</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;D&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入错误！&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>三元操作符语法：<br>x if 条件 else y</li><li>断言（assert）：当这个关键字后面的条件为假的时候，程序自动崩溃并抛出AssertionError的异常。可以用它在程序中置入检查点，当需要确保程序中的某一条件一定为真时才能让程序正常工作的话，assert关键字就非常有用了。<br>例如：assert 3&gt;4</li><li>for循环：<br>for 变量 in 表达式：<br>  循环体<br>例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr=<span class="string">&quot;糯米爱草莓&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">    <span class="built_in">print</span>(i,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab入门</title>
      <link href="/2022/09/02/matlab-ru-men/"/>
      <url>/2022/09/02/matlab-ru-men/</url>
      
        <content type="html"><![CDATA[<ol><li>清除指令：clc，回车</li><li>清除右侧变量：clear all，回车</li><li>注释：%单行<br>  %%多行</li><li>字符串：单引号括起来</li><li>矩阵转置：B&#x3D;A’</li><li>方阵求逆：B&#x3D;inv(A)</li><li>创建0矩阵：B&#x3D;zeros(10,5,3) 10行5列3维</li><li>rand（m,n)生成m行n列的从0到1的随机矩阵<br>randn生成标准正态分布的随机数（均值为0,方差为1）<br>randi生成随机整数<br>randi（iMAX)在开区间（0，iMAX)生成均匀分布的伪随机数<br>randi（iMAX,m,n)在开区间（0，iMAX)生成m<em>n的伪随机数<br>randi（iMIN,iMAX,m,n)在开区间（iMIN,iMAX）内生成m</em>n型随机矩阵</li></ol><p>1若每条命令后无分号，则在屏幕上显示<br>2变量名不可以是ans，pi，eps，inf，Inf，NaN,nan等关键字<br>3横向量，列向量表示<br>4.提取向量的单个元素，按规律提取元素，提取某行某列元素，提取全部元素<br>5.向量的转置</p><p>matlab的下标都以1开头<br>x（2,2）<br>x(1)<br>快速一块地提取:用冒号<br>（start:increment:end）<br>默认间隔为1<br>(1:3)提取从1到3<br>length（）针对向量<br>size（）针对矩阵<br>（:）默认是全部<br>f(2,:)第二行全部元素<br>f(:,:)全部<br>随机阵:加噪声<br>[0，1]从0到1<br>{0，1}只有0和1<br>课后作业:1.matlab产生黄色背景图<br>2.三个通道级联cat()函数<br>索引图:2个矩阵，一个存放索引，一个存放RGB<br>RGB转index图:RGB2ind();<br>inshow(B,map)<br>[B,map]&#x3D;imread(‘’)<br>改变图片效果（改matlab的map映射）</p>]]></content>
      
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学</title>
      <link href="/2022/08/29/chi-san-shu-xue/"/>
      <url>/2022/08/29/chi-san-shu-xue/</url>
      
        <content type="html"><![CDATA[<h3 id="离散数学导学课"><a href="#离散数学导学课" class="headerlink" title="离散数学导学课"></a>离散数学导学课</h3><p></font><font color=#6633FF>NP问题</font><br><img src="/assets/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A61.jpg" alt="信号灯问题"><br>已知C到A是单行道，请问怎样设计交通信号灯才能使信号灯的颜色最少并且不会相撞？<br>先给出所有可能的路线:B→E B→D B→A<br>                   C→A C→B C→E C→D<br>                   D→E D→A D→B<br>                   E→A E→B E→D<br>                   一共13种路线<br>再把每一种路线看成一个结点,再把会冲突的结点用线连接起来<br><img src="/assets/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A62.jpg" alt="信号灯问题"><br>就像这样，我没有把线连完，因为有点多。然后最后把没有线相连的结点归为一组，这样就可以得到四组，即四种交通信号灯。</p><h3 id="第一篇"><a href="#第一篇" class="headerlink" title="第一篇"></a>第一篇</h3><h4 id="1-命题：具有唯一真值的陈述句，分为原子命题和分子命题。"><a href="#1-命题：具有唯一真值的陈述句，分为原子命题和分子命题。" class="headerlink" title="1. 命题：具有唯一真值的陈述句，分为原子命题和分子命题。"></a>1. 命题：具有唯一真值的陈述句，分为原子命题和分子命题。</h4><p>命令句、感叹句、疑问句都不是命题</p><h4 id="2-命题连接词："><a href="#2-命题连接词：" class="headerlink" title="2. 命题连接词："></a>2. <strong>命题连接词</strong>：</h4><ul><li><p>否定词：﹁ 读作“非，否定”<br>定义：真值表给出</p><table><thead><tr><th>p</th><th>﹁p</th></tr></thead><tbody><tr><td>T</td><td>F</td></tr><tr><td>F</td><td>T</td></tr></tbody></table></li><li><p>合取词：∧,读作“合取”、“积”、“与”<br>定义：真值表给出</p><table><thead><tr><th>P</th><th>Q</th><th>P∧Q</th><th>Q∧P</th></tr></thead><tbody><tr><td>F</td><td>F</td><td>F</td><td>F</td></tr><tr><td>F</td><td>T</td><td>F</td><td>F</td></tr><tr><td>T</td><td>F</td><td>F</td><td>F</td></tr><tr><td>T</td><td>T</td><td>T</td><td>T</td></tr></tbody></table><p>注意：有假则假，全真才真，PQ位置可互换</p></li><li><p>析取词: ∨,读作”或”<br>定义：真值表给出</p><table><thead><tr><th>P</th><th>Q</th><th>P∨Q</th></tr></thead><tbody><tr><td>F</td><td>F</td><td>F</td></tr><tr><td>F</td><td>T</td><td>T</td></tr><tr><td>T</td><td>F</td><td>T</td></tr><tr><td>T</td><td>T</td><td>T</td></tr></tbody></table></li><li><p>条件 -&gt;,读作”如果……则……”<br> 定义：真值表给出</p><table><thead><tr><th>P</th><th>Q</th><th>P-&gt;Q</th></tr></thead><tbody><tr><td>F</td><td>F</td><td>T</td></tr><tr><td>F</td><td>T</td><td>T</td></tr><tr><td>T</td><td>F</td><td>F</td></tr><tr><td>T</td><td>T</td><td>T</td></tr><tr><td>注意：前真后假才为假</td><td></td><td></td></tr></tbody></table><p>原命题和逆反命题的真假性相同<br>逆命题和反命题的真假性相同</p><table><thead><tr><th>P</th><th>Q</th><th>P-&gt;Q</th><th>﹁Q-&gt;﹁p</th></tr></thead><tbody><tr><td>F</td><td>F</td><td>T</td><td>T</td></tr><tr><td>F</td><td>T</td><td>T</td><td>T</td></tr><tr><td>T</td><td>F</td><td>F</td><td>F</td></tr><tr><td>T</td><td>T</td><td>T</td><td>T</td></tr></tbody></table></li><li><p>双条件连接词P⇆Q，读作”P<strong>当且仅当</strong>Q”，“P是Q的充分必要条件”。<br> 定义：真值表给出</p><table><thead><tr><th>P</th><th>Q</th><th>P⇆Q</th></tr></thead><tbody><tr><td>F</td><td>F</td><td>T</td></tr><tr><td>F</td><td>T</td><td>F</td></tr><tr><td>T</td><td>F</td><td>F</td></tr><tr><td>T</td><td>T</td><td>T</td></tr><tr><td>注意：同真异假</td><td></td><td></td></tr></tbody></table><p><strong>优先次序</strong>：非，与，或，如果……则……，当且仅当，（从左到右）<br><strong>命题符号化</strong>：1.先找出各简单命题；<br>            2.找出各联结词，把简单命题逐个联结起来。</p></li></ul><h4 id="3-命题变元与命题公式"><a href="#3-命题变元与命题公式" class="headerlink" title="3.命题变元与命题公式"></a>3.命题变元与命题公式</h4><p><strong>定义</strong>：<br>1.单个命题变元本身是一个公式<br>2.如果A是合法公式，那么﹁A是合法公式<br>3.如果A和B是合法公式，那么A∧B,A∨B,A-&gt;B,A↔B都是合法公式<br>4.当且仅当有限次使用1，2，3所生成的公式才是命题公式</p><blockquote><p><strong>习题1-4总结</strong></p><ol><li>(若有很多相同的联结符，则考虑：）结合律：（P∨Q)∨R⇔P∨(Q∨R)<br>                                  (P∧Q)∧R⇔P∧(Q∧R)</li><li>(若证明题中有-&gt;，则考虑：)分配律：P∨(Q∧R)⇔(P∨Q)∧(P∨R)<br>                          P∧(Q∨R)⇔(P∧Q)∨(P∧R)</li><li>(若证明题中有﹁，则考虑：)德摩根律：﹁（P∧Q）⇔ ﹁P∨﹁Q<br>                            ﹁（P∨Q）⇔ ﹁P∧﹁Q</li><li>P-&gt;Q⇔﹁P∨Q</li><li>P⇆Q⇔(﹁P∧﹁Q)∨(P∧Q)</li><li>P⇆Q⇔(P-&gt;Q)∧(Q-&gt;P)</li></ol></blockquote><h4 id="5-重言式与蕴含式"><a href="#5-重言式与蕴含式" class="headerlink" title="5.重言式与蕴含式"></a>5.重言式与蕴含式</h4><p>重言式：真值永为T的命题公式<br>矛盾式： 真值永为F的命题公式<br>定理：A⇔B当且仅当A⇆B为一个重言式<br>定义：当且仅当P-&gt;Q是一个重言式时，称为”P蕴含Q”,并记作P⇒Q<br>     (P-&gt;Q) ⇔(﹁Q-&gt;﹁P)<br>     (Q-&gt;P) ⇔ (﹁P-&gt;﹁Q)<br>定理:P⇔Q的充分必要条件是P⇒Q且Q⇒P</p><h4 id="6-其他联结词"><a href="#6-其他联结词" class="headerlink" title="6.其他联结词"></a>6.其他联结词</h4><ol><li>不可兼析取：P不可兼析取Q⇔(P∧﹁Q)∨(﹁P∧Q)<br>                  ⇔﹁(P⇆Q)</li><li>条件否定：P和Q的条件否定只有当P为T，Q为F时才为真，否则为假</li><li>与非：P↑Q,只有二者都为T时，才为F，否则为T.<br>P↑Q⇔﹁(Q∧P)</li><li>或非：P↓Q,只有二者都为F时，才为T,否则为F.<br>P↓Q⇔﹁(Q∨P)</li></ol><h4 id="7-对偶与范式"><a href="#7-对偶与范式" class="headerlink" title="7.对偶与范式"></a>7.对偶与范式</h4><p>对偶：﹁不换其他都换</p><ol><li>若A和A<em>是对偶式<br>﹁A(P1,P2,……Pn)⇔A</em>(﹁p1,﹁p2……﹁Pn)<br>A(﹁p1,﹁p2……﹁Pn)⇔﹁A*(P1,P2,……Pn)</li><li>设P1，P2,……,Pn是出现在公式A和B的所有原子变元，如果A⇔B,则A<em>⇔B</em><br>合取范式：A1∧A2∧……∧An，其中A1， A2,……，An都是由命题变元或其否定所组成的析取式<br>析取范式：A1∨A2∨……∨An，其中A1， A2,……，An都是由命题变元或其否定所组成的合取式</li><li>A⇆B⇔（A∧B）∨(﹁A∧﹁B)</li><li>n个变元的合取式∧，称作布尔合取或<strong>小项</strong>，其中每个变元与它的否定不能同时存在，但两者必须出现且仅出现一次。n个变元共有2^n个小项<br>性质：（1）每一个小项当其真值的指派与编码相同时，真值为T，其余2^n-1种指派情况下均为F.<br>（2）任意两个不同小项的合取式永假<br>（3）全体小项的析取式永真</li><li>主析取范式：对于给定的命题公式，如果有一个等价公式，它仅由小项的析取所组成，则该等价式称作原式的主析取范式。<br>在真值表中，一个公式的真值为T的指派所对应的小项的析取，即为此公式的主析取范式。<br>一个命题公式的主析取范式推演：<br>（1）划归为析取范式<br>（2）除去析取范式中所有永假的析取项<br>（3）将析取式中重复出现的合取项和相同的变元合并<br>（4）对合取项补入没有出现的命题变元，即添加（P∨﹁P）,然后应用分配律展开<br>或者使用公式的真值表</li><li>n个变元的析取式∨，称作布尔析取或<strong>大项</strong>，其中每个变元与它的否定不能同时存在，但两者必须出现且仅出现一次。<br>性质：（1）每一个小项当其真值的指派与编码相同时，真值为F，其余2^n-1种指派情况下均为T.<br>（2）任意两个不同小项的合取式永真。<br>（3）全体大项的和取式永假</li><li>主合取范式：对于给定的命题公式，如果有一个等价公式，它仅由大项的合取所组成，则该等价式称作原式的主合取范式。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>细节设计之美</title>
      <link href="/2022/08/21/xi-jie-she-ji-zhi-mei/"/>
      <url>/2022/08/21/xi-jie-she-ji-zhi-mei/</url>
      
        <content type="html"><![CDATA[<p>本书作者为：[英]达伦·布里杰<br><strong>声明</strong>：本博客内容摘抄自《细节设计之美》这本书，仅作为个人学习使用，不可用于商业用途，如果构成侵权行为，请联系我删除博文。</p><blockquote><p>核心：设计师和营销人员可以借助基于神经科学和心理学知识的关键方法和工具重构创造力，修正和优化设计产品、广告或网络交互页面，使其更可能激发消费者的潜意识，获得他们青睐，从而引导他们的消费行为和决策</p></blockquote><h2 id="（一）什么是神经设计"><a href="#（一）什么是神经设计" class="headerlink" title="（一）什么是神经设计"></a>（一）什么是神经设计</h2><p>用互动理论去理解设计，需要我们去寻找普遍的、重复出现的、对人们有特定影响的设计元素。这个理论假设优秀的设计不完全取决于设计本身，也不完全取决于个人解读，而取决于两者的互动。</p><h4 id="对未来设计的推测性探索"><a href="#对未来设计的推测性探索" class="headerlink" title="对未来设计的推测性探索"></a>对未来设计的推测性探索</h4><p><strong>A&#x2F;B</strong>测试：将不同版本的设计呈现给不同用户，记录哪一组使用者在网页上停留时间更长，或哪一组用户购买产品的可能性更大。从而推断不同设计对不同用户的影响。神经设计可以在设计网站之前理解并预测哪种方案更有效。</p><h4 id="什么是神经设计"><a href="#什么是神经设计" class="headerlink" title="什么是神经设计"></a>什么是神经设计</h4><p>用神经科学和心理学知识指导创造更有效的设计。</p><h4 id="全球心理实验"><a href="#全球心理实验" class="headerlink" title="全球心理实验"></a>全球心理实验</h4><p>神经设计关注A&#x2F;B测试欠缺鼠标点击背后的思维过程</p><h4 id="电子图像的重要性"><a href="#电子图像的重要性" class="headerlink" title="电子图像的重要性"></a>电子图像的重要性</h4><p>有彩色图像的文字内容，人们阅读可能性，得到赞和被分享的可能性，附有图像的说明使人们正确按照说明行动的可能性会提高。</p><h4 id="网络用户依靠直觉、缺乏耐心并且关注图像"><a href="#网络用户依靠直觉、缺乏耐心并且关注图像" class="headerlink" title="网络用户依靠直觉、缺乏耐心并且关注图像"></a>网络用户依靠直觉、缺乏耐心并且关注图像</h4><p>人类更偏好关注外界活动，浏览网络可能弥补了这个内在需求，新颖的图像会对大脑产生愉快的刺激。<br>人们通常没有足够的时间或精力去探究阅读内容的每一个小细节，图像可能影响最后的决策判断</p><h4 id="系统1和系统2"><a href="#系统1和系统2" class="headerlink" title="系统1和系统2"></a>系统1和系统2</h4><p>系统1指一系列毫不费力在无意识中进行的思维过程，倾向于使用模式识别以及不完美但便捷的经验法则，不会深思熟虑后理性地做出反应。这个思维方式对加工图像和设计很重要，可能会引发直觉甚至是情绪。系统2需要更多的努力和注意，由观众的思考驱动。</p><h4 id="神经设计的原理"><a href="#神经设计的原理" class="headerlink" title="神经设计的原理"></a>神经设计的原理</h4><p>眼动仪、面部动作编码等测试可以进一步理解人类是如何对图像和设计做出反应<br>原理：</p><ul><li>简单易于理解的图片更好</li><li>第一印象</li><li>视觉显著性地图影响之后的反应</li><li>无意识情绪驱动力</li><li>行为经济学<br>要求理解无意识思维的古怪之处与发生过程</li></ul><h2 id="（二）神经美学"><a href="#（二）神经美学" class="headerlink" title="（二）神经美学"></a>（二）神经美学</h2><p>分形图案共同特征是自相似性，相同的图案重复出现在不同区域，局部放大观察到的图案与整体图案相同，观看分形图案能有效帮助人们放松，就像人们在自然环境中感到很自在一样。<br><img src="/assets/%E5%88%86%E5%BD%A2%E5%9B%BE%E6%A1%881.jpg" alt="分形图案1"><br><img src="/assets/%E5%88%86%E5%BD%A2%E5%9B%BE%E6%A1%882.jpg" alt="koch雪花"><br>koch雪花就是一个很好的例子<br>杰克逊 波洛克的画也有隐藏的分形图案<br><img src="/assets/%E5%88%86%E5%BD%A2%E5%9B%BE%E6%A1%883.jpg" alt="1948年第5号"><br>《1948年第5号》是杰克逊·波洛克“滴画”中的精品，看起来有些杂乱无章。这幅作品于2006年11月3日拍卖出全球绘画作品最高价，达1亿4千万美元，收购名画者是一位墨西哥金融家。<br><img src="/assets/%E5%88%86%E5%BD%A2%E5%9B%BE%E6%A1%884.jpg" alt="1949年第8号（局部）"><br>（说实话，我还是很欣赏不来，这幅算是好一点的）<br>在自然图像中，“分形程度”在一定范围内才是最优的。</p><h4 id="1-美学与神经科学"><a href="#1-美学与神经科学" class="headerlink" title="1.美学与神经科学"></a>1.美学与神经科学</h4><p>真实世界与大脑加工信息的方式存在拓扑映射</p><h4 id="2-神经美学诞生了"><a href="#2-神经美学诞生了" class="headerlink" title="2.神经美学诞生了"></a>2.神经美学诞生了</h4><p>流行的艺术形式能够帮助我们的祖先适应环境，迅速识别伪装之下的天敌，找到安全并提供食物的环境，发现熟透的果实来填饱肚子。类似的进化过程使人类的大脑对某些事物形成了特定的偏好，所以我们将审美偏好归于进化压力，但同时也可能是文化造成的。研究发现当人们看到自己认为美丽的图像时，内侧眶额皮质(mOFC)就会变得活跃，“情人眼里出西施”可以更新成：美取决于旁观者的内侧眶额皮质。</p><h4 id="3-拉马钱德兰的九个原则"><a href="#3-拉马钱德兰的九个原则" class="headerlink" title="3.拉马钱德兰的九个原则"></a>3.拉马钱德兰的九个原则</h4><h5 id="1-峰值转移和超常刺激"><a href="#1-峰值转移和超常刺激" class="headerlink" title="1.峰值转移和超常刺激"></a>1.峰值转移和超常刺激</h5><p>超常刺激：用事物的精髓来描述物品、人或动物最特别、最具辨识度的视觉元素，艺术与设计能够通过夸大某物独特的视觉特征来增强人们认出它时的顿悟感。<br>峰值转移：当动物学习时对单个刺激做出反应时，它们通常会对学习阶段见到的完全相同的刺激做出最强烈的反应（行为的“峰值”）但是当它们学习辨别两个形状时，行为的峰值就转移到了夸大的差异上，即对夸大的差异做出强烈的反应。</p><blockquote><p>应用：</p><ul><li>如果观看者利用某个形状寻找某事物，那么这个形状就应该被夸大</li><li>使照片吸引人的独特要素（比如美丽的风景或诱人的食物）都可以被夸大以便引发更强的情绪反应</li><li>夸大独立的设计元素会使它显得更独特</li></ul></blockquote><h5 id="2-孤立原则"><a href="#2-孤立原则" class="headerlink" title="2.孤立原则"></a>2.孤立原则</h5><p>把多余的视觉特征去掉</p><blockquote><p>应用：</p><ul><li>如果某个东西很难被识别，那么要避免让其他设计元素与之重叠或将其掩盖</li><li>在你想要吸引注意力的元素周围选择性地使用白色空间</li></ul></blockquote><h5 id="3-组合原则"><a href="#3-组合原则" class="headerlink" title="3.组合原则"></a>3.组合原则</h5><p>看起来互不相关的视觉元素经过大脑加工而联结时，我们就会产生顿悟之感。</p><blockquote><p>应用：</p><ul><li>即使设计中不同的图像元素距离较远，仍可以利用颜色和形状将它们联系起来</li><li>注意，在设计中把事物放置在一起意味着它们时有关联的</li></ul></blockquote><h5 id="4-对比原则（也称视觉显著）"><a href="#4-对比原则（也称视觉显著）" class="headerlink" title="4.对比原则（也称视觉显著）"></a>4.对比原则（也称视觉显著）</h5><blockquote><p>应用：</p><ul><li>如果你想让观看者注意某个设计元素，那就将它放在颜色为对比色的背景或设计元素上。</li><li>尝试增加设计或照片的对比度，使之视觉上更引人注目。</li></ul></blockquote><h5 id="5-视觉谜题原则"><a href="#5-视觉谜题原则" class="headerlink" title="5.视觉谜题原则"></a>5.视觉谜题原则</h5><blockquote><p>应用：</p><ul><li>简单的、容易解决的视觉谜题使吸引观众注意力的好方法；</li><li>如果观众已经对某个物体或照片很熟悉了，那将其部分遮盖是否能让它显得更吸引人呢？</li></ul></blockquote><h5 id="6-有序原则"><a href="#6-有序原则" class="headerlink" title="6.有序原则"></a>6.有序原则</h5><blockquote><p>应用：</p><ul><li>如果一个设计中有多个角度相同的线条，那在添加另外一条角度不同的线条之前确认一下：这样做会不会看起来不太合理？</li><li>将物体以同样的角度排列能够使设计看起来更和谐、平衡。</li></ul></blockquote><h5 id="7-隐喻原则"><a href="#7-隐喻原则" class="headerlink" title="7.隐喻原则"></a>7.隐喻原则</h5><blockquote><p>应用：</p><ul><li>可以借鉴动画家频繁使用的技巧让文字反映词语本身的意思</li><li>想办法将图像设计成隐喻来表达概念或情绪</li></ul></blockquote><h5 id="8-巧合厌恶原则"><a href="#8-巧合厌恶原则" class="headerlink" title="8.巧合厌恶原则"></a>8.巧合厌恶原则</h5><blockquote><p>应用：</p><ul><li>在描绘物体或形状时，确保呈现的角度不会给人一种“太过容易”的视觉感受</li><li>注意不要过于明显地使用有序原则或对称原则</li></ul></blockquote><h5 id="9-对称原则"><a href="#9-对称原则" class="headerlink" title="9.对称原则"></a>9.对称原则</h5><blockquote><p>应用：</p><ul><li>在设计中创造对称的形状、边框以及图像</li><li>在描绘对称性事物时，可以仅仅将事物的一半展现出来吗？有时这是理想的、极简主义的呈现图像的方式，因为有时另一半其实是多余的。</li></ul></blockquote><p>补充：<br><strong>格式塔知觉原则</strong> 我们在理解图像时总是用最简单，可能性最大的解释。<br>当我们将事物进行组合时，会认为事物本身理应是完整的，而不是由于（不太可能发生的）巧合才被组合到一起的。</p><h4 id="4-萨米尔-泽基：艺术家就是神经科学家"><a href="#4-萨米尔-泽基：艺术家就是神经科学家" class="headerlink" title="4.萨米尔.泽基：艺术家就是神经科学家"></a>4.萨米尔.泽基：艺术家就是神经科学家</h4><p>要表达一个特定的视觉元素——颜色、形状、运动和线条方向，最好削弱其他元素的变化。<br>对应的艺术家：</p><table><thead><tr><th>艺术流派</th><th>视觉属性</th><th>脑区</th></tr></thead><tbody><tr><td>野兽派，亨利·马蒂斯（Henri Matisse）、安德烈·德兰(André Derain）</td><td>颜色</td><td>V4</td></tr><tr><td>立体派，巴勃罗·毕加索、乔治·布拉克(Georges Braque）</td><td>形状</td><td>V1和V2</td></tr><tr><td>动态艺术，亚历山大·卡尔德(AlexanderCalde）</td><td>动作</td><td>V5</td></tr></tbody></table><p><strong>颜色</strong><br>亨利·马蒂斯（Henri Matisse）<br><img src="/assets/%E9%A2%9C%E8%89%B21.jpg" alt="亨利·马蒂斯1"><br><img src="/assets/%E9%A2%9C%E8%89%B22.jpg" alt="亨利·马蒂斯2"><br><img src="/assets/%E9%A2%9C%E8%89%B23.jpg" alt="亨利·马蒂斯3"><br><img src="/assets/%E9%A2%9C%E8%89%B24.jpg" alt="亨利·马蒂斯4"><br><img src="/assets/%E9%A2%9C%E8%89%B25.jpg" alt="亨利·马蒂斯5"><br><img src="/assets/%E9%A2%9C%E8%89%B26.jpg" alt="亨利·马蒂斯6"><br><img src="/assets/%E9%A2%9C%E8%89%B27.jpg" alt="亨利·马蒂斯7"><br><a href="https://view.inews.qq.com/a/20211211A00O9B00">亨利·马蒂斯更多作品</a><br>安德烈·德兰(André Derain）<br><img src="/assets/%E9%A2%9C%E8%89%B28.jpg" alt="安德烈·德兰1"><br><img src="/assets/%E9%A2%9C%E8%89%B29.jpg" alt="安德烈·德兰2"><br><img src="/assets/%E9%A2%9C%E8%89%B210.jpg" alt="安德烈·德兰3"><br><img src="/assets/%E9%A2%9C%E8%89%B211.jpg" alt="安德烈·德兰4"><br><img src="/assets/%E9%A2%9C%E8%89%B212.jpg" alt="安德烈·德兰5"><br><a href="https://baijiahao.baidu.com/s?id=1657980745363979063&wfr=spider&for=pc">安德烈·德兰更多作品</a></p><p><strong>形状</strong><br>巴勃罗·毕加索<br><img src="/assets/%E5%BD%A2%E7%8A%B61.jpg" alt="巴勃罗·毕加索1"><br><img src="/assets/%E5%BD%A2%E7%8A%B62.jpg" alt="巴勃罗·毕加索2"><br><img src="/assets/%E5%BD%A2%E7%8A%B63.jpg" alt="巴勃罗·毕加索3"><br><img src="/assets/%E5%BD%A2%E7%8A%B64.jpg" alt="巴勃罗·毕加索4"><br><img src="/assets/%E5%BD%A2%E7%8A%B65.jpg" alt="巴勃罗·毕加索5"><br><img src="/assets/%E5%BD%A2%E7%8A%B66.jpg" alt="巴勃罗·毕加索6"><br><a href="http://news.sohu.com/a/575009822_121124788">巴勃罗·毕加索更多作品</a></p><p>乔治·布拉克<br><img src="/assets/%E5%BD%A2%E7%8A%B67.jpg" alt="乔治·布拉克1"><br><img src="/assets/%E5%BD%A2%E7%8A%B68.jpg" alt="乔治·布拉克2"><br><img src="/assets/%E5%BD%A2%E7%8A%B69.jpg" alt="乔治·布拉克3"><br><img src="/assets/%E5%BD%A2%E7%8A%B610.jpg" alt="乔治·布拉克4"><br><img src="/assets/%E5%BD%A2%E7%8A%B611.jpg" alt="乔治·布拉克5"><br><a href="https://baijiahao.baidu.com/s?id=1646647956927925251&wfr=spider&for=pc">乔治·布拉克更多作品</a></p><blockquote><p>抽象派艺术其实并非真的是随机的或抽象的，它之所以引人注意可能是因为它能够刺激大脑视觉区的不同功能模块，反映了大脑如何通过视觉信息解读世界。</p></blockquote><p><strong>恒常性原则</strong><br>大脑视觉区还需要为物体或面孔建立更广泛的模型，所以艺术家需要尝试捕捉事物的精髓与本质<br><strong>抽象原则</strong><br>大脑里存储的事物的理想模型在现实生活中很少见到，艺术为我们提供了理想模型的视觉范例。</p><h2 id="（三）加工流畅度：如何让设计更直观"><a href="#（三）加工流畅度：如何让设计更直观" class="headerlink" title="（三）加工流畅度：如何让设计更直观"></a>（三）加工流畅度：如何让设计更直观</h2><p><strong>巴洛克风格</strong><br>奢华、复杂<br><a href="https://baike.baidu.com/item/%E5%B7%B4%E6%B4%9B%E5%85%8B%E8%89%BA%E6%9C%AF/5227379?fromtitle=%E5%B7%B4%E6%B4%9B%E5%85%8B%E9%A3%8E%E6%A0%BC&fromid=451551&fr=aladdin#4_3">巴洛克风格</a><br><strong>包豪斯设计学校</strong><br>精炼、简化<br><a href="http://news.sohu.com/a/575151362_120355098">包豪斯学校</a><br>雷蒙德·洛威（Raymond Fernand Loewy)将欧洲美学以更友好、更易接受的方式呈现给了消费者，普及和推广了极简主义设计。<br>提出的设计原理：<strong>MAYA</strong>：在可接受范围内尽可能保持前卫。</p><blockquote><p>本章需要解决问题：<br>设计应该简洁易懂、利于观众观看和理解，还是要让设计复杂精细，从而更有趣、更吸引人；<br>设计是应该在直觉上令人感到熟悉并且符合期待，还是应该让人感到陌生，出乎意料</p></blockquote><h4 id="1-加工流畅度"><a href="#1-加工流畅度" class="headerlink" title="1. 加工流畅度"></a>1. 加工流畅度</h4><p>人们更喜欢简单、易加工的设计来帮助他们快速、简便、凭直觉找到想要的东西。</p><h4 id="2-熟悉性：单纯曝光效应"><a href="#2-熟悉性：单纯曝光效应" class="headerlink" title="2.熟悉性：单纯曝光效应"></a>2.熟悉性：单纯曝光效应</h4><p>人们对熟悉或简单的事物表现出偏好，对新颖或复杂的事物加工困难</p><h4 id="3-加工流畅度的生理学证据"><a href="#3-加工流畅度的生理学证据" class="headerlink" title="3.加工流畅度的生理学证据"></a>3.加工流畅度的生理学证据</h4><p>面部肌电图表明加工流畅使我们感到舒适</p><h4 id="4-加工容易度的内在监控"><a href="#4-加工容易度的内在监控" class="headerlink" title="4.加工容易度的内在监控"></a>4.加工容易度的内在监控</h4><p>设计师通过自己的努力思考尽可能减少观众需要付出的精力，利用精巧设计使复杂信息变得容易加工。</p><h4 id="5-系统1和系统2如何解码图像"><a href="#5-系统1和系统2如何解码图像" class="headerlink" title="5.系统1和系统2如何解码图像"></a>5.系统1和系统2如何解码图像</h4><table><thead><tr><th>系统1</th><th>系统2</th></tr></thead><tbody><tr><td>自动、不费力</td><td>需要更多的努力和注意</td></tr><tr><td>仅由图像本身驱动</td><td>由观众的思考驱动</td></tr><tr><td>无意识</td><td>有意识</td></tr><tr><td>评判图像的默认模式</td><td>图像难以理解或我们有动机想进一步理解它</td></tr><tr><td>主要是知觉流畅度</td><td>主要是概念流畅度</td></tr><tr><td>更肤浅</td><td>更深刻</td></tr></tbody></table><p>只有当人们有动机去进一步理解不简单或不熟悉的图像时，这些图像才可以成功地被加工。</p><h4 id="6-知觉和概念流畅度"><a href="#6-知觉和概念流畅度" class="headerlink" title="6.知觉和概念流畅度"></a>6.知觉和概念流畅度</h4><p>词表可以作为概念流畅度的一个例子，知觉流畅度是视觉上更容易解码的设计。<br><strong>命题密度</strong>：深层元素（元素表达的意义）&#x2F;表面元素（图形），结果大于1就说明这个图像利用基本的图形元素传达了更多的意义，同时容易观看并且更有吸引力。例如商标：<br><img src="/assets/%E8%8B%B9%E6%9E%9C%E5%95%86%E6%A0%87.jpg" alt="苹果商标"><br><img src="/assets/%E8%80%90%E5%85%8B%E5%95%86%E6%A0%87.jpg" alt="耐克商标"></p><blockquote><p>简单就是极致的复杂————达芬奇                                                  </p></blockquote><h4 id="7-超越简单VS复杂"><a href="#7-超越简单VS复杂" class="headerlink" title="7.超越简单VS复杂"></a>7.超越简单VS复杂</h4><p>表面复杂度低，信息内涵多的图像就是高命题密度的商标</p><blockquote><p>图形的优雅就在于设计的简单和数据的复杂————爱德华·R.塔夫特</p></blockquote><p>注意：清晰度和简洁性的作用在短期内比较强，但是在图像重复出现并变得熟悉之后，它们的作用就会变弱甚至反转。</p><h4 id="8-新颖和复杂的设计让人喜爱"><a href="#8-新颖和复杂的设计让人喜爱" class="headerlink" title="8.新颖和复杂的设计让人喜爱"></a>8.新颖和复杂的设计让人喜爱</h4><ul><li>新颖的图像蕴含很多易于加工的信息，人们就可能会更喜欢它们。</li><li>容易加工的图像就是意外地看到很熟悉的事物，只有当熟悉和不熟悉的事物放在一起形成对比时，单纯的曝光效应才会出现。</li><li>人们偏爱的可能是那些出人意料的简洁设计，或是内涵丰富但风格极简的设计。</li></ul><h4 id="9-如何让机器人对图像感兴趣"><a href="#9-如何让机器人对图像感兴趣" class="headerlink" title="9.如何让机器人对图像感兴趣"></a>9.如何让机器人对图像感兴趣</h4><p>电脑程序越短，柯氏复杂性就越低，图像可压缩性就越强。<br>如果图像的细节有序地以某种形式重复出现，图像的柯氏复杂性就会降低。</p><ul><li>新颖且可压缩的规律引发好奇心<br>规律比较容易被大脑记忆和加工，人们倾向偏爱普通或“典型”的图像，这些图像容易被人们加工和理解，因为我们已经理解了它们的“模板”。就像我们的面孔严重影响了面孔模板的建立，数学家和科学家认为用极少的元素概括自然世界的方程具备优雅美丽的特质。</li><li>新颖且可压缩的规律就像是大脑的零食<br>大脑只要感知规律存在的可能性，就会对图像表现出兴趣并进一步研究、提取规律。</li><li>低复杂度的设计<br>人们能够感受到（甚至是无意识的）图像中隐藏的几何图形，某些设计者已经在用几何模板创造设计了。<br>例如：<br><img src="/assets/%E8%8B%B9%E6%9E%9C%E4%BA%91%E7%B3%BB%E7%BB%9F.jpg" alt="苹果云系统">    <img src="/assets/%E6%8E%A8%E7%89%B9.jpg" alt="推特"><br>都是基于一系列重叠的圆圈设计的。<blockquote><p>同样的，网页设计师经常使用格子模板将各个元素放在页面上，创造出页面上的秩序和一致性。低复杂度的设计模板包含复杂、有趣的几何图形。<br><strong>构造定律</strong>：极简主义设计致力于寻找最简单、最省力（就思考过程来说）的方式来传达信息或解释任务，这也是大自然运转的方式。</p></blockquote></li></ul><h4 id="10-让设计加工更流畅的方式"><a href="#10-让设计加工更流畅的方式" class="headerlink" title="10.让设计加工更流畅的方式"></a>10.让设计加工更流畅的方式</h4><ul><li>形式熟悉但细节奇妙</li><li>清晰度和对比度<br>图像主体和背景的高对比度</li><li>自相似图形<br>图形中较小的元素跟整体相似，即一个设计中同样的模式在不同水平重复出现，其中三个例子就是<strong>斐波那契数列</strong>、<strong>分形</strong>、<strong>黄金比例</strong></li><li>斐波那契数列<br><img src="/assets/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.jpg" alt="斐波那契数列"> </li><li>分形<br><img src="/assets/%E5%88%86%E5%BD%A2%E5%9B%BE%E6%A1%88.jpg" alt="分形"></li><li>黄金比例(0.618)<br>一组线条中长线与短线之间的差异等于总长度与长线之间的差异，黄金长方形的高与宽之比是1：1.618<br>经计算发现相邻两个斐波那契数的比值是随序号的增加而 逐渐逼近黄金分割比 。</li><li>三分法则<br>通过把最重要的视觉信息与其中一条线相交（或者将信息放于线条相交的地方），就会得到一个令人愉悦且平衡的图像，尤其是四个交点中的三个（A、B和D）都会影响人们对图像的喜好。<br><img src="/assets/%E4%B8%89%E5%88%86%E6%B3%95%E6%9E%84%E5%9B%BE.jpg" alt="三分法构图"><br><a href="https://baijiahao.baidu.com/s?id=1697659429877941727&wfr=spider&for=pc">三分法构图摄影技巧</a></li><li>对称<br>人们最喜欢左右对称的图形，其次是上下对称，对沿对角线对其的偏好最弱</li><li>左右差异<blockquote><p>图像在左文字在右的设计更令人愉悦</p></blockquote></li></ul><p>因为我们的左脑更擅长理解语言，右脑更擅长解码视觉信息<br><strong>假性忽视</strong>：我们更倾向于注意左侧视野的视觉信息，人们也能更快地发现左侧视野中发生的变化</p><ul><li>视觉等级<br>我们直觉上能理解尺码和位置所传递的“此物是否重要”的信息。</li><li>启动与背景<br>如果我们之前看到过某件事物，之后见到与其相似的事物时就会更容易识别和理解。潜意识的启动可以增加图像加工的流畅度。启动也可以是非理性的：一个背景中的信息可以在另一个完全不相关的背景中引发行为。</li><li>峰值转移效应<br>设计作品通过夸大最具特色的元素使其容易被识别可以增加加工流畅性</li><li>方向敏感性与倾斜效应<br>视觉皮层更擅长理解竖直或水平的线条，不擅长理解带角度的，线条之间越接近30度，人们越难发现不同角度线条之间的差异。<br>最好将线条、边缘和物体水平或竖直放置，有角度的线条最好呈30度或者让它们对齐。<br>例如：指针指向10：10的手表<br><img src="/assets/%E6%8C%87%E9%92%88%E6%89%8B%E8%A1%A8.jpg" alt="指针指向10：10的手表"><br><a href="https://zhuanlan.zhihu.com/p/270606687">为什么广告里的手表指针都是大概指向10点10分呢？</a><blockquote><p>网络使用和加工流畅度<br>1.<strong>设计直观、省力、不受中断浏览的网页</strong><br>2.<strong>把点击的动作简单化</strong><br>3.<strong>减少文字使用</strong></p></blockquote></li></ul><h4 id="11-检查设计复杂度"><a href="#11-检查设计复杂度" class="headerlink" title="11.检查设计复杂度"></a>11.检查设计复杂度</h4><ul><li>图像具有对称性吗？</li><li>图像符合某个潜在的模板吗？</li><li>命题密度是多少？</li><li>图像有多少单个元素？</li><li>图像是容易理解，还是需要反复看图理解不同元素？</li><li>有没有自然的重要性等级引导人们观看图像？</li><li>设计中有没有多余的元素可以去除？</li></ul><h2 id="（四）第一印象机制"><a href="#（四）第一印象机制" class="headerlink" title="（四）第一印象机制"></a>（四）第一印象机制</h2><p>人们在看到网页后的0.05秒之内就能够决定自己是否喜欢这个网页</p><h4 id="1-晕轮效应"><a href="#1-晕轮效应" class="headerlink" title="1.晕轮效应"></a>1.晕轮效应</h4><p>定义：对某物的积极情感会在无意识中让人们对它其他方面的评价也更积极。<br>第一印象形成后，观众对眼前所见产生直觉，直觉会影响他们对设计的有意识评价。</p><h4 id="2-第一印象只是情绪吗？"><a href="#2-第一印象只是情绪吗？" class="headerlink" title="2.第一印象只是情绪吗？"></a>2.第一印象只是情绪吗？</h4><p>网站使用最新的技巧和技术精心设计而成，第一印象不仅是晕轮效应，还包含对网页更深层的评估，一定程度上还决定了吸引力和新颖度。</p><h4 id="3-在网上形成对他人的第一印象"><a href="#3-在网上形成对他人的第一印象" class="headerlink" title="3.在网上形成对他人的第一印象"></a>3.在网上形成对他人的第一印象</h4><p><strong>表现力效应</strong>：相对于难以被人理解的人来说，采用富有表现力的、生动活泼的沟通方式的人更容易被其他人喜欢 ；即使他们在表达自己的烦恼。因为我们更有自信能够“读懂”这些人。因而他们就不那么具有威胁性了。</p><blockquote><p>启发：在线头像，不论是网站还是社交网站，都会决定客户或雇主对你的第一印象；<br>  面孔能决定与面孔特征无关的其他评价</p></blockquote><ul><li>对浏览行为的影响<blockquote><p>防止观众在前5秒的广告离开的办法</p><ol><li>将品牌作为产品的一部分展现出来，而不是漂浮的商标</li><li>幽默的广告能够使观众受益（微笑、大笑或感觉良好）</li><li>可以使用一些情绪在前五秒营造悬疑的气氛尤其有效</li><li>在前5秒内出现一张可辨识的面孔</li></ol></blockquote></li></ul><h4 id="4-薄切片与缺乏耐心的消费者"><a href="#4-薄切片与缺乏耐心的消费者" class="headerlink" title="4.薄切片与缺乏耐心的消费者"></a>4.薄切片与缺乏耐心的消费者</h4><blockquote><p>如何创造内容丰富的网页但又不会失去心急的浏览者？<br> 秘诀：分心。</p><ul><li>如果用户在等待网页加载过程中可以观看动画，那他们的注意资源就会被占用，从而不会因为缺乏耐心而离开；</li><li>进度条的设计能够影响使用者对时间的感知<br> 最有效的版本是螺纹的运动方向跟进度条的前进方向相反，使得用户的大脑误以为进度条比它实际运动得快。<br> <img src="/assets/%E8%9E%BA%E7%BA%B9%E8%BF%9B%E5%BA%A6%E6%9D%A1.jpg" alt="螺纹进度条"></li></ul></blockquote><h4 id="5-是什么驱动了第一印象"><a href="#5-是什么驱动了第一印象" class="headerlink" title="5.是什么驱动了第一印象"></a>5.是什么驱动了第一印象</h4><p>人们对彩度得喜爱程度受教育程度影响：受教育程度越高，对彩度得偏好越低；<br>人们对复杂度的要求受年龄影响：年长的人更偏好高水平的复杂度。<br>整体来看，中、低水平的复杂度（文字和图像之间达到平衡）和中、高水平的彩度会好一些。 网站设计倾向于聚集在最优设计格式附近，这些格式会被大家熟知而成为网络落户期待的格式，即需要典型性。（例如：主要商标、菜单和搜索框应该出现的位置，以及图像、文字和链接的数量）</p><blockquote><p>低复杂度和高典型性是最优的组合，但是低复杂度不能拯救非典型的设计，高典型的设计也不能拯救太过复杂的设计。</p></blockquote><h4 id="6-新奇感会伤害可用性"><a href="#6-新奇感会伤害可用性" class="headerlink" title="6.新奇感会伤害可用性"></a>6.新奇感会伤害可用性</h4><p>少许新奇感能够增加网站对用户的吸引力<br>宝洁公司旗下的19个品牌的年销量都超过了10亿美元。不论是吉列剃须刀、海飞丝洗发水还是碧浪洗涤剂，每个产品都经过了数千个小时的设计、研究和测试，使这些产品视觉上尽可能地充满吸引力。</p><h4 id="7-对设计师的启发"><a href="#7-对设计师的启发" class="headerlink" title="7.对设计师的启发"></a>7.对设计师的启发</h4><p>大多数网站倾向于在一定时间内保持设计不变，定期改变设计内部的内容；<br>使用图形软件将低频空间滤波器放在网页截图上，能够有效复制人类视觉系统在形成第一印象内的所见。</p><h4 id="8-一目了然"><a href="#8-一目了然" class="headerlink" title="8.一目了然"></a>8.一目了然</h4><p><strong>蒙娜丽莎效应</strong>：低空间频率的图像近看模糊，远看清晰；高空间频率的图像正好相反。<br>蒙娜丽莎的细节兼顾了两个孔金频率水平：近距离没笑，但是嘴角的阴影空间频率较低，因此在远处或者用余光看时就觉得她在微笑。<br><img src="/assets/%E8%92%99%E5%A8%9C%E4%B8%BD%E8%8E%8E%E8%BF%91%E7%9C%8B.jpg" alt="蒙娜丽莎近看"><br><img src="/assets/%E8%92%99%E5%A8%9C%E4%B8%BD%E8%8E%8E.jpg" alt="蒙娜丽莎远看"></p><blockquote><p>这个技巧可以向图像中添加可以在不同距离观察到的秘密，比如在海报设计中。</p></blockquote><h2 id="（五）多感官与情绪设计"><a href="#（五）多感官与情绪设计" class="headerlink" title="（五）多感官与情绪设计"></a>（五）多感官与情绪设计</h2><p>仅仅询问顾客对设计的想法可能会误导顾客，人们会不由自主地把对产品设计和包装的情感投射到产品本身上————感觉转移</p><h4 id="1-通过视觉线索激活其他感官"><a href="#1-通过视觉线索激活其他感官" class="headerlink" title="1.通过视觉线索激活其他感官"></a>1.通过视觉线索激活其他感官</h4><p>如果图像能够利用不同感官信息来支持视觉上的表达，大脑对事件的体验就会更强烈。<br>大脑将不同感官来源的信息混合后创造出对眼前所见的完整理解</p><h4 id="2-字母可以引发颜色关联吗"><a href="#2-字母可以引发颜色关联吗" class="headerlink" title="2.字母可以引发颜色关联吗"></a>2.字母可以引发颜色关联吗</h4><p>A与红色相关<br>O与白色相关<br>X与黑色相关<br>G与绿色相关<br><strong>斯特鲁普效应</strong>：当文字颜色与词义一致时，阅读颜色词语会比两者不一致时要容易。</p><h4 id="3-日期——颜色联系"><a href="#3-日期——颜色联系" class="headerlink" title="3.日期——颜色联系"></a>3.日期——颜色联系</h4><p>周一与红色相关</p><h4 id="4-形状有颜色吗"><a href="#4-形状有颜色吗" class="headerlink" title="4.形状有颜色吗"></a>4.形状有颜色吗</h4><p>三角形————黄色；圆形、正方形————红色；曲线与圆形————甜味；曲折多刺————苦味；</p><blockquote><p>诱人的食物图片技巧：<br> 1.高分辨率，展示食物细节、质地、脆性、糖衣、细微的颜色……<br> 2.新鲜的标志<br> 3.暗示食物已经可以食用：比如饮料被倒出来或奶油被倒在甜点上的动作，用刀、叉或勺子盛一些食物放在食物旁边。</p></blockquote><h4 id="5-颜色"><a href="#5-颜色" class="headerlink" title="5.颜色"></a>5.颜色</h4><p>如果你想将这些颜色混在一起来突出某物漂浮，通常将暖色放在冷色之上。<br>蓝色是最普遍被喜欢的颜色，深黄色是最不讨人喜欢的颜色。<br>颜色同时存在两种效应：评估或偏爱效应，以及刺激效应。<br>红色:人们面对身穿红色的对手时会更虚弱，身穿红色比身穿蓝色更可能胜出，红色能够降低人们的IQ测试，红色可能让我们对零售商的宣传更加“言听计从”（比如，用红色强调特价），红色还可能扰乱我们理性思考的能力，会让我们产生更加情绪化的反应。<br><strong>具身认知</strong>：不同的物理特性都会让人产生相应的联想。在手机或电脑上将某物滑向用户本人（即向下滑动屏幕）能够使人更喜欢这个物体。</p><h4 id="6-文字声音联想"><a href="#6-文字声音联想" class="headerlink" title="6.文字声音联想"></a>6.文字声音联想</h4><p>许多词根的产生可能是基于文字的读音以及发音时嘴巴的形状。</p><blockquote><p>挑选重要词语时，应该:</p></blockquote><ul><li>考虑词语引发的情绪或意义联想</li><li>注意发音时嘴巴和面部的移动</li><li>嘴巴是否形成了微笑的形状？双唇是紧闭的还是张开的。<br> <strong>感动启发法</strong>：情绪刺激能够使决策产生偏差，展示某物与人的手或面部接触可能会触发感官因而引发情绪。<blockquote><p>决策捷径：人们依据感受而不是理性评估做决策。</p></blockquote></li></ul><h4 id="7-面孔"><a href="#7-面孔" class="headerlink" title="7.面孔"></a>7.面孔</h4><p>较大的面孔相比较小的面孔更能引发情绪<br><strong>可爱</strong>：胖乎乎的四肢和大大的眼睛使可爱的两个特征</p><h4 id="8-拟人化设计"><a href="#8-拟人化设计" class="headerlink" title="8.拟人化设计"></a>8.拟人化设计</h4><p>拟人化图像能够为设计增添人格和情绪————增加友好元素或调动情绪</p><h4 id="9-弯曲和锋利的形状"><a href="#9-弯曲和锋利的形状" class="headerlink" title="9.弯曲和锋利的形状"></a>9.弯曲和锋利的形状</h4><p>人们对弯曲的设计表现出显著的偏好，不喜欢带棱角的图形，想要增加设计的友好度可以添加夸张的曲线</p><h2 id="（六）视觉显著地图"><a href="#（六）视觉显著地图" class="headerlink" title="（六）视觉显著地图"></a>（六）视觉显著地图</h2><h4 id="1-如何决定注视位置"><a href="#1-如何决定注视位置" class="headerlink" title="1.如何决定注视位置"></a>1.如何决定注视位置</h4><p><strong>自下而上的加工</strong>：自动的，由设计本身驱动，适用于所有人<br><strong>自上而下的加工</strong>：受到记忆、期待、搜索目标的影响<br>三个最重要的视觉显著特征：颜色、图案和大小<br>暗示性运动：箭头、斜体、饮料从瓶子倒出可以增强吸引力</p><h4 id="2-视觉显著性的力量"><a href="#2-视觉显著性的力量" class="headerlink" title="2.视觉显著性的力量"></a>2.视觉显著性的力量</h4><h4 id="3-显著性地图软件"><a href="#3-显著性地图软件" class="headerlink" title="3.显著性地图软件"></a>3.显著性地图软件</h4><h4 id="4-使用显著性地图软件"><a href="#4-使用显著性地图软件" class="headerlink" title="4.使用显著性地图软件"></a>4.使用显著性地图软件</h4><h4 id="5-网页上的显著性地图"><a href="#5-网页上的显著性地图" class="headerlink" title="5.网页上的显著性地图"></a>5.网页上的显著性地图</h4><h4 id="6-设计师如何使用视觉显著性"><a href="#6-设计师如何使用视觉显著性" class="headerlink" title="6.设计师如何使用视觉显著性"></a>6.设计师如何使用视觉显著性</h4><ul><li>颜色：鲜亮、荧光的，有对比度的</li><li>大小：大的物体和文字更容易被加工</li><li>图案：独树一帜的图案更可能被注意</li></ul><h2 id="（七）视觉说服和行为经济学"><a href="#（七）视觉说服和行为经济学" class="headerlink" title="（七）视觉说服和行为经济学"></a>（七）视觉说服和行为经济学</h2><h4 id="1-启动效益"><a href="#1-启动效益" class="headerlink" title="1.启动效益"></a>1.启动效益</h4><p>人类有两种最强大的内驱力：保证安全和寻找生育伙伴，人类的不同的行为策略：融入集体，得到众人支持；在人群中脱颖而出。</p><h4 id="2-说服不是有意识的"><a href="#2-说服不是有意识的" class="headerlink" title="2.说服不是有意识的"></a>2.说服不是有意识的</h4><ul><li>显著地图</li><li>加工流畅度</li><li>第一印象</li><li>感动启发法<br>强烈的态度更能预测行为<br>行为可以驱动情绪</li></ul><h4 id="3-行为经济学：决策捷径"><a href="#3-行为经济学：决策捷径" class="headerlink" title="3.行为经济学：决策捷径"></a>3.行为经济学：决策捷径</h4><p>行为改变的关键是移除障碍：</p><ul><li>风险</li><li>不确定性</li><li>困难</li></ul><h4 id="4-启发式的例子"><a href="#4-启发式的例子" class="headerlink" title="4.启发式的例子"></a>4.启发式的例子</h4><p>心理可得性：</p><ul><li>将想法视觉化：例如可以使用视觉隐喻</li><li>多感官整合</li><li>将用户的数据反馈给用户能够影响用户的决策</li></ul><h4 id="5-锚定与框架"><a href="#5-锚定与框架" class="headerlink" title="5.锚定与框架"></a>5.锚定与框架</h4><ul><li>提供相应、个性化的服务展示、对比产品、服务的价值</li><li>视觉上脱颖而出</li><li>说明我的产品或服务是个更好的替代品</li></ul><h4 id="6-双曲贴现和损失厌恶"><a href="#6-双曲贴现和损失厌恶" class="headerlink" title="6.双曲贴现和损失厌恶"></a>6.双曲贴现和损失厌恶</h4><p>如果人们不想购买产品时可以计算这样做的损失</p><h4 id="7-社会认同"><a href="#7-社会认同" class="headerlink" title="7.社会认同"></a>7.社会认同</h4><p>让人们了解与他们相似的人也用过这个产品或服务，帮助建立社会认同感。</p><h4 id="8-公平与互利"><a href="#8-公平与互利" class="headerlink" title="8.公平与互利"></a>8.公平与互利</h4><p>多感官刺激：付款成功后显示动画和声音，养老退休金服务可以加入很少的收益</p><h4 id="9-视觉推助"><a href="#9-视觉推助" class="headerlink" title="9.视觉推助"></a>9.视觉推助</h4><h4 id="10-创造并测试说服性图片和助推"><a href="#10-创造并测试说服性图片和助推" class="headerlink" title="10.创造并测试说服性图片和助推"></a>10.创造并测试说服性图片和助推</h4><h2 id="（八）电子屏幕上的设计"><a href="#（八）电子屏幕上的设计" class="headerlink" title="（八）电子屏幕上的设计"></a>（八）电子屏幕上的设计</h2><p>深度分割动态图<br><img src="/assets/%E6%B7%B1%E5%BA%A6%E5%88%86%E5%89%B2%E5%8A%A8%E6%80%81%E5%9B%BE.gif" alt="深度分割动态图"><br><img src="/assets/%E6%B7%B1%E5%BA%A6%E5%88%86%E5%89%B2%E5%8A%A8%E6%80%81%E5%9B%BE1.gif" alt="深度分割动态图"><br>利用三个分开的方框使简单的动画图像在普通屏幕上创造出令人惊讶的3D效果<br>框架可以吸引我们的注意力、用于强化视觉显著性</p><h4 id="1-在屏幕上阅读更困难"><a href="#1-在屏幕上阅读更困难" class="headerlink" title="1.在屏幕上阅读更困难"></a>1.在屏幕上阅读更困难</h4><p>在纸上阅读更容易获取信息</p><h4 id="2-提高文字可读性的方法"><a href="#2-提高文字可读性的方法" class="headerlink" title="2.提高文字可读性的方法"></a>2.提高文字可读性的方法</h4><p>每行45~72个字最好</p><h4 id="3-难读-x3D-难做"><a href="#3-难读-x3D-难做" class="headerlink" title="3.难读&#x3D;难做"></a>3.难读&#x3D;难做</h4><p>加工不流畅的字体可以使我们更可能理解信息，更加仔细阅读<br>场景开始和结束的信息更可能进入长时记忆<br>我们更有可能记住未完成的事件：给观众不完整的信息让他们填空，可以增强记忆<br>人们对事件的印象会受到情绪峰值和事件结束时情绪的影响</p><h4 id="4-去抑制效应"><a href="#4-去抑制效应" class="headerlink" title="4.去抑制效应"></a>4.去抑制效应</h4><p>人们在网络上的行为更诚实，更容易说出真实的观点<br>网络购物可以除去可能的社会耻辱</p><h4 id="5-移动设备屏幕"><a href="#5-移动设备屏幕" class="headerlink" title="5.移动设备屏幕"></a>5.移动设备屏幕</h4><p>大屏幕视频更容易引发情绪信任，小屏幕文字容易引发理性信任<br>交易愉悦：视频或丰富的图像建立安全感，添加更复杂的触摸特征<br>有能力可靠：多使用文字<br>长时间内保持某个行为：游戏化：收集点数和回报</p><h4 id="6-中心关注偏好"><a href="#6-中心关注偏好" class="headerlink" title="6.中心关注偏好"></a>6.中心关注偏好</h4><p>可将图像放在中心或左上角<br>16：9更适合观看电影<br>图片中人物图像最好在3个以内</p><h2 id="（九）病毒式设计"><a href="#（九）病毒式设计" class="headerlink" title="（九）病毒式设计"></a>（九）病毒式设计</h2><h4 id="1-网络模因"><a href="#1-网络模因" class="headerlink" title="1.网络模因"></a>1.网络模因</h4><h4 id="2-网络上的病毒式图像"><a href="#2-网络上的病毒式图像" class="headerlink" title="2.网络上的病毒式图像"></a>2.网络上的病毒式图像</h4><h4 id="3-模式因子和神经设计"><a href="#3-模式因子和神经设计" class="headerlink" title="3.模式因子和神经设计"></a>3.模式因子和神经设计</h4><h4 id="4-模因欲望"><a href="#4-模因欲望" class="headerlink" title="4.模因欲望"></a>4.模因欲望</h4><h4 id="5-情绪与病毒性内容"><a href="#5-情绪与病毒性内容" class="headerlink" title="5.情绪与病毒性内容"></a>5.情绪与病毒性内容</h4><h4 id="6-电脑能够预测图像的流行趋势吗"><a href="#6-电脑能够预测图像的流行趋势吗" class="headerlink" title="6.电脑能够预测图像的流行趋势吗"></a>6.电脑能够预测图像的流行趋势吗</h4><h2 id="（十）设计报告PPT"><a href="#（十）设计报告PPT" class="headerlink" title="（十）设计报告PPT"></a>（十）设计报告PPT</h2><h4 id="1-让观众能够理解你的信息"><a href="#1-让观众能够理解你的信息" class="headerlink" title="1.让观众能够理解你的信息"></a>1.让观众能够理解你的信息</h4><h4 id="2-视觉学习"><a href="#2-视觉学习" class="headerlink" title="2.视觉学习"></a>2.视觉学习</h4><h4 id="3-演示中视觉故事的力量"><a href="#3-演示中视觉故事的力量" class="headerlink" title="3.演示中视觉故事的力量"></a>3.演示中视觉故事的力量</h4><h2 id="（十一）如何对设计展开神经测试"><a href="#（十一）如何对设计展开神经测试" class="headerlink" title="（十一）如何对设计展开神经测试"></a>（十一）如何对设计展开神经测试</h2><h4 id="1-平均VS极化结果"><a href="#1-平均VS极化结果" class="headerlink" title="1.平均VS极化结果"></a>1.平均VS极化结果</h4><h4 id="2-控制其他因素"><a href="#2-控制其他因素" class="headerlink" title="2.控制其他因素"></a>2.控制其他因素</h4><h4 id="3-新的研究工具"><a href="#3-新的研究工具" class="headerlink" title="3.新的研究工具"></a>3.新的研究工具</h4><h4 id="4-跟进研究发现"><a href="#4-跟进研究发现" class="headerlink" title="4.跟进研究发现"></a>4.跟进研究发现</h4><h2 id="（十二）神经设计的未来运用"><a href="#（十二）神经设计的未来运用" class="headerlink" title="（十二）神经设计的未来运用"></a>（十二）神经设计的未来运用</h2><h4 id="1-神经设计的应用"><a href="#1-神经设计的应用" class="headerlink" title="1.神经设计的应用"></a>1.神经设计的应用</h4><h4 id="2-神经设计依然需要继续研究"><a href="#2-神经设计依然需要继续研究" class="headerlink" title="2.神经设计依然需要继续研究"></a>2.神经设计依然需要继续研究</h4>]]></content>
      
      
      <categories>
          
          <category> 小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人体基础课</title>
      <link href="/2022/08/15/ren-ti-ji-chu-ke/"/>
      <url>/2022/08/15/ren-ti-ji-chu-ke/</url>
      
        <content type="html"><![CDATA[<h3 id="一、制作一个人体比例参考三视图"><a href="#一、制作一个人体比例参考三视图" class="headerlink" title="一、制作一个人体比例参考三视图"></a>一、制作一个人体比例参考三视图</h3><p><img src="/assets/%E4%BA%BA%E4%BD%931.jpg" alt="人体1"><br>画不同动作时可以参考看比例是否画对</p><ul><li><p>头身比例</p></li><li><p>胳膊粗细</p></li><li><p>盆骨、胸腔宽厚大小</p></li><li><p>面部角度：仰视、 俯视</p></li><li><p>不同人物的身高比例</p></li></ul><h5 id="常用人体比例参考"><a href="#常用人体比例参考" class="headerlink" title="常用人体比例参考"></a>常用人体比例参考</h5><h6 id="3头身"><a href="#3头身" class="headerlink" title="3头身"></a>3头身</h6><p>脖子可以画细一些<br><img src="/assets/%E4%BA%BA%E4%BD%9313.jpg" alt="三头身"></p><h6 id="5头身"><a href="#5头身" class="headerlink" title="5头身"></a>5头身</h6><p><img src="/assets/%E4%BA%BA%E4%BD%932.jpg" alt="头部比例"><br>女性偏幼态：眼睛大、鼻子细小、嘴巴小、脸庞略带婴儿肥<br>男性偏成熟：脸长、眼睛小、鼻子长、嘴更大更尖、脸庞削瘦、下巴偏方<br><img src="/assets/%E4%BA%BA%E4%BD%933.jpg" alt="男女差异"></p><ul><li>上半身特点<br>人体整个长度：5个头；上下身比例：对半分；脖子差不多是正方形；根据脖子确定上半生长度：腰在上半身的对半处，腰以上称胸腔，以下对半处是肚脐，肚脐以下是盆腔；上下胳膊是一半长<br><img src="/assets/%E4%BA%BA%E4%BD%934.jpg" alt="上半身特点"></li><li>下半身特点<br>减去脚掌厚度后：下半身一份为2，对半处就是膝盖位置；<br>脚踝有关节球，膝盖处也有关节球<br>上下腿一半长，（腿长从裆部算起）<br><img src="/assets/%E4%BA%BA%E4%BD%935.jpg" alt="下半身特点"></li><li>手的特点<br>手的长度（从肩膀开始算，到手腕处）与裆部齐平——手腕齐裆<br>手掌长度大概是小臂的3&#x2F;4<br>手有动作时可根据这些推算<br>脚掌长度也是小腿长度的3&#x2F;4或2&#x2F;3<br><img src="/assets/%E4%BA%BA%E4%BD%937.jpg" alt="手的特点"></li><li>肩膀特点<br>肩膀长度为脖子长度的3倍多一点点<br><img src="/assets/%E4%BA%BA%E4%BD%937.jpg" alt="肩膀的特点"></li><li>头肩比<br>头比肩窄一点点即可<br><img src="/assets/%E4%BA%BA%E4%BD%938.jpg" alt="头肩比"></li><li>肩跨比<br>跨比肩稍微宽一点点<br><img src="/assets/%E4%BA%BA%E4%BD%939.jpg" alt="剑跨比"></li><li>男生身材<br>男生肩膀更宽一些，臀部无脂肪曲线，胸腔更饱满，腰更水桶<br><img src="/assets/%E4%BA%BA%E4%BD%9310.jpg" alt="男生身材"></li></ul><h6 id="7头身"><a href="#7头身" class="headerlink" title="7头身"></a>7头身</h6><ul><li>女性<br>肩膀比头粗出手臂的宽度<br>胸腔的宽度比跨的宽度窄<br><img src="/assets/%E4%BA%BA%E4%BD%9311.jpg" alt="女生7头身"></li><li>男性<br>肩部更宽（约为2.5~3个头的长度）<br>胸腔比胯部宽<br><img src="/assets/%E4%BA%BA%E4%BD%9312.jpg" alt="男女7头身对比"></li></ul>]]></content>
      
      
      <categories>
          
          <category> PS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 板绘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Logo设计</title>
      <link href="/2022/08/08/logo-she-ji/"/>
      <url>/2022/08/08/logo-she-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="一-圆"><a href="#一-圆" class="headerlink" title="一.圆"></a>一.圆</h3><ol><li>椭圆选框工具，按住Shift画正圆；<br>         同时按住Shift+Alt画中心正圆。</li><li>同心圆：画出圆以后G填充工具填充，再按住Alt+S+T变换选区，再按住Alt+Shift缩放之后回车，按Delete删除。</li><li>圆形工作路径：椭圆选框工具画出圆以后，鼠标右键，建立工作路径</li><li>调增圆形工作路径：选区变为路径，右侧工具栏上点击切换到<strong>路径</strong>下，可以看到新建的工作路径，双击保存即可。若要移动路径，可以切换左侧工具栏<strong>路径选择工具</strong>进行操作，如果需要对圆形形状进行调整，可以切换到<strong>直接选择工具</strong>。<br>缩放圆形：点击上方<strong>编辑</strong>下拉菜单点击<strong>自由变换路径</strong>，快捷方式为<strong>Ctrl+T</strong>,按住Shift正圆缩放，也可以按住鼠标左键移动圆形路径。<br>调整完位置后，返回选区状态，选中右侧栏<strong>路径</strong>下的路径名称，点击下方<strong>将路径作为选区载入</strong>，也可以按住Ctrl键，点击路径缩略图，完成选区的载入。</li></ol><h3 id="二-合并图层与盖印图层"><a href="#二-合并图层与盖印图层" class="headerlink" title="二.合并图层与盖印图层"></a>二.合并图层与盖印图层</h3><ol><li>Ctrl选出需要合并的图层，盖印图层：按下Alt+Ctrl+Shift+E</li></ol>]]></content>
      
      
      <categories>
          
          <category> PS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Logo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StringBuffer和String如何进行相互转换？</title>
      <link href="/2022/08/06/stringbuffer-he-string-ru-he-jin-xing-xiang-hu-zhuan-huan/"/>
      <url>/2022/08/06/stringbuffer-he-string-ru-he-jin-xing-xiang-hu-zhuan-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="从String转换到StringBuffer"><a href="#从String转换到StringBuffer" class="headerlink" title="从String转换到StringBuffer:"></a><strong></font><font color=#008000 >从String转换到StringBuffer</font></strong>:</h2><p> 1.通过StringBuffer的构造方法<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">      <span class="type">StringBuffer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br> 2.通过StringBuffer的append()方法<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">       <span class="type">StringBuffer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">       b.append(s);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><h2 id="StringBuffer转换为String"><a href="#StringBuffer转换为String" class="headerlink" title="StringBuffer转换为String:"></a><strong></font><font color=#008000>StringBuffer转换为String</font></strong>:</h2><p> 1.通过String构造方法<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">       <span class="type">StringBuffer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">       b.append(s);</span><br><span class="line">       <span class="type">String</span> <span class="variable">ss</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">String</span>(b);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><br> 2.通过toString()方法<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">   <span class="type">StringBuffer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);</span><br><span class="line">   <span class="type">String</span> <span class="variable">ss</span> <span class="operator">=</span> b.toString();</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><br> 3.使用substring方法<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">       <span class="type">StringBuffer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">       b.append(s);</span><br><span class="line">       <span class="type">String</span> <span class="variable">y</span> <span class="operator">=</span> b.substring(<span class="number">0</span>,b.length());</span><br><span class="line">       System.out.println(y);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/2022/07/28/bo-ke-da-jian/"/>
      <url>/2022/07/28/bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="一-博客创建"><a href="#一-博客创建" class="headerlink" title="一.博客创建"></a>一.博客创建</h1><p>参照教程：<br><a href="https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&vd_source=be8cd0f74e8c584396dd0d3cbd8fb8cd">博客创建</a></p><h3 id="（一）搭建博客需要的工具"><a href="#（一）搭建博客需要的工具" class="headerlink" title="（一）搭建博客需要的工具"></a>（一）搭建博客需要的工具</h3><p>摘要：安装node.js和Git，再用node.js下的npm来安装hexo，最后分别检查版本号</p><h4 id="1-Node-js的下载"><a href="#1-Node-js的下载" class="headerlink" title="1.Node.js的下载"></a>1.Node.js的下载</h4><p><a href="http://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi">Node.js下载网址</a></p><h4 id="2-Node-js的安装教程"><a href="#2-Node-js的安装教程" class="headerlink" title="2.Node.js的安装教程"></a>2.Node.js的安装教程</h4><p><a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">Node.js的安装教程链接</a></p><h4 id="3-Git下载"><a href="#3-Git下载" class="headerlink" title="3.Git下载"></a>3.Git下载</h4><p><a href="https://github.com/git-for-windows/git/releases/download/v2.11.0.windows.3/Git-2.11.0.3-64-bit.exe">Git下载地址</a><br>或者直接来网盘提取<br>[Node.js百度网盘](链接：<a href="https://pan.baidu.com/s/1BrxkOZv7xzRChCLldDYuaA?pwd=rhsn">https://pan.baidu.com/s/1BrxkOZv7xzRChCLldDYuaA?pwd=rhsn</a><br>提取码：rhsn)</p><h4 id="4-Git安装教程"><a href="#4-Git安装教程" class="headerlink" title="4.Git安装教程"></a>4.Git安装教程</h4><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Git安装教程</a></p><h4 id="5-检验是否装成功"><a href="#5-检验是否装成功" class="headerlink" title="5.检验是否装成功"></a>5.检验是否装成功</h4><p>按住windows+R键，输入cmd<br>输入 node -v 回车<br>输入 npm -v 回车<br>输入 git –version 回车<br><img src="/assets/%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E7%95%8C%E9%9D%A2.jpg" alt="安装成功界面"></p><h4 id="6-安装Hexo"><a href="#6-安装Hexo" class="headerlink" title="6.安装Hexo"></a>6.安装Hexo</h4><p>继续在上一个命令框中输入 npm install hexo-cli -g<br><img src="/assets/hexo%E5%AE%89%E8%A3%85.jpg" alt="hexo安装"><br>安装成功标志：最后出现 + <a href="mailto:&#x68;&#x65;&#x78;&#111;&#x2d;&#99;&#x6c;&#105;&#x40;&#52;&#x2e;&#51;&#x2e;&#x30;">&#x68;&#x65;&#x78;&#111;&#x2d;&#99;&#x6c;&#105;&#x40;&#52;&#x2e;&#51;&#x2e;&#x30;</a><br>检查版本号：hexo -v<br><img src="/assets/hexo%E7%89%88%E6%9C%AC%E5%8F%B7%E6%A3%80%E6%9F%A5.jpg" alt="hexo版本号检查"></p><h3 id="二-搭建仓库"><a href="#二-搭建仓库" class="headerlink" title="(二)搭建仓库"></a>(二)搭建仓库</h3><h4 id="1-github账号注册"><a href="#1-github账号注册" class="headerlink" title="1.github账号注册"></a>1.github账号注册</h4><p><a href="https://www.bilibili.com/read/cv5107169/">github账号注册教程</a><br>一定要记住注册名！！！<br>一定要记住注册密码！！！<br>一定要记住注册邮箱！！！</p><h4 id="2-创建仓库"><a href="#2-创建仓库" class="headerlink" title="2.创建仓库"></a>2.创建仓库</h4><p>仓库名必须是：你的注册名+.github.io<br><img src="/assets/%E4%BB%93%E5%BA%93%E5%90%8D.jpg" alt="仓库名"><br>Add a README file<br><img src="/assets/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.jpg" alt="Add a README file然后创建仓库"><br>创建成功界面<br><img src="/assets/%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA%E6%88%90%E5%8A%9F.jpg" alt="仓库创建成功界面"></p><h3 id="（三）生成SSH-Keys"><a href="#（三）生成SSH-Keys" class="headerlink" title="（三）生成SSH Keys"></a>（三）生成SSH Keys</h3><p>进入C盘或D盘中的任何一个文件夹，然后鼠标右键，Git Bash Here<br><img src="/assets/Gitbashhere.jpg" alt="Git Bash Here"><br>输入 ssh 回车<br>再输入 ssh-keygen -t rsa -C “邮件地址” (这里的邮件地址就是你注册时的邮件地址)<br><img src="/assets/%E7%94%9F%E6%88%90ssh.jpg" alt="生成ssh"><br>紧接着敲四次回车<br>最后是这个界面<br><img src="/assets/%E7%94%9F%E6%88%90%E4%BA%86.jpg" alt="生成了"><br>这个时候就已经在本地建成了一个文件夹，具体在C盘，用户，用户名，.ssh<br><img src="/assets/ssh%E7%9A%84%E4%BD%8D%E7%BD%AE.jpg" alt="ssh的位置"><br>打开它（注意是后缀名为pub的那个哦！），全选(ctrl+A)复制(ctrl+c)里面的代码<br>然后再打开我们的github，右上角小三角形，settings,左边那栏找到SSH and GPG keys点进去，然后找到SSH keys那栏，点击New SSH key<br><img src="/assets/%E6%96%B0%E5%BB%BA%E9%92%A5%E5%8C%99.jpg" alt="新建钥匙"><br>title名字可以乱取<br>key的内容是你刚刚复制的那段代码<br><img src="/assets/%E6%B7%BB%E5%8A%A0ssh.jpg" alt="添加ssh钥匙"><br>最后一步：测试ssh是否绑定成功：ssh -T <a href="mailto:&#103;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#x6d;">&#103;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#x6d;</a> 回车, 再输入yes<br><img src="/assets/%E7%BB%91%E5%AE%9A%E5%AF%86%E9%92%A5%E6%88%90%E5%8A%9F.jpg" alt="绑定密钥成功"></p><h3 id="（四）本地生成博客内容"><a href="#（四）本地生成博客内容" class="headerlink" title="（四）本地生成博客内容"></a>（四）本地生成博客内容</h3><ol><li>在C盘或D盘新建一个文件夹。（这个文件夹就是存放你博客内容的文件夹啦，所以可以选一个空间大一点的位置，给它取一个名字，比如我的就叫Blog。）</li><li>进入这个文件夹，（空白位置）右键，Git Bash Here</li><li>初始化hexo博客：hexo init<br>可能会出现这种情况<br><img src="/assets/%E8%BF%9E%E6%8E%A5%E8%B6%85%E6%97%B6.jpg" alt="连接超时"><br>出现这个情况没有关系，因为连接超时，未连接到github网页上，可以多试几次。<br>直到hexo成功初始化<br><img src="/assets/hexo%E6%88%90%E5%8A%9F%E5%88%9D%E5%A7%8B%E5%8C%96.jpg" alt="hexo成功初始化"><br>这个时候打开你所建的文件夹会发现多了很多内容<br><img src="/assets/hexo%E5%88%9D%E5%A7%8B%E6%96%87%E4%BB%B6.jpg" alt="hexo初始文件"></li><li>静态生成本地hexo页面：hexo s(相当于打开本地服务器)<br><img src="/assets/%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2.jpg" alt="本地博客页面"></li></ol><h3 id="（五）发布博客到互联网"><a href="#（五）发布博客到互联网" class="headerlink" title="（五）发布博客到互联网"></a>（五）发布博客到互联网</h3><p>github近期修改：1. 不再使用密钥，而使用令牌<br>               2. 一些分支进行了修改</p><ol><li>修改文件<br>打开这个文件<br><img src="/assets/%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6.jpg" alt="修改文件"><br>打开这个文件，把105行的deploy删除，换成这个<br>deploy:<br>  type: git<br>  repository:<br>  branch: main<br><img src="/assets/%E4%BF%AE%E6%94%B9105%E8%A1%8C%E7%9A%84%E5%86%85%E5%AE%B9.jpg" alt="修改105行的内容"><br>注意：repository的内容在这里找<br><img src="/assets/%E5%AF%BB%E6%89%BE%E4%BB%93%E5%BA%931.jpg" alt="寻找仓库1"><br><img src="/assets/%E5%AF%BB%E6%89%BE%E4%BB%93%E5%BA%932.jpg" alt="寻找仓库2"></li></ol><h1 id="二-主题选择"><a href="#二-主题选择" class="headerlink" title="二.主题选择"></a>二.主题选择</h1><p><a href="https://hexo.io/themes/">主题选择</a></p><h1 id="三-主题变更"><a href="#三-主题变更" class="headerlink" title="三.主题变更"></a>三.主题变更</h1><p><a href="https://www.bilibili.com/video/BV1U44y1g7ht?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click">主题变更</a></p><h1 id="四-博客美化"><a href="#四-博客美化" class="headerlink" title="四.博客美化"></a>四.博客美化</h1><p><a href="https://github.com/blinkfox/hexo-theme-matery#hexo-theme-matery">博客美化</a></p><h1 id="五-评论功能添加"><a href="#五-评论功能添加" class="headerlink" title="五.评论功能添加"></a>五.评论功能添加</h1><p><a href="https://zhuanlan.zhihu.com/p/424932976">博客功能</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++学习之路</title>
      <link href="/2022/07/25/c-xue-xi-zhi-lu/"/>
      <url>/2022/07/25/c-xue-xi-zhi-lu/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-初始C-语言"><a href="#第一章-初始C-语言" class="headerlink" title="第一章 初始C++语言"></a>第一章 初始C++语言</h3><ol><li>简介：C++最初被称作“C with Classes”带类的C。开始，C++是作为C语言的增强版出现的，从给C语言增加类开始，不断的增加新特性。</li><li>特点：</li></ol><ul><li>语言简洁紧凑，使用灵活方便<br>一共只有32个关键字和9种控制语句，共有34个运算符。</li><li>结构化语言<br>代码及数据的分隔化,即程序的各个部分除了必要的信息交流外彼此独立。</li><li>生成的代码质量高<br>C++语言在代码效率方面可以和汇编语言相媲美。</li><li>可移植性强<br>C++语言编写的程序很容易进行移植，在一个环境下运行的程序不加修改或少许修改就可以在完全不同的环境下运行。<br></font><font color=Blue>例子1</font><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span><span class="comment">//使用cin,cout，须调用iostream 库，否则编译出错</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span>         <span class="comment">// 使用system( )调用cstdlib库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  <span class="comment">//在C语言中要省略，例如在VC++和TC++中</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>                      <span class="comment">//有的C语言可用void main(),例如TC++和VC++</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Hello  World!&quot;</span>&lt;&lt;endl;   <span class="comment">//输出&quot;Hello World!&quot; </span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);     <span class="comment">//暂停作用，使用system(&quot;pause&quot;)调用cstdlib库</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;                  <span class="comment">//结束整个程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>说明：<blockquote><ol><li><strong>#include&lt;iostream&gt;</strong><br> 告诉编译器的预处理器将输入输出流的标准头文件(iostream)包括在本程序中。这个头文件包括了C++中定义的基本标准输入输出程序库的声明。</li><li><strong>using namespace std</strong><br>使用std(标准)名字空间的意思。所谓的名字空间是标准C++中的一种机制，用来控制不同类库的冲突问题。使用它可以在不同的空间内使用相同名字的类或者函数。</li><li><strong>cout &lt;&lt; “Hello World!” &lt;&lt; endl</strong><br> 这个语句在本程序中最重要。 cout是一个输出语句，告诉计算机把引  号之间的字符串送到标准的输出设备（屏幕）上。cout 的声明在头文件 iostream中，所以要想使用cout 必须将头文件iostream包括在程序开始处。endl是C++语言的换行控制符，表示内容输出后换行显示后续的内容。<br>4.<strong>system(“pause”);</strong><br>4.99之前的版本为了查看程序运行结果，而在return语句前加上这一句，这样显示屏幕就会停留，否则屏幕会以上而过。之后的版本不用加这条语句。</li></ol></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>板绘学习</title>
      <link href="/2022/07/21/ban-hui-xue-xi/"/>
      <url>/2022/07/21/ban-hui-xue-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h3><ol><li>新建画布：Ctrl+n</li><li>调整画布:C</li><li>前景色和背景色互换：X     前景色负责画笔，背景色负责橡皮擦</li><li>填充： Alt+Backspace或+Delete键</li><li>新建图层：Ctrl+shift+n  不要在背景上作图，新建图层！！</li><li>画笔工具：B</li><li>选择笔刷：F5</li><li>画笔设置：形状动态-&gt;控制-&gt;钢笔压力：控制笔的粗细<br>     传递：控制颜色的深浅</li><li>笔刷大小控制：[  ]</li><li>画布的放大与缩小：Alt+空格<br>            Z<br>            Ctrl+或ctrl-<br>            Alt+鼠标滚轮</li><li>移动画布: 按住空格键，再用鼠标移动</li><li>撤回：单次撤回：Ctrl+z<br>  多次撤回：Ctrl+Alt+z</li><li>选择类：1，魔棒 W 锁定区域只能用在闭合区域，选择扩展区域，2或3<br>     2，套索工具：L 在自己扣的区域内作画 shift键加选                ctrl+D取消<br>                                                              alt键减选</li></ol><h3 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h3><ol><li>画直线：横竖线：shift键<br>   斜线：关掉形状动态，shift键</li><li>画圆：左上角选择工具，右键，椭圆选框工具，右键，描边</li><li>改变线稿颜色：Ctrl+u（不能修改黑色线稿）<br>修改黑色线稿：Ctrl+B</li><li>改变线稿深浅：Ctrl+M</li><li>画出立体感：找到结构相交处进行加重（产生上下、左右、前后、遮挡关系）</li></ol><h3 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h3><p>板绘学习路线：</p><h4 id="描光影模块"><a href="#描光影模块" class="headerlink" title="描光影模块"></a>描光影模块</h4><ol><li>角色线稿基础<br>角色描线，清线；角色线稿风格与层次；角色线稿的分类训练；角色线稿综合训练</li><li>角色造型、透视<br>人物、道具造型概括；透视基础；透视转角度</li></ol><h4 id="素描光影模块"><a href="#素描光影模块" class="headerlink" title="素描光影模块"></a>素描光影模块</h4><ol start="3"><li>角色黑白构成、配色基础<br>角色黑白构成基础、配色基础</li></ol><h4 id="色彩光色模块"><a href="#色彩光色模块" class="headerlink" title="色彩光色模块"></a>色彩光色模块</h4><ol start="4"><li>角色素描与打光基础<br>素描基础、打光基础</li><li>角色素描材质基础<br>角色材质基础</li><li>色彩基础与色彩构成</li><li>角色配色与色彩打光</li></ol><h4 id="人体结构模块"><a href="#人体结构模块" class="headerlink" title="人体结构模块"></a>人体结构模块</h4><ol start="8"><li>人体体块基础</li><li>人体肌肉与人体素体</li><li>人体运动规律</li><li>角色头像基础</li></ol><h4 id="角色设计模块"><a href="#角色设计模块" class="headerlink" title="角色设计模块"></a>角色设计模块</h4><ol start="12"><li>模拟项目：同人插画、</li></ol><h3 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h3><h4 id="线稿的虚实"><a href="#线稿的虚实" class="headerlink" title="线稿的虚实"></a>线稿的虚实</h4><p>1.结构相交处实<br>2.转折处实：剪影、轮廓<br>3.外轮廓实<br>描边：w魔棒，选择外区域；<br>     L套索，右键，描边<br>4.近实远虚<br>5.视觉中心实</p><h4 id="厚涂与二次元"><a href="#厚涂与二次元" class="headerlink" title="厚涂与二次元"></a>厚涂与二次元</h4><p>1.造型上的差异<br>2.体积上的差异</p><ul><li>二次元：<br>线稿；</li></ul><ol><li>打光：光源、暗面、亮面、高光、反光、投影；</li><li>图层模式：运用正片叠底，可以新建一个图层，使用相同颜色，调节透明度，画出暗面；<br>头发：套索工具画出轮廓，shift添加发丝，alt减少发丝，再填充一个底色，再用套索画出暗面轮廓，填充颜色，再用魔棒选择整个头发（暗面选择硬边缘，不开传递，只开形状动态</li></ol><ul><li>厚涂：</li></ul><ol><li>线稿：起稿方式：色块、剪影、套索；</li><li>打光：立体感</li><li>卡闭塞：光照不到的地方，是一个死角，可用一个小三角形表现</li><li>过渡：头发、金属等选择硬边缘<br> 皮肤、球、玻璃：软边缘（比如皮肤，选择软边缘，不开形状动态，只开传递<br> 头发：暗面选择硬边缘，不开传递，只开形状动态，高光用橡皮擦，反光用柔边缘，轻轻在周围喷一喷</li></ol><h4 id="作画流程与上色"><a href="#作画流程与上色" class="headerlink" title="作画流程与上色"></a>作画流程与上色</h4><ul><li>四个图层<br>线稿：1.草稿；<br>2. 勾线<br> 第一个图层：线稿<br> 第二个图层：勾线、暗面亮面<br>打光<br> 第三个图层：正片叠底，选择套索工具，填充暗面颜色<br>上色<br>魔棒配合油漆桶（橡皮下方，渐变工具（拖拽注意方向），前景色（Alt+Back），背景色（ctrl+back）<br>刻画<br>锁定不透明度（只能画在原来的线稿上），但这样会改变原来的线稿<br>蒙版：在原来图层上新建一个图层，右键，创建剪切蒙版，就只能画在原来的线稿上了</li></ul><h4 id="打光"><a href="#打光" class="headerlink" title="打光"></a>打光</h4><ul><li>光源方向</li><li>暗面</li></ul><h3 id="线稿进步与改进"><a href="#线稿进步与改进" class="headerlink" title="线稿进步与改进"></a>线稿进步与改进</h3><p><img src="/assets/%E7%BA%BF%E7%A8%BF1.jpg" alt="线稿1"><br>评语：加重的位置找的挺全的，但是加重的线稿也需要保持他的一个流畅度，并且渐变过渡效果，可以做的自然一点画的线稿的话，不要重复蹭好几条线要画的准一点</p><h3 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h3><ol><li>画笔：<br>硬边缘：开形状动态<br>边缘：只开传递<br>制作画笔：魔棒选出小花花，在里面画一下，编辑，定义画笔预设<br>填色：选取配合前景色，背景色，油漆桶<br>图层模式：暗面、投影：正片叠底<br>金属：颜色减淡<br> 上色： 叠加<br>锁定不透明度：修改原有图层内容，改变线稿颜色<br>蒙版：在另一个图层</li></ol><p> 头发：大中小，方向</p><ol><li>线稿图层：魔棒选出</li><li>高光</li><li>反光</li><li>蒙版：正片叠底</li><li>暗面<br> （高光，反光创建剪切蒙版图层）</li><li>上色图层：<br> 打光在上色之前，记得有投影（亮面，暗面，高光，反光，投影）<br> 头发分组：蒙版图层，不开传递，画出投影，找出遮挡关系。反光新建剪贴蒙版图层，高光也是<br> 草稿，线稿，底色，光源，暗面，投影，反光，高光<br> 厚涂：<br> 线稿<br> 头发细节（<br> 暗面（<br> 上色<br> ctrl+U ：调低明度</li></ol><h3 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h3><p> 调整某一部分的位置：L选出需要调整的部分，ctrl+t调整位置 </p>]]></content>
      
      
      <categories>
          
          <category> PS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 板绘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>50道经典逻辑编程题</title>
      <link href="/2022/07/18/50-dao-jing-dian-luo-ji-bian-cheng-ti/"/>
      <url>/2022/07/18/50-dao-jing-dian-luo-ji-bian-cheng-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="1-兔子数列"><a href="#1-兔子数列" class="headerlink" title="1.兔子数列"></a>1.兔子数列</h3><p>题目：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？<br>程序分析：兔子的规律为数列1,1,2,3,5,8,13,21….</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请问你要问第几个月的兔子数量?&quot;</span>);</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> n=Integer.parseInt(reader.nextLine());</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">      <span class="type">int</span>[]rabbit=<span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">      rabbit[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">      rabbit[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">          rabbit[i]=rabbit[i-<span class="number">1</span>]+rabbit[i-<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;个月的兔子总数为&quot;</span>+rabbit[i]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-判断素数"><a href="#2-判断素数" class="headerlink" title="2.判断素数"></a>2.判断素数</h3><p>题目：判断101-200之间有多少个素数，并输出所有素数。<br>程序分析：判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除， 则表明此数不是素数，反之是素数。或者直接上欧拉筛法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//先用欧拉筛法求出1到200之间的所有素数</span></span><br><span class="line">        <span class="type">int</span> []num=<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">201</span>];<span class="comment">//因为数组下标从0开始，而为了方便，初始化数组时就让数字与数组下标相同，由于0不需要，所以数组长度就得增加1来存放这些数，不然就会出现越界</span></span><br><span class="line">        <span class="type">boolean</span> []is_prime=<span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">201</span>];</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200</span>;i++ )&#123;<span class="comment">//初始化数组，首先假设每一个数都是质数</span></span><br><span class="line">            num[i]=i;</span><br><span class="line">            is_prime[i]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">200</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i*i;j&lt;=<span class="number">200</span>;j+=i)&#123;<span class="comment">//相当于j=i*(i+1)</span></span><br><span class="line">               is_prime[j]=<span class="literal">false</span>;<span class="comment">//把质数倍得数筛去</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">101</span>;i&lt;=<span class="number">200</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(is_prime[i])&#123;</span><br><span class="line">                System.out.println(num[i]);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;101到200之间一共有&quot;</span>+count+<span class="string">&quot;个素数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-水仙花数"><a href="#3-水仙花数" class="headerlink" title="3.水仙花数"></a>3.水仙花数</h3><p>题目：打印出所有的 “水仙花数 “，所谓 “水仙花数 “是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个 “水仙花数 “，因为153&#x3D;1的三次方＋5的三次方＋3的三次方。<br>程序分析：利用for循环控制100-999个数，每个数分解出个位，十位，百位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> array[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">900</span>];</span><br><span class="line">        <span class="type">int</span> array1[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">900</span>];<span class="comment">//个位</span></span><br><span class="line">        <span class="type">int</span> array2[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">900</span>];<span class="comment">//十位</span></span><br><span class="line">        <span class="type">int</span> array3[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">900</span>];<span class="comment">//百位</span></span><br><span class="line">        <span class="type">boolean</span> flower[]=<span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">900</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">900</span>;i++)&#123;</span><br><span class="line">            array[i]=i+<span class="number">100</span>;</span><br><span class="line">            flower[i]=<span class="literal">false</span>;</span><br><span class="line">            array1[i]=array[i]%<span class="number">10</span>;</span><br><span class="line">            array2[i]=array[i]/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">            array3[i]=array[i]/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">900</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(Math.pow(array1[i],<span class="number">3</span>)+Math.pow(array2[i],<span class="number">3</span>)+Math.pow(array3[i],<span class="number">3</span>)==array[i])</span><br><span class="line">                flower[i]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">900</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(flower[i])</span><br><span class="line">                System.out.println(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-分解质因数"><a href="#4-分解质因数" class="headerlink" title="4.分解质因数"></a>4.分解质因数</h3><p>题目：将一个正整数分解质因数。例如：输入90,打印出90&#x3D;2<em>3</em>3*5。<br>程序分析：对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：(先让K&#x3D;2)<br>(1)如果这个质数恰等于n，则说明分解质因数的过程已经结束，打印出即可。(结束条件k&#x3D;num)<br>(2)如果n &gt; k，但n能被k整除，则应打印出k的值，并用n除以k的商,作为新的正整数你n,重复执行第一步。（while（num%k&#x3D;&#x3D;0))<br>(3)如果n不能被k整除，则用k+1作为k的值,重复执行第一步。(k++)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个正整数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> num=reader.nextInt();</span><br><span class="line">        System.out.print(num+<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(num&gt;<span class="number">0</span>)&#123;<span class="comment">//当输入的数是正整数时</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">2</span>;k&lt;=num;k++)&#123;</span><br><span class="line">                <span class="keyword">while</span>(num%k==<span class="number">0</span>)&#123;<span class="comment">//当k能被num整除时，打印出k</span></span><br><span class="line">                    System.out.print(k);</span><br><span class="line">                    num/=k;<span class="comment">//用num/k作为下一个num，当k不能被num整除时，k++</span></span><br><span class="line">                    <span class="keyword">if</span>(num!=<span class="number">1</span>)<span class="comment">//当num还不等于1时，就输出*</span></span><br><span class="line">                        System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-条件运算符"><a href="#5-条件运算符" class="headerlink" title="5.条件运算符"></a>5.条件运算符</h3><p>题目：利用条件运算符的嵌套来完成此题：学习成绩&gt; &#x3D;90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。<br>程序分析：(a&gt; b)?a:b这是条件运算符的基本例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入学习成绩&quot;</span>);</span><br><span class="line">       <span class="type">double</span> grade= reader.nextDouble();</span><br><span class="line">       <span class="keyword">if</span>(grade&gt;=<span class="number">90</span>)</span><br><span class="line">           System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(grade&gt;=<span class="number">60</span>)</span><br><span class="line">           System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-求最大公约数和最小公倍数"><a href="#6-求最大公约数和最小公倍数" class="headerlink" title="6.求最大公约数和最小公倍数"></a>6.求最大公约数和最小公倍数</h3><p>题目：输入两个正整数m和n，求其最大公约数和最小公倍数。<br>程序分析：利用辗除法。(原理：用较大数m除以较小数n，再用出现的余数y去除除数，即n÷y,得到的余数y1再去除除数，即y1÷y……如此反复，直到最后余数是0为止)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> m,n;</span><br><span class="line">       <span class="type">int</span> commonDivisor;<span class="comment">//最大公约数</span></span><br><span class="line">       <span class="type">int</span> commonMultiple;<span class="comment">//最小公倍数</span></span><br><span class="line">       Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入这两个数：&quot;</span>);</span><br><span class="line">       m= reader.nextInt();</span><br><span class="line">       n=reader.nextInt();</span><br><span class="line">       <span class="type">int</span> max=(m&gt;n)?m:n;</span><br><span class="line">       <span class="type">int</span> min=(m&lt;n)?m:n;</span><br><span class="line">       <span class="keyword">while</span>(max%min!=<span class="number">0</span>)&#123;</span><br><span class="line">           <span class="type">int</span> temp=min;</span><br><span class="line">           min=max%min;</span><br><span class="line">           max=temp;</span><br><span class="line">       &#125;</span><br><span class="line">       commonDivisor=min;</span><br><span class="line">       commonMultiple=(m/commonDivisor)*(n/commonDivisor)*commonDivisor;</span><br><span class="line">       System.out.println(<span class="string">&quot;最大公约数为&quot;</span>+commonDivisor);</span><br><span class="line">       System.out.println(<span class="string">&quot;最小公倍数为&quot;</span>+commonMultiple);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简洁一点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> a,b,c;</span><br><span class="line">        a= reader.nextInt();</span><br><span class="line">        b= reader.nextInt();</span><br><span class="line">        c= a%b;</span><br><span class="line">        <span class="keyword">while</span>(c!=<span class="number">0</span>)&#123;</span><br><span class="line">            a=b;</span><br><span class="line">            b=c;</span><br><span class="line">            c=a%b;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>采用递归<br>递归三条件：</p><ol><li>有明确的结束条件（递归出口）；</li><li>每次递归都是让问题规模变小，使问题一步步简化；</li><li>将一个问题转换为一个新问题，并且新问题的解法和原来问题的解法类同或相同，不同的仅是处理对象，且处理对象有一定的依据。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> a,b,c;</span><br><span class="line">        a= reader.nextInt();</span><br><span class="line">        b= reader.nextInt();</span><br><span class="line">       System.out.println(gcd(a,b));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;<span class="comment">//返回a，即返回上一步的b</span></span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="7-统计输入字符串的英文字母、空格、数字和其他字符的个数"><a href="#7-统计输入字符串的英文字母、空格、数字和其他字符的个数" class="headerlink" title="7.统计输入字符串的英文字母、空格、数字和其他字符的个数"></a>7.统计输入字符串的英文字母、空格、数字和其他字符的个数</h3><p>题目：输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。<br>1.程序分析：利用while语句,条件为输入的字符不为 ‘\n ‘.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String s=reader.nextLine();</span><br><span class="line">        <span class="type">char</span>[]str=s.toCharArray();<span class="comment">//将字符串转化为字符数组</span></span><br><span class="line">        <span class="type">int</span> length= str.length;</span><br><span class="line">        <span class="type">int</span> charNum=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> spaceNum=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> numberNum=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> otherNum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((str[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;z&#x27;</span>)||(str[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">                charNum++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(str[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">                numberNum++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                spaceNum++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                otherNum++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;英文字母：&quot;</span>+charNum);</span><br><span class="line">        System.out.println(<span class="string">&quot;空格：&quot;</span>+spaceNum);</span><br><span class="line">        System.out.println(<span class="string">&quot;数字：&quot;</span>+numberNum);</span><br><span class="line">        System.out.println(<span class="string">&quot;其他字符：&quot;</span>+otherNum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-求s-x3D-a-aa-aaa-aaaa-aa…a的值"><a href="#8-求s-x3D-a-aa-aaa-aaaa-aa…a的值" class="headerlink" title="8.求s&#x3D;a+aa+aaa+aaaa+aa…a的值"></a>8.求s&#x3D;a+aa+aaa+aaaa+aa…a的值</h3><p>题目：求s&#x3D;a+aa+aaa+aaaa+aa…a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加有键盘控制。<br>程序分析：关键是计算出每一项的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">       <span class="type">int</span> a=<span class="number">2</span>;</span><br><span class="line">       <span class="type">int</span> s=a;</span><br><span class="line">       System.out.println(<span class="string">&quot;请问有几个数相加？&quot;</span>);</span><br><span class="line">       <span class="type">int</span> num= reader.nextInt();</span><br><span class="line">       <span class="type">int</span> item= <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;num;i++)&#123;</span><br><span class="line">           item+=Math.pow(<span class="number">10</span>,i);</span><br><span class="line">           s+=a*item;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-找出1000以内的所有完数"><a href="#9-找出1000以内的所有完数" class="headerlink" title="9.找出1000以内的所有完数"></a>9.找出1000以内的所有完数</h3><p>题目：一个数如果恰好等于它的因子之和，这个数就称为 “完数 “。例如6&#x3D;1＋2＋3.编程找出1000以内的所有完数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="type">int</span> sum,num;</span><br><span class="line">      <span class="keyword">for</span>( num=<span class="number">1</span>;num&lt;=<span class="number">1000</span>;num++)&#123;</span><br><span class="line">          sum=<span class="number">0</span>;<span class="comment">//每次判断一个数都要将sum初始化为0</span></span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;num;i++)&#123;</span><br><span class="line">              <span class="keyword">if</span>(num%i==<span class="number">0</span>)&#123;<span class="comment">//i能被num整除，说明i是num的因子</span></span><br><span class="line">                  sum+=i;<span class="comment">//累加因子</span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(sum==num)</span><br><span class="line">              System.out.println(num);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：6，28，496</p><h3 id="10-求第10次反弹多高"><a href="#10-求第10次反弹多高" class="headerlink" title="10.求第10次反弹多高"></a>10.求第10次反弹多高</h3><p>题目：一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> height=<span class="number">100.0</span>;</span><br><span class="line">        <span class="type">double</span> sum=height;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">            height/=<span class="number">2</span>;</span><br><span class="line">            sum+=height*<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;一共经过了&quot;</span>+sum+<span class="string">&quot;米,第十次反弹高度为&quot;</span>+height/<span class="number">2</span>+<span class="string">&quot;米&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：一共经过了299.609375米,第十次反弹高度为0.09765625米</p><blockquote><p>如有疑惑可看下图<br><img src="/assets/50.10.jpg" alt="第10题图解"></p></blockquote><h3 id="11-互不相同且无重复数字的三位数"><a href="#11-互不相同且无重复数字的三位数" class="headerlink" title="11.互不相同且无重复数字的三位数"></a>11.互不相同且无重复数字的三位数</h3><p>题目：有1、2、3、4个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？<br>程序分析：可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去掉不满足条件的排列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> array[]=<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">64</span>];</span><br><span class="line">       <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">       <span class="comment">//先组成互不相同的数字</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;<span class="comment">//i是百位</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)&#123;<span class="comment">//j是十位</span></span><br><span class="line">               <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">4</span>;k++)&#123;<span class="comment">//k是个位</span></span><br><span class="line">                   <span class="keyword">if</span>(i!=j&amp;&amp;i!=k&amp;&amp;j!=k)&#123;<span class="comment">//再留下无重复数字的三位数</span></span><br><span class="line">                       array[num]=i*<span class="number">100</span>+j*<span class="number">10</span>+k;</span><br><span class="line">                       System.out.print(array[num]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                       <span class="keyword">if</span>((num+<span class="number">1</span>)%<span class="number">6</span>==<span class="number">0</span>)  <span class="comment">//这一步只是为了结果看起来好看</span></span><br><span class="line">                           System.out.println();</span><br><span class="line">                       num++;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">     System.out.println(<span class="string">&quot;这样的三位数有&quot;</span>+num+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C11.jpg" alt="运行结果11"></p><h3 id="12-企业发放的奖金根据利润提成"><a href="#12-企业发放的奖金根据利润提成" class="headerlink" title="12.企业发放的奖金根据利润提成"></a>12.企业发放的奖金根据利润提成</h3><p>题目：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成 3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？<br>1.程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> I;<span class="comment">//利润,单位：万元</span></span><br><span class="line">        <span class="type">long</span> reward;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入利润&quot;</span>);</span><br><span class="line">       I= reader.nextInt();</span><br><span class="line">       <span class="keyword">if</span>(I&lt;=<span class="number">10</span>) reward=I*<span class="number">1000</span>;<span class="comment">//0.1*10000</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(I&gt;<span class="number">10</span>&amp;&amp;I&lt;=<span class="number">20</span>)reward=<span class="number">10</span>*<span class="number">1000</span>+(I-<span class="number">10</span>)*<span class="number">750</span>;<span class="comment">//0.075*10000</span></span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(I&gt;<span class="number">20</span>&amp;&amp;I&lt;=<span class="number">40</span>)reward=<span class="number">10</span>*<span class="number">1000</span>+<span class="number">10</span>*<span class="number">750</span>+(I-<span class="number">20</span>)*<span class="number">500</span>;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(I&gt;<span class="number">40</span>&amp;&amp;I&lt;=<span class="number">60</span>)reward=<span class="number">10</span>*<span class="number">1000</span>+<span class="number">10</span>*<span class="number">750</span>+<span class="number">10</span>*<span class="number">500</span>+(I-<span class="number">40</span>)*<span class="number">300</span>;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(I&gt;<span class="number">60</span>&amp;&amp;I&lt;=<span class="number">100</span>)reward=<span class="number">10</span>*<span class="number">1000</span>+<span class="number">10</span>*<span class="number">750</span>+<span class="number">10</span>*<span class="number">500</span>+<span class="number">10</span>*<span class="number">300</span>+(I-<span class="number">60</span>)*<span class="number">150</span>;</span><br><span class="line">       <span class="keyword">else</span> reward=<span class="number">10</span>*<span class="number">1000</span>+<span class="number">10</span>*<span class="number">750</span>+<span class="number">10</span>*<span class="number">500</span>+<span class="number">10</span>*<span class="number">300</span>+<span class="number">10</span>*<span class="number">150</span>+(I-<span class="number">100</span>)*<span class="number">100</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;应发放的奖金总数为&quot;</span>+reward+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C12.jpg" alt="运行结果12"></p><h3 id="13-猜猜这个数是多少"><a href="#13-猜猜这个数是多少" class="headerlink" title="13.猜猜这个数是多少"></a>13.猜猜这个数是多少</h3><p>题目：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？<br>1.程序分析：在10万以内判断，先将该数加上100后再开方，再将该数加上268后再开方，如果开方后的结果满足如下条件，即是结果。<br>解这道题都需要先好好分析一下它的数学逻辑，根据题目可以得出<br>n + 100 &#x3D; x2 —————–①<br>n + 100 +168 &#x3D; y2———-②<br>（x2+168&#x3D; y2，x,y都有正负解，选取正值，即x&gt;&#x3D;0,y&gt;&#x3D;0，因为我们求的是n的取值范围）<br>可以化简为<br>y2 -x2 &#x3D;168 ———-( x &lt;y)<br>(y-x)(y+x) &#x3D;168<br>y-x &gt; 0且应该为整数，因此可以推出 y+x&lt;&#x3D;168, y&lt;&#x3D;168———③<br>将③带入②（因为带入①对应的n值更小）可以得出 n&lt;&#x3D; 1682-100-168&#x3D;27956<br>因为这个数加上100是一个完全平方数（大于零）<br>所以所求数字必须大于等于-100<br>由上可以得出<br>1、n的下限为-100<br>2、n的上限为27956<br>知道n的范围，就可以使用math函数辅助来遍历对应的值<br>令 x &#x3D; 100+n开根然后取整 同理y &#x3D; 268+n 开根取整<br>然后把 x、y 带入①②中验证等式是否成立，若两个等式均成立，则输出对应的结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=-<span class="number">100</span>;i&lt;=<span class="number">27956</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(Math.sqrt(i+<span class="number">100</span>)-(<span class="type">int</span>)Math.sqrt(i+<span class="number">100</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">               <span class="keyword">if</span>(Math.sqrt(i+<span class="number">268</span>)-(<span class="type">int</span>)Math.sqrt(i+<span class="number">268</span>)==<span class="number">0</span>)</span><br><span class="line">                   System.out.println(i);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C13.jpg" alt="运行结果13"></p><h3 id="14-判断这一天是这一年的第几天"><a href="#14-判断这一天是这一年的第几天" class="headerlink" title="14.判断这一天是这一年的第几天"></a>14.判断这一天是这一年的第几天</h3><p>题目：输入某年某月某日，判断这一天是这一年的第几天？<br>1.程序分析：以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> year;</span><br><span class="line">       <span class="type">int</span> month;</span><br><span class="line">       <span class="type">int</span> day;</span><br><span class="line">       <span class="type">int</span> dayNum=<span class="number">0</span>;</span><br><span class="line">       Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入年&quot;</span>);</span><br><span class="line">       year= reader.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入月&quot;</span>);</span><br><span class="line">       month= reader.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入日&quot;</span>);</span><br><span class="line">       day= reader.nextInt();</span><br><span class="line">       <span class="keyword">if</span>(year&lt;<span class="number">0</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;请重新输入年&quot;</span>);</span><br><span class="line">           year= reader.nextInt();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(month&lt;<span class="number">1</span>||month&gt;<span class="number">12</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;请重新输入月&quot;</span>);</span><br><span class="line">           month= reader.nextInt();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(day&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">           <span class="keyword">if</span>((year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)||(year%<span class="number">400</span>==<span class="number">0</span>))&#123;<span class="comment">//如果这一年是闰年，四年一闰，百年不闰，四百年一闰</span></span><br><span class="line">               <span class="keyword">switch</span>(month)&#123;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum+=day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">29</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">29</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;<span class="comment">//平年情况</span></span><br><span class="line">               <span class="keyword">switch</span>(month)&#123;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum+=day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">28</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                       <span class="keyword">if</span>(day&gt;<span class="number">31</span>)&#123;</span><br><span class="line">                           System.out.println(<span class="string">&quot;请重新输入天&quot;</span>);</span><br><span class="line">                           day= reader.nextInt();</span><br><span class="line">                       &#125;</span><br><span class="line">                       dayNum=<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">31</span>+<span class="number">30</span>+<span class="number">31</span>+<span class="number">30</span>+day;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           System.out.println(<span class="string">&quot;请重新输入天数&quot;</span>);</span><br><span class="line">       System.out.println(year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+day+<span class="string">&quot;日是&quot;</span>+year+<span class="string">&quot;年的第 &quot;</span>+dayNum+<span class="string">&quot; 天&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C14.jpg" alt="运行结果14"></p><h3 id="15-请把这三个数由小到大输出"><a href="#15-请把这三个数由小到大输出" class="headerlink" title="15.请把这三个数由小到大输出"></a>15.请把这三个数由小到大输出</h3><p>题目：输入三个整数x,y,z，请把这三个数由小到大输出。<br>1.程序分析：我们想办法把最小的数放到x上，先将x与y进行比较，如果x&gt; y则将x与y的值进行交换，然后再用x与z进行比较，如果x&gt; z则将x与z的值进行交换，这样能使x最小。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;输入三个数X,Y,Z&quot;</span>);</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;输入X&quot;</span>);</span><br><span class="line">        <span class="type">int</span> X= reader.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;输入Y&quot;</span>);</span><br><span class="line">        <span class="type">int</span> Y= reader.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;输入Z&quot;</span>);</span><br><span class="line">        <span class="type">int</span> Z= reader.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(X&gt;Y)&#123;</span><br><span class="line">            <span class="type">int</span> temp=X;</span><br><span class="line">            X=Y;</span><br><span class="line">            Y=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(X&gt;Z)&#123;</span><br><span class="line">            <span class="type">int</span> temp=X;</span><br><span class="line">            X=Z;</span><br><span class="line">            Z=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(Y&gt;Z)&#123;</span><br><span class="line">            <span class="type">int</span> temp=Y;</span><br><span class="line">            Y=Z;</span><br><span class="line">            Z=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;从小到大输出为： &quot;</span>+X  +<span class="string">&quot; &quot;</span>+Y+<span class="string">&quot; &quot;</span>+Z );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C15.jpg" alt="运行结果15"></p><h3 id="16-输出9-9口诀"><a href="#16-输出9-9口诀" class="headerlink" title="16. 输出9*9口诀"></a>16. 输出9*9口诀</h3><p>程序分析：分行与列考虑，共9行9列，i控制行，j控制列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;<span class="comment">//i控制行</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;<span class="comment">//j控制列</span></span><br><span class="line">           System.out.print(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C16.jpg" alt="运行结果16"></p><h3 id="17-猴子吃桃问题"><a href="#17-猴子吃桃问题" class="headerlink" title="17.猴子吃桃问题"></a>17.猴子吃桃问题</h3><p>题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。<br>1.程序分析：采取逆向思维的方法，从后往前推断。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     <span class="type">int</span> num=<span class="number">1</span>;<span class="comment">//第10天剩下一个</span></span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">         num=(num+<span class="number">1</span>)*<span class="number">2</span>;</span><br><span class="line">         System.out.println(<span class="string">&quot;第&quot;</span>+(<span class="number">10</span>-i)+<span class="string">&quot;天剩下&quot;</span>+num+<span class="string">&quot;个桃&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     System.out.println(<span class="string">&quot;所以第1天一共摘了&quot;</span>+num+<span class="string">&quot;个桃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C17.jpg" alt="运行结果17"></p><h3 id="18-找出三队赛手的名单"><a href="#18-找出三队赛手的名单" class="headerlink" title="18.找出三队赛手的名单"></a>18.找出三队赛手的名单</h3><p>题目：两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。<br>思路:<br>循环依次比较，两两比较，判断参赛队员是否重复，因此需要两个if 在循环中间判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">char</span> a,b,c;<span class="comment">//变量a,b,c分别用来存储甲队a,b,c三人的对手</span></span><br><span class="line">       <span class="keyword">for</span>(a=<span class="string">&#x27;x&#x27;</span>;a&lt;=<span class="string">&#x27;z&#x27;</span>;a++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(b=<span class="string">&#x27;x&#x27;</span>;b&lt;<span class="string">&#x27;z&#x27;</span>;b++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(a!=b)&#123;<span class="comment">//保证a和b的对手不同</span></span><br><span class="line">                   <span class="keyword">for</span>(c=<span class="string">&#x27;x&#x27;</span>;c&lt;=<span class="string">&#x27;z&#x27;</span>;c++)&#123;</span><br><span class="line">                       <span class="keyword">if</span>(a!=c&amp;&amp;b!=c)&#123;<span class="comment">//保证b和c,a和c的对手不同</span></span><br><span class="line">                           <span class="keyword">if</span>(a!=<span class="string">&#x27;x&#x27;</span>&amp;&amp;c!=<span class="string">&#x27;x&#x27;</span>&amp;&amp;c!=<span class="string">&#x27;z&#x27;</span>)&#123;<span class="comment">//a说他不和x比，c说他不和x,z比</span></span><br><span class="line">                               System.out.printf(<span class="string">&quot;a对%c,\nb对%c,\nc对%c.\n&quot;</span>,a,b,c);</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C18.jpg" alt="运行结果18"></p><h3 id="19-打印菱形"><a href="#19-打印菱形" class="headerlink" title="19.打印菱形"></a>19.打印菱形</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">7</span>;j++)&#123;</span><br><span class="line">             <span class="keyword">if</span>((i+j)&gt;=<span class="number">5</span>&amp;&amp;(i+j)&lt;=<span class="number">2</span>*i+<span class="number">3</span>)&#123;</span><br><span class="line">                 System.out.print(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span> System.out.print(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">7</span>;j++)&#123;</span><br><span class="line">               <span class="keyword">if</span>((j+i)&gt;=<span class="number">2</span>*i+<span class="number">1</span>&amp;&amp;(j+i)&lt;=<span class="number">7</span>)</span><br><span class="line">                   System.out.print(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                   System.out.print(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>关键是找出行和列i和j的关系<br><img src="/assets/50.19.jpg" alt="第19题图解"></p></blockquote><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C19.jpg" alt="运行结果19"></p><h3 id="20-求出这个数列的前20项之和"><a href="#20-求出这个数列的前20项之和" class="headerlink" title="20.求出这个数列的前20项之和"></a>20.求出这个数列的前20项之和</h3><p>题目：有一分数序列：2&#x2F;1，3&#x2F;2，5&#x2F;3，8&#x2F;5，13&#x2F;8，21&#x2F;13…求出这个数列的前20项之和。<br>1.程序分析：请抓住分子与分母的变化规律。<br>通过观察，不难发现后一项的分子是前一项的分子分母之和，而后一项的分母是前一项的分子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> zi=<span class="number">2</span>;</span><br><span class="line">       <span class="type">int</span> mu=<span class="number">1</span>;</span><br><span class="line">       <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;i++)&#123;</span><br><span class="line">           sum+=zi*<span class="number">1.0</span>/mu;</span><br><span class="line">           <span class="type">int</span> temp=zi;</span><br><span class="line">           zi=zi+mu;</span><br><span class="line">           mu=temp;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.print(<span class="string">&quot;这个数列的前20项之和是&quot;</span>+sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C20.jpg" alt="运行结果20"></p><h3 id="21-求1-2-3-…-20-的和"><a href="#21-求1-2-3-…-20-的和" class="headerlink" title="21.求1+2!+3!+…+20!的和"></a>21.求1+2!+3!+…+20!的和</h3><p>题目：求1+2!+3!+…+20!的和<br>1.程序分析：此程序只是把累加变成了累乘。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">long</span> item=<span class="number">1</span>;</span><br><span class="line">        <span class="type">long</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;i++)&#123;</span><br><span class="line">            item*=i;</span><br><span class="line">            sum+=item;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C21.jpg" alt="运行结果21"></p><h3 id="22-利用递归方法求5"><a href="#22-利用递归方法求5" class="headerlink" title="22.利用递归方法求5!"></a>22.利用递归方法求5!</h3><p>题目：利用递归方法求5!。<br>1.程序分析：递归公式：fn&#x3D;fn_1*4!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;5! = &quot;</span>+recall(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="type">long</span> <span class="title function_">recall</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> i*recall(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：120</p><blockquote><p><img src="/assets/50.22%E9%80%92%E5%BD%92%E7%90%86%E8%A7%A3.jpg" alt="递归理解1"><br><img src="/assets/50.22%E9%80%92%E5%BD%92%E7%90%86%E8%A7%A3(1).jpg" alt="递归理解2"></p></blockquote><h3 id="23-请问第五个人多大"><a href="#23-请问第五个人多大" class="headerlink" title="23.请问第五个人多大"></a>23.请问第五个人多大</h3><p>题目：有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？<br>1.程序分析：利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;第五个人的岁数是 &quot;</span>+recall(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">recall</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">       <span class="type">int</span> age=<span class="number">10</span>;</span><br><span class="line">       <span class="keyword">if</span>(i==<span class="number">1</span>)<span class="keyword">return</span> age;</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">2</span>+recall(i-<span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：第五个人的岁数是 18</p><h3 id="24-给一个不多于5位的正整数"><a href="#24-给一个不多于5位的正整数" class="headerlink" title="24.给一个不多于5位的正整数"></a>24.给一个不多于5位的正整数</h3><p>题目：给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">     <span class="type">long</span>  num=reader.nextLong();</span><br><span class="line">      <span class="keyword">if</span>(num&lt;=<span class="number">0</span>||num&gt;=<span class="number">10000</span>)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line">          num=reader.nextLong();</span><br><span class="line">      &#125;</span><br><span class="line">      String s=Long.toString(num);</span><br><span class="line">      StringBuffer s1=<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);</span><br><span class="line">      System.out.println(<span class="string">&quot;这是一个&quot;</span>+s.length()+<span class="string">&quot;位数&quot;</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;逆序打印出的数字是： &quot;</span>+s1.reverse());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C24.jpg" alt="运行结果24"></p><h3 id="25-判断回文数"><a href="#25-判断回文数" class="headerlink" title="25.判断回文数"></a>25.判断回文数</h3><p>题目：一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">     System.out.println(<span class="string">&quot;请输入一个五位数&quot;</span>);</span><br><span class="line">     <span class="type">long</span>  num=reader.nextLong();</span><br><span class="line">      <span class="comment">/*if(num&lt;10000||num&gt;=100000)&#123;</span></span><br><span class="line"><span class="comment">          System.out.println(&quot;请重新输入&quot;);</span></span><br><span class="line"><span class="comment">          num=reader.nextLong();</span></span><br><span class="line"><span class="comment">      &#125;*/</span></span><br><span class="line">      String s=Long.toString(num);</span><br><span class="line">      StringBuffer s1=<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(s);</span><br><span class="line">      StringBuffer s2=s1.reverse();</span><br><span class="line">      String s3= s2.toString();</span><br><span class="line">      <span class="keyword">if</span>(s3==s)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;这是一个回文数&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">          System.out.println(<span class="string">&quot;这不是一个回文数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C25.jpg" alt="运行结果25"></p><h3 id="26-请输入星期几的第一个字母来判断一下是星期几"><a href="#26-请输入星期几的第一个字母来判断一下是星期几" class="headerlink" title="26.请输入星期几的第一个字母来判断一下是星期几"></a>26.请输入星期几的第一个字母来判断一下是星期几</h3><p> 题目：请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。<br>1.程序分析：用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">     System.out.println(<span class="string">&quot;请输入第一个字母&quot;</span>);</span><br><span class="line">     String s= reader.next();</span><br><span class="line">     <span class="type">char</span> a=s.charAt(<span class="number">0</span>);</span><br><span class="line">     <span class="keyword">switch</span>(a)&#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">             System.out.println(<span class="string">&quot;monday&quot;</span>);</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;t&#x27;</span>:</span><br><span class="line">             System.out.println(<span class="string">&quot;请输入第二个字母&quot;</span>);</span><br><span class="line">             String s1= reader.next();</span><br><span class="line">             <span class="keyword">if</span>(s1.charAt(<span class="number">0</span>)==<span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;tuesday&quot;</span>);</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span>(s1.charAt(<span class="number">0</span>)==<span class="string">&#x27;h&#x27;</span>)&#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;thursday&quot;</span>);</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">             System.out.println(<span class="string">&quot;wednesday&quot;</span>);</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>:</span><br><span class="line">             System.out.println(<span class="string">&quot;friday&quot;</span>);</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">             System.out.println(<span class="string">&quot;请输入第二个字母&quot;</span>);</span><br><span class="line">             String s2= reader.next();</span><br><span class="line">             <span class="keyword">if</span>(s2.charAt(<span class="number">0</span>)==<span class="string">&#x27;a&#x27;</span>)&#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;saturday&quot;</span>);</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span>(s2.charAt(<span class="number">0</span>)==<span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;sunday&quot;</span>);</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C26.jpg" alt="运行结果26"></p><h3 id="27-求100之内的素数"><a href="#27-求100之内的素数" class="headerlink" title="27.求100之内的素数"></a>27.求100之内的素数</h3> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> array[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">101</span>];</span><br><span class="line">        <span class="type">boolean</span> is_prime[]=<span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">101</span>];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">       array[i]=i;</span><br><span class="line">       is_prime[i]=<span class="literal">true</span>;<span class="comment">//先假设每个数都是素数</span></span><br><span class="line">    &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=i*i;j&lt;=<span class="number">100</span>;j+=i)&#123;<span class="comment">//相当于j=(i+1)*i</span></span><br><span class="line">               is_prime[j]=<span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(is_prime[i])</span><br><span class="line">               System.out.println(array[i]);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C27.jpg" alt="运行结果27"></p><h3 id="28-对10个数进行排序"><a href="#28-对10个数进行排序" class="headerlink" title="28.对10个数进行排序"></a>28.对10个数进行排序</h3><p>题目：对10个数进行排序<br>1.程序分析：可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换，下次类推，即用第二个元素与后8个进行比较，并进行交换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> array[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入十个数字&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            array[i]= reader.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">            <span class="type">int</span> index=findMin(i,array);</span><br><span class="line">            <span class="keyword">if</span>(array[i]&gt;array[index])&#123;</span><br><span class="line">                <span class="type">int</span> temp=array[i];</span><br><span class="line">                array[i]=array[index];</span><br><span class="line">                array[index]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;按升序排好的顺序为:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            System.out.print(array[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> array [])</span>&#123;</span><br><span class="line">        <span class="type">int</span> min=array[i+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> index=i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span> ;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(min&gt;array[j])&#123;</span><br><span class="line">                min=array[j];</span><br><span class="line">                index=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C28.jpg" alt="运行结果28"></p><h3 id="29-求一个3-3矩阵对角线元素之和"><a href="#29-求一个3-3矩阵对角线元素之和" class="headerlink" title="29.求一个3*3矩阵对角线元素之和"></a>29.求一个3*3矩阵对角线元素之和</h3><p>题目：求一个3*3矩阵对角线元素之和<br>1.程序分析：利用双重for循环控制输入二维数组，再将a累加后输出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">      <span class="type">int</span> array[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">        <span class="type">int</span> sum1=<span class="number">0</span>;<span class="comment">//主对角线</span></span><br><span class="line">        <span class="type">int</span> sum2=<span class="number">0</span>;<span class="comment">//副对角线</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入这个矩阵：&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;array.length;i++)&#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;array[i].length;j++)&#123;</span><br><span class="line">              array[i][j]= reader.nextInt();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;这个矩阵为：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;array.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;array[i].length;j++)&#123;</span><br><span class="line">                System.out.print(array[i][j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(i==j)sum1+=array[i][j];</span><br><span class="line">                <span class="keyword">if</span>(i+j==<span class="number">2</span>)sum2+=array[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      System.out.println(<span class="string">&quot;主对角线之和为 &quot;</span>+sum1);</span><br><span class="line">        System.out.println(<span class="string">&quot;副对角线之和为 &quot;</span>+sum2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C29.jpg" alt="运行结果29"></p><h3 id="30-按原来的规律将输入数插入数组中"><a href="#30-按原来的规律将输入数插入数组中" class="headerlink" title="30.按原来的规律将输入数插入数组中"></a>30.按原来的规律将输入数插入数组中</h3><p>题目：有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。</p><ol><li>程序分析：首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> array[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">222</span>, <span class="number">121</span>, <span class="number">341</span>, <span class="number">321</span>, <span class="number">3212</span>, <span class="number">1231</span>, <span class="number">322</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> array.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;<span class="comment">//选择排序法</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[j] &lt; array[i]) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> array[j];</span><br><span class="line">                    array[j] = array[i];</span><br><span class="line">                    array[i] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;排好后的数组为&quot;</span>);</span><br><span class="line">        System.out.println(Arrays.toString(array));</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个数字&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> reader.nextInt();</span><br><span class="line">        <span class="type">int</span> array1[] = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a &lt; array[i]) &#123;<span class="comment">//若这个数a小于原数组中的数array[i]</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> array[i];</span><br><span class="line">                array1[i] = a;<span class="comment">//新数组中下标为i这个数就是新插入的数</span></span><br><span class="line">                a = temp;<span class="comment">//原数组中这个数又当作被插入的数，依次重复，直到最后原数组中最后一个数当作插入数，放在数组最后</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                array1[i] = array[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        array1[array1.length-<span class="number">1</span>]=a;</span><br><span class="line">        System.out.println(<span class="string">&quot;插入数字排好后的数组为：&quot;</span>);</span><br><span class="line">        System.out.println(Arrays.toString(array1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C30.jpg" alt="运行结果30"></li></ol><h3 id="31-将一个数组逆序输出"><a href="#31-将一个数组逆序输出" class="headerlink" title="31.将一个数组逆序输出"></a>31.将一个数组逆序输出</h3><p>题目：将一个数组逆序输出。<br>1.程序分析：用第一个与最后一个交换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> array[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">       <span class="type">int</span> n= array.length;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)&#123;<span class="comment">//n是奇数或者偶数都不影响</span></span><br><span class="line">           <span class="type">int</span> temp=array[i];</span><br><span class="line">           array[i]=array[n-i-<span class="number">1</span>];</span><br><span class="line">           array[n-i-<span class="number">1</span>]=temp;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(Arrays.toString(array));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C31.jpg" alt="运行结果31"></p><h3 id="33-打印出杨辉三角形"><a href="#33-打印出杨辉三角形" class="headerlink" title="33.打印出杨辉三角形"></a>33.打印出杨辉三角形</h3><p>题目：打印出杨辉三角形（要求打印出10行如下图）<br>1.程序分析：<br>1<br>1 1<br>1 2 1<br>1 3 3 1<br>1 4 6 4 1<br>1 5 10 10 5 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> arr[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line">       arr[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line">                   arr[i][j]=arr[i-<span class="number">1</span>][j];</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span>&#123;</span><br><span class="line">                   arr[i][j]=arr[i-<span class="number">1</span>][j-<span class="number">1</span>]+arr[i-<span class="number">1</span>][j];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">               System.out.print(arr[i][j]+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C33.jpg" alt="运行结果33"></p><h3 id="35-最大的与第一个元素交换，最小的与最后一个元素交换"><a href="#35-最大的与第一个元素交换，最小的与最后一个元素交换" class="headerlink" title="35.最大的与第一个元素交换，最小的与最后一个元素交换"></a>35.最大的与第一个元素交换，最小的与最后一个元素交换</h3><p>题目：输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> arr[]=&#123;<span class="number">12</span>,<span class="number">332</span>,<span class="number">133</span>,<span class="number">44</span>,<span class="number">22</span>,<span class="number">31</span>,<span class="number">412</span>,<span class="number">322</span>,<span class="number">446</span>&#125;;</span><br><span class="line">       <span class="type">int</span> n= arr.length;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(arr[n-<span class="number">1</span>]&gt;arr[i])&#123;</span><br><span class="line">               <span class="type">int</span> temp=arr[i];</span><br><span class="line">               arr[i]=arr[n-<span class="number">1</span>];</span><br><span class="line">               arr[n-<span class="number">1</span>]=temp;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(arr[<span class="number">0</span>]&lt;arr[i])&#123;</span><br><span class="line">               <span class="type">int</span> temp=arr[i];</span><br><span class="line">               arr[i]=arr[<span class="number">0</span>];</span><br><span class="line">               arr[<span class="number">0</span>]=temp;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">&quot;交换元素后的数组为：&quot;</span>);</span><br><span class="line">       System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C35.jpg" alt="运行结果35"></p><h3 id="36-使其前面各数顺序向后移m个位置"><a href="#36-使其前面各数顺序向后移m个位置" class="headerlink" title="36.使其前面各数顺序向后移m个位置"></a>36.使其前面各数顺序向后移m个位置</h3><p>题目：有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span> arr[]=&#123;<span class="number">12</span>,<span class="number">332</span>,<span class="number">133</span>,<span class="number">44</span>,<span class="number">22</span>,<span class="number">31</span>,<span class="number">412</span>,<span class="number">322</span>,<span class="number">446</span>&#125;;</span><br><span class="line">     <span class="type">int</span> n=arr.length;</span><br><span class="line">     <span class="type">int</span> arr1[]=<span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">     System.out.println(<span class="string">&quot;请输入m&quot;</span>);</span><br><span class="line">     <span class="type">int</span> m= reader.nextInt();</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">         <span class="keyword">if</span>(i&gt;=m)&#123;</span><br><span class="line">             arr1[i]=arr[i-m];</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span>(i&lt;m)&#123;</span><br><span class="line">             arr1[i]=arr[n-(m-i)];</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     System.out.println(<span class="string">&quot;原数组：&quot;</span>);</span><br><span class="line">     System.out.println(Arrays.toString(arr));</span><br><span class="line">     System.out.println(<span class="string">&quot;转换后的数组&quot;</span>);</span><br><span class="line">     System.out.println(Arrays.toString(arr1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C36.jpg" alt="运行结果36"></p><h3 id="37-问最后留下的是原来第几号的那位"><a href="#37-问最后留下的是原来第几号的那位" class="headerlink" title="37.问最后留下的是原来第几号的那位"></a>37.问最后留下的是原来第几号的那位</h3><p>题目：有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;请问几个人围成一圈？&quot;</span>);</span><br><span class="line">      Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">      <span class="type">int</span> n= reader.nextInt();</span><br><span class="line">      <span class="type">int</span> arr[]=<span class="keyword">new</span> <span class="title class_">int</span> [n];</span><br><span class="line">      <span class="type">boolean</span> three[]=<span class="keyword">new</span> <span class="title class_">boolean</span>[n];</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">          arr[i]=i+<span class="number">1</span>;<span class="comment">//编号</span></span><br><span class="line">          three[i]=<span class="literal">true</span>;<span class="comment">//标记</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="type">int</span> temp=n;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(n&gt;<span class="number">1</span>)&#123;<span class="comment">//n代表人数，当人数剩下1个时，推出循环</span></span><br><span class="line">          <span class="keyword">if</span>(three[i])&#123;<span class="comment">//若没数到三，则不退出，继续数</span></span><br><span class="line">              count++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(count==<span class="number">3</span>)&#123;</span><br><span class="line">              three[i]=<span class="literal">false</span>;<span class="comment">//若数到3，则退出</span></span><br><span class="line">              n--;<span class="comment">//人数减一</span></span><br><span class="line">              count=<span class="number">0</span>;<span class="comment">//从1开始数</span></span><br><span class="line">          &#125;</span><br><span class="line">          i++;</span><br><span class="line">          <span class="keyword">if</span>(i==temp)&#123;<span class="comment">//若轮完一圈，再接着第二圈，让i置0</span></span><br><span class="line">              i=<span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;temp;j++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(three[j])&#123;</span><br><span class="line">              System.out.println(<span class="string">&quot;最后留下来的是原来的第&quot;</span>+arr[j]+<span class="string">&quot;号&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C37.jpg" alt="运行结果37"><br>(这题我卡了好久😭)</p><h3 id="38-写一个函数，求一个字符串的长度"><a href="#38-写一个函数，求一个字符串的长度" class="headerlink" title="38.写一个函数，求一个字符串的长度"></a>38.写一个函数，求一个字符串的长度</h3><p>题目：写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">     System.out.println(<span class="string">&quot;请输入一行字符串&quot;</span>);</span><br><span class="line">     String s= reader.nextLine();</span><br><span class="line">     System.out.println(<span class="string">&quot;字符串的长度是&quot;</span>+count(s));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">count</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s.length();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C38.jpg" alt="运行结果38"></p><h3 id="39-编写一个函数，输入n为偶数时，调用函数求1-x2F-2-1-x2F-4-…-1-x2F-n"><a href="#39-编写一个函数，输入n为偶数时，调用函数求1-x2F-2-1-x2F-4-…-1-x2F-n" class="headerlink" title="39.编写一个函数，输入n为偶数时，调用函数求1&#x2F;2+1&#x2F;4+…+1&#x2F;n"></a>39.编写一个函数，输入n为偶数时，调用函数求1&#x2F;2+1&#x2F;4+…+1&#x2F;n</h3><p>题目：编写一个函数，输入n为偶数时，调用函数求1&#x2F;2+1&#x2F;4+…+1&#x2F;n,当输入n为奇数时，调用函数1&#x2F;1+1&#x2F;3+…+1&#x2F;n(利用指针函数)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">     System.out.println(<span class="string">&quot;请输入一个整数&quot;</span>);</span><br><span class="line">     <span class="type">int</span> n= reader.nextInt();</span><br><span class="line">     <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;1/2+1/4+...+1/n= &quot;</span>+sum1(n));</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;1/2+1/4+...+1/n= &quot;</span>+sum2(n));</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sum1</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            sum+=<span class="number">1</span>*<span class="number">1.0</span>/i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sum2</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            sum+=<span class="number">1</span>*<span class="number">1.0</span>/i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C39.jpg" alt="运行结果39"></p><h3 id="41-猴子分桃"><a href="#41-猴子分桃" class="headerlink" title="41.猴子分桃"></a>41.猴子分桃</h3><p>题目：海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子凭据分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">       sum=sum*<span class="number">5</span>+<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   System.out.println(<span class="string">&quot;海滩上原来最少有&quot;</span>+sum+<span class="string">&quot;个桃子&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C41.jpg" alt="运行结果41"></p><h3 id="42-求-代表的两位数，及809-后的结果10"><a href="#42-求-代表的两位数，及809-后的结果10" class="headerlink" title="42.求??代表的两位数，及809*??后的结果10"></a>42.求??代表的两位数，及809*??后的结果10</h3><p>题目：809*??&#x3D;800*??+9*??+1 其中??代表的两位数,8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">10</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(<span class="number">8</span>*i&gt;<span class="number">9</span>&amp;&amp;<span class="number">8</span>*i&lt;<span class="number">100</span>&amp;&amp;<span class="number">9</span>*i&gt;<span class="number">99</span>&amp;&amp;<span class="number">9</span>*i&lt;<span class="number">1000</span>)&#123;</span><br><span class="line">              <span class="keyword">if</span>(<span class="number">809</span>*i==<span class="number">800</span>*i+<span class="number">9</span>*i+<span class="number">1</span>)&#123;</span><br><span class="line">                  System.out.println(<span class="string">&quot;??代表的两位数是&quot;</span>+i);</span><br><span class="line">                  System.out.println(<span class="string">&quot;809*??= &quot;</span>+i*<span class="number">809</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(i!=<span class="number">100</span>)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;809* &quot;</span>+ i +<span class="string">&quot; =800*&quot;</span>+i+<span class="string">&quot; +9*&quot;</span>+i+<span class="string">&quot;+1&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> System.out.println(<span class="string">&quot;无解&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C42.jpg" alt="运行结果42"></p><h3 id="43-求0—7所能组成的奇数个数"><a href="#43-求0—7所能组成的奇数个数" class="headerlink" title="43.求0—7所能组成的奇数个数"></a>43.求0—7所能组成的奇数个数</h3><p>题目：求0—7所能组成的奇数个数。<br>程序分析：<br>该问题是一个排列组合问题，当一个数的个位是奇数时，这个数就是奇数，不管前面几位是什么数字，首位数字不为0；从这个奇数是1位到8位开始统计奇数的个数：<br>1.一位数：只能是1、3、5、7，奇数个数为4；<br>2.两位数：首位不为零，个位只能是1、3、5、7，奇数个数为4*7；<br>3.三位数：4 * 8 * 7；<br>……<br>8.八位数：4 * 8 * 8 * 8 * 8 * 8 * 8 * 7（依次从最后一位到第一位）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">                sum+=<span class="number">4</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                    sum+=<span class="number">7</span>*Math.pow(<span class="number">8</span>,(i-<span class="number">2</span>))*<span class="number">4</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;能组成奇数的个数是 &quot;</span>+sum+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C43.jpg" alt="运行结果43"></p><h3 id="44-证明一个偶数总能表示为两个素数之和。"><a href="#44-证明一个偶数总能表示为两个素数之和。" class="headerlink" title="44.证明一个偶数总能表示为两个素数之和。"></a>44.证明一个偶数总能表示为两个素数之和。</h3><p>题目：证明一个偶数总能表示为两个素数之和。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个偶数&quot;</span>);</span><br><span class="line">        Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> even= reader.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(even%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line">            even= reader.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">      getPrime(even);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getPrime</span><span class="params">(<span class="type">int</span> even)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;even;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(is_prime(i))&#123;<span class="comment">//若第一个加数是质数，就继续判断第二个</span></span><br><span class="line">                <span class="keyword">if</span>(is_prime(even-i))&#123;<span class="comment">//若第二个加数也是质数，就打印出来</span></span><br><span class="line">                    System.out.println(even+<span class="string">&quot;=&quot;</span>+i+<span class="string">&quot;+&quot;</span>+(even-i));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否是质数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">is_prime</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=Math.sqrt(number);i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(number%i==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C44.jpg" alt="运行结果44"></p><h3 id="45-判断一个素数能被几个9整除"><a href="#45-判断一个素数能被几个9整除" class="headerlink" title="45.判断一个素数能被几个9整除"></a>45.判断一个素数能被几个9整除</h3><p>题目：判断一个素数能被几个9整除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">   System.out.println(<span class="string">&quot;请输入一个素数&quot;</span>);</span><br><span class="line">   <span class="type">int</span> num= reader.nextInt();</span><br><span class="line">   <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">if</span>(is_prime(num))&#123;</span><br><span class="line">       <span class="keyword">if</span>(num&gt;=<span class="number">0</span>&amp;&amp;num&lt;<span class="number">9</span>)System.out.println(<span class="string">&quot;这个素数能被0个9整除&quot;</span>);</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">while</span>(num&gt;=<span class="number">9</span>)&#123;</span><br><span class="line">               <span class="keyword">if</span>(num%<span class="number">9</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                   num/=<span class="number">9</span>;</span><br><span class="line">                   sum++;</span><br><span class="line">               &#125;</span><br><span class="line">              <span class="keyword">else</span>&#123;</span><br><span class="line">                  System.out.println(<span class="string">&quot;这个数不能被9整除&quot;</span>);</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println(<span class="string">&quot;这个素数能被&quot;</span>+sum+<span class="string">&quot;个9整除&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入素数&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否为素数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">is_prime</span><span class="params">(<span class="type">int</span> num)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=Math.sqrt(num);i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(num%i==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C45.jpg" alt="运行结果45"><br>(至今未搞懂这题意义何在😅)</p><h3 id="46-两个字符串连接程序"><a href="#46-两个字符串连接程序" class="headerlink" title="46.两个字符串连接程序"></a>46.两个字符串连接程序</h3><p>题目：两个字符串连接程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入第一个字符串&quot;</span>);</span><br><span class="line">    String s1= reader.nextLine();</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入第二个字符串&quot;</span>);</span><br><span class="line">    String s2=reader.nextLine();</span><br><span class="line">    String s=s1+s2;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C46.jpg" alt="运行结果46"></p><h3 id="47-程序打印出该值个数的＊"><a href="#47-程序打印出该值个数的＊" class="headerlink" title="47.程序打印出该值个数的＊"></a>47.程序打印出该值个数的＊</h3><p>题目：读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的*。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入0~50中的第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;个数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> n= reader.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">0</span>||n&gt;<span class="number">50</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C47.jpg" alt="运行结果47"></p><h3 id="48-某个公司采用公用电话传递数据"><a href="#48-某个公司采用公用电话传递数据" class="headerlink" title="48.某个公司采用公用电话传递数据"></a>48.某个公司采用公用电话传递数据</h3><p>题目：某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    Scanner reader=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">   System.out.println(<span class="string">&quot;请输入原密码&quot;</span>);</span><br><span class="line">   <span class="type">int</span> arr[]=<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">4</span>];</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;请输入第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;位&quot;</span>);</span><br><span class="line">       arr[i]= reader.nextInt();</span><br><span class="line">   &#125;</span><br><span class="line">   System.out.println(<span class="string">&quot;加密后的密码是&quot;</span>+ Arrays.toString(encryption(arr)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加密过程</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] encryption(<span class="type">int</span>[] arr)&#123;</span><br><span class="line">     <span class="type">int</span> n= arr.length;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">         arr[i]+=<span class="number">5</span>;</span><br><span class="line">         arr[i]%=<span class="number">10</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="type">int</span> temp1=arr[<span class="number">0</span>];</span><br><span class="line">     arr[<span class="number">0</span>]=arr[<span class="number">3</span>];</span><br><span class="line">     arr[<span class="number">3</span>]=temp1;</span><br><span class="line">     <span class="type">int</span> temp2=arr[<span class="number">1</span>];</span><br><span class="line">     arr[<span class="number">1</span>]=arr[<span class="number">2</span>];</span><br><span class="line">     arr[<span class="number">2</span>]=temp2;</span><br><span class="line">     <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/assets/1%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C48.jpg" alt="运行结果48"></p><h3 id="49-计算字符串中子串出现的次数"><a href="#49-计算字符串中子串出现的次数" class="headerlink" title="49.计算字符串中子串出现的次数"></a>49.计算字符串中子串出现的次数</h3><p>题目：计算字符串中子串出现的次数</p><ol><li>使用String类的substring(indexStart,indexEnd)方法；<br>截取从indexStart到indexEnd（包括indexStart，不包括indexEnd；即含头不含尾、或左闭右开区间内的子字符串。</li></ol><blockquote><p>例子：<br>    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;0123456789&quot;</span>;</span><br><span class="line">System.out.println(str.substring(<span class="number">1</span>, <span class="number">3</span>));</span><br></pre></td></tr></table></figure><br>输出结果为12.截取字符串str第1个位置到第3个位置之间的子字符串，含头不含尾，即包含第1个位置，而不包含第3个位置，因此结果为第12。</p></blockquote><blockquote><p>关于substring(indexStart,indexEnd)方法的补充说明：<br>1、如果indexStart等于indexEnd，substring()方法返回一个空字符串；<br>2、如果任一参数小于0，则被当做0；<br>3、如果任一参数大于str.lengtn()，则被当做str.lengtn()。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> num=getMaches(<span class="string">&quot;abcabcabcabcca&quot;</span>,<span class="string">&quot;ca&quot;</span>);</span><br><span class="line">    System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMaches</span><span class="params">(String str,String substr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;str.length()+<span class="number">1</span>-substr.length();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str.substring(i,i+substr.length()).equals(substr))&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：4<br>2. 使用String类的indexOf()方法</p><blockquote><p>1、 indexOf(String str): 返回指定字符str在字符串中（方法调用者）第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。<br>2、indexOf(String str, int index): 返回从 index 位置开始查找指定字符str在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。<br>例子<br>    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;01234567890123456789&quot;</span>;</span><br><span class="line">System.out.println(str.indexOf(<span class="string">&quot;123&quot;</span>));</span><br><span class="line">System.out.println(str.indexOf(<span class="string">&quot;123&quot;</span>,<span class="number">5</span>));</span><br></pre></td></tr></table></figure><br>运行结果为1和11</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> num=getMaches(<span class="string">&quot;abcabcabcabcca&quot;</span>,<span class="string">&quot;ca&quot;</span>);</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMaches</span><span class="params">(String str,String substr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(str.indexOf(substr,i)!=-<span class="number">1</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            i=str.indexOf(substr,i)+substr.length();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：4</p><h3 id="50-分数存放在磁盘文件-“stud-“中"><a href="#50-分数存放在磁盘文件-“stud-“中" class="headerlink" title="50.分数存放在磁盘文件 “stud “中"></a>50.分数存放在磁盘文件 “stud “中</h3><p>题目：有五个学生，每个学生有3门课的成绩，从键盘输入以上数据（包括学生号，姓名，三门课成绩），计算出平均成绩，况原有的数据和计算出的平均分数存放在磁盘文件 “stud “中。</p>]]></content>
      
      
      <categories>
          
          <category> 算法入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dev C++的下载、安装和使用</title>
      <link href="/2022/07/17/dev-c-de-xia-zai-an-zhuang-he-shi-yong/"/>
      <url>/2022/07/17/dev-c-de-xia-zai-an-zhuang-he-shi-yong/</url>
      
        <content type="html"><![CDATA[<p></font><font color=#008000>（如有任何问题，欢迎评论区留言，或直接联系作者）</font><br>教程参考网址<br><a href="https://www.bilibili.com/video/BV13b411h7st?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=be8cd0f74e8c584396dd0d3cbd8fb8cd">bilibili5分钟教程</a></p><h3 id="1-软件介绍及下载地址"><a href="#1-软件介绍及下载地址" class="headerlink" title="1. 软件介绍及下载地址"></a>1. 软件介绍及下载地址</h3><p>Dev-C++（或者叫做 Dev-Cpp）是 Windows 环境下的一个轻量级 C&#x2F;C++ 集成开发环境（IDE），是一个可视化集成开发环境。</p><p><a href="https://pan.baidu.com/s/1GMPgMSzScWL16p9MxNkU7g?pwd=t2ne">百度网盘下载地址</a><br><img src="/assets/%EF%BC%88dev%EF%BC%891.jpg" alt="下载"><br>（会有些慢，耐心等待一会儿，心急吃不了热豆腐）</p><p>(或者下面这个，不过太慢了<strong>不推荐</strong>)<br><a href="sourceforge.net/projects/orwelldevcpp/">下载网址</a></p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><p><img src="/assets/%EF%BC%88dev%EF%BC%892.jpg" alt="下载完成界面"><br><img src="/assets/%EF%BC%88dev%EF%BC%893.jpg" alt="安装它"><br><img src="/assets/%EF%BC%88dev%EF%BC%894.jpg" alt="语言默认英语"><br><img src="/assets/%EF%BC%88dev%EF%BC%895.jpg" alt="默认选项就可以了"><br><img src="/assets/%EF%BC%88dev%EF%BC%896.jpg" alt="默认安装在C盘"><br><img src="/assets/%EF%BC%88dev%EF%BC%897.jpg" alt="默默等它安装完成再点finish就ok啦"></p><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h3><p><img src="/assets/%EF%BC%88dev%EF%BC%898.jpg" alt="新建项目"><br>打开Dev-C++,按照图中新建一个项目<br><img src="/assets/%EF%BC%88dev%EF%BC%899.jpg" alt="新建一个C语言项目"></p><p><img src="/assets/%EF%BC%88dev%EF%BC%8911.jpg" alt="写一个最简单的代码"></p><p><img src="/assets/%EF%BC%88dev%EF%BC%8912.jpg" alt="编译运行它"><br>直接按下F11键也可以</p><p><img src="/assets/%EF%BC%88dev%EF%BC%8913.jpg" alt="给你的源代码一个存放的位置"><br>比如我就放在桌面</p><p><img src="/assets/%EF%BC%88dev%EF%BC%8914.jpg" alt="运行结果"></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速排序</title>
      <link href="/2022/07/15/kuai-su-pai-xu/"/>
      <url>/2022/07/15/kuai-su-pai-xu/</url>
      
        <content type="html"><![CDATA[<p><img src="/assets/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.gif" alt="快速排序"></p>]]></content>
      
      
      <categories>
          
          <category> 算法入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语语法</title>
      <link href="/2022/07/08/xiao-sheng-chu-ying-yu/"/>
      <url>/2022/07/08/xiao-sheng-chu-ying-yu/</url>
      
        <content type="html"><![CDATA[<p><strong>声明</strong>：本博客内容摘抄自扇贝四六级备考课堂，仅作为个人学习使用，不可用于商业用途，如果构成侵权行为，请联系我删除博文。</p><h1 id="一-五种基本句型"><a href="#一-五种基本句型" class="headerlink" title="一. 五种基本句型"></a>一. 五种基本句型</h1><p>归根结底，英文句子有其内在的规律:一个英语句子，不论长或短、简单或复杂，无外乎都是由八种成分所组成的，它们分别是主语、谓语、表语、宾语、宾语补足语(简称宾补) 、定语、状语和同位语。</p><p>对于前面五种成分，我们更习惯将其称之为句子的主干成分，它们是构成一个完整的句子所必须的;<br>对于后面三种成分，我们更习惯将其称之为句子的枝干成分，它们只起修饰的作用，即使去掉，也不会影响句子结构的完整性。</p><p>基于五种主干成分，英语句子通常可以划分为五种不同的类型，也就是我们所说的简单句的五种基本句型。关于五种句型的基本结构，我们先来仔细阅读下面这个完美的[LoveStory]，这个爱情故事没有狗血的剧情，只有五个简短的句子，每一个句子代表一种简单句的基本句型:</p><blockquote><ol><li>Nick met Elsa.尼克邂逅了艾尔莎。</li><li>They dated.他们约会了。</li><li>Nick bought EIsa a ring.尼克送给艾尔莎一枚戒指。</li><li>His proposal made Elsa happy.他的求婚令艾尔莎喜出望外。</li><li>They were a perfect match.他们是完美的一对。</li></ol></blockquote><p>现在我们来简单地分析一下上面的这些句子，以句子中的动词为分界线，我们可以把这些句子分割成两部分，即主语部分和谓语部分，见下表:</p><table><thead><tr><th>主语部分</th><th>谓语部分</th></tr></thead><tbody><tr><td>Nick</td><td><strong>met</strong> Elsa</td></tr><tr><td>They</td><td><strong>dated</strong></td></tr><tr><td>Nick</td><td><strong>bought</strong> EIsa a ring</td></tr><tr><td>His proposal</td><td><strong>made</strong> Elsa happy</td></tr><tr><td>They</td><td><strong>were</strong> a perfect match</td></tr></tbody></table><p>从以上的表格我们发现:<br></font><font color=#008000>1. 主语部分通常由名词、代词或者名词短语构成，来表明我们要陈述的对象，即为<strong>主语</strong>。<br>2. 主语后面则为动词，如: met, dated,bought, made, were (均为动词过去式) ，来说明主语做什么，或者是描述主语的状况，即为<strong>谓语部分</strong>。</font></p><p>紧接着，我们将谓语部分进行进一步的细分：</p><table><thead><tr><th>主语</th><th>谓语动词</th><th>其他成分</th><th>五种句型</th></tr></thead><tbody><tr><td>Nick</td><td>met(及物动词)</td><td>Elsa.（宾语）</td><td>①主语+谓语+宾</td></tr><tr><td>They</td><td>date.(不及物动词)</td><td></td><td>②主语+谓语</td></tr><tr><td>Nick</td><td>bought（双宾语动词）</td><td>Elsa (间接宾语) a ring.（直接宾语）</td><td>③主语+谓语+间接宾</td></tr><tr><td>His proposal</td><td>made（宾补动词）</td><td>Elsa (宾语)     happy.（宾语补足语）</td><td>④主语+谓语+宾语+宾语补足语</td></tr><tr><td>They</td><td>were（系动词）</td><td>a perfect match.（表语）</td><td>⑤主语+谓语+表语</td></tr></tbody></table><p>通过以上表格的分析，我们可以看到英文中五种基本句型，它们之所以有的可以接宾语，有的可以接双宾或者是宾语补足语，关键是在于谓语动词。因此，我们可以说，动词构成一个句子的骨架结构。接下来，我们将对每一种句型进行详细的讲解，大家需要注意每一种句型谓语动词的特点。</p><h3 id="①主语-谓语-宾语-S-V-O"><a href="#①主语-谓语-宾语-S-V-O" class="headerlink" title="①主语+谓语+宾语(S+V+O)"></a>①主语+谓语+宾语(S+V+O)</h3><p></font><font color=Blue> 例句①</font></p><blockquote><p>Nick met Elsa.尼克邂逅了艾尔莎</p></blockquote><p>句子的动词为met，表示“遇见”，发出这个动作的人是句首的Nick，它是动词动作的陈述对象，在语法上我们把它称为<strong>主语</strong>。而名词Elsa则为动作met的作用对象，在语法上我们把它称为<strong>宾语</strong>。所以这是一个典型的<strong>主谓宾结构</strong>。句子的意思完整。<br>此句型的谓语动词是<strong>及物动词(transitiveverb)，</strong>在英文中 我们学习的绝大部分动词都为及物动词，在词典中标注为vt.。这种动词往往会告诉我们主语所发出的动作的作用对象是什么，这里作用的对象即为宾语，所以及物动词后面往往是带宾语的。</p><h3 id="②主语-谓语-S-V"><a href="#②主语-谓语-S-V" class="headerlink" title="②主语+谓语(S+V)"></a>②主语+谓语(S+V)</h3><p></font><font color=Blue> 例句②</font></p><blockquote><p>They dated.他们约会了。</p></blockquote><p>句子的动词为date，表示“约会”，发出这个动作的是主语they。所以这是一个典型的<strong>主谓结构</strong>。这里的动词date是一个不 及物动词，也就是说，约会这个动作是主语’they”他们自主完成的，并没有任何作用的对象。你想想他们两个人约会还来个第三者的话，你们觉得这样合适吗?肯定不合适对吧。此句型的谓语动词是<strong>不及物动词(intransitive verb)，</strong>在词典中标注为vi.因为不及物动词所表示的动作没有作用对象，其本身意思完整，故其后不接宾语。</p><h3 id="③主语-谓语-间接宾语-直接宾语-S-V-O-O"><a href="#③主语-谓语-间接宾语-直接宾语-S-V-O-O" class="headerlink" title="③主语+谓语+间接宾语+直接宾语(S+V+O+O)"></a>③主语+谓语+间接宾语+直接宾语(S+V+O+O)</h3><p></font><font color=Blue> 例句③</font></p><blockquote><p>Nick bought EIsa a ring.尼克送给艾尔莎一枚戒指。</p></blockquote><p>动词为bought,表示“买”的意思， 发出“买”这个动作的是句子的主语Nick,并且动词后面接了两个名词，EIsa和ring。我们“买”肯定是买戒指，所以名词ring才是动作作用的对象，是动作的承受者，在语法上我们称为<strong>直接宾语</strong>; “买戒指送给Elsa”,所以Elsa则为动作的接受者，在语法上我们称为<strong>间接宾语</strong>。一个动词后面接两个宾语，这就是一个典型的<strong>主谓双宾</strong>的句型。此句型的谓语动词是<strong>双宾动词(dative&#x2F;erb)，</strong> 顾名思义,这种动词后面通常需要接双宾语，即后面所接的成分即有[人]也有[物]。一般而言，这里的[人]通常指动作的接受者，称作间接宾语。[物] 通常指动作作用的对象，是动作的承受者，称作直接宾语。</p><h3 id="④主语-谓语-宾语-宾语补足语-S-V-O-C"><a href="#④主语-谓语-宾语-宾语补足语-S-V-O-C" class="headerlink" title="④主语+谓语+宾语+宾语补足语(S+V+O+C)"></a>④主语+谓语+宾语+宾语补足语(S+V+O+C)</h3><p></font><font color=Blue>例句④</font></p><blockquote><p>His proposal made Elsa happy.他的求婚令艾尔莎喜出望外。</p></blockquote><p>句子的谓语动词为made,动词后面接了名词EIsa和形容词happy。如果我们只说”hisproposal made EIsa”, 就表示“他的求婚使得艾尔莎”，很显然这个句子的意思是不完整的。于是，我们在Elsa后面接了一个形容词happy,来对宾语EIsa作进一步的补充说明。那在语法.上我们把这个形容词叫做<strong>宾语补足语</strong>，所以这是一个典型的<strong>主谓宾宾语补足语</strong>的句型。此句型的谓语动词是<strong>宾补动词(factitiveverb)，</strong>这种动词后面需要接宾语，并且宾语后面还需要接能补充说明宾语的补足语，使其意思完整。那<strong>宾语+宾语补足语</strong>这种结构我们又称为<strong>复合宾语</strong>。大家注意区分基本句型③中的双宾语和基本句型④中的复合宾语。其实，区分这两种宾语结构的方法很简单，就是在宾语的后面加上一个be动词，若能够构成-一个语义通顺的句子，则为宾语补足语。比如，在句型③的例句中，在宾语的后面加上一个be动词就变成了[EIsa isring]，语义不通顺，故为双宾语结构;在句型④的例句中则变为[EIsis happy]， 其语义通顺，故为复合宾语结构。</p><h3 id="⑤主语-谓语-表语-S-V-P"><a href="#⑤主语-谓语-表语-S-V-P" class="headerlink" title="⑤主语+谓语+表语(S+V+P)"></a>⑤主语+谓语+表语(S+V+P)</h3><p></font><font color=Blue>例句⑤</font></p><blockquote><p>They were a perfect match.他们是完美的一对。</p></blockquote><p>这里的动词为were,属于be动词，they 为句子的主语，也就是说“他们是怎么样的”。后面接了一个名词短语”a perfect match”来补充主语的特征，使句意完整。此句型的谓语动词是系动词(包 括be动词和其他系动词)， 又称为<strong>联系动词(linkingverb)，</strong> 顾名思义，这种动作只起连接的作用，而其本身并不表示具体的动作。故系动词后面所接的成分往往是用来说明主语的特点或者性质，我们将其称为<strong>主语补足语</strong>，或者是<strong>表语</strong>。</p><p>至此，我们就把简单句的五大基本句型弄清楚了，需要注意的是五大句型结构的不同完全是由谓语动词决定的。英文中各种其他复杂的句子均是由这五大句型通过并列、扩充、省略以及倒装等形式变化而来的，所以说五大句型是我们构造和解读英语句子的基础和关键。</p><p></font><font color=#008000>学完这一课你应该回答出以下问题</font> 🧚🧚</p><blockquote><ol><li>英语的五种基本句型是什么？</li><li>每种句型有什么特点？请分别用每一种句型造句，用中文也可以。</li></ol></blockquote><h1 id="二-简单句基本句型（进阶）"><a href="#二-简单句基本句型（进阶）" class="headerlink" title="二. 简单句基本句型（进阶）"></a>二. 简单句基本句型（进阶）</h1><p>我们实际看到的很多句子，往往都是在简单句的基础之上,借助定语或者状语等枝干成分对某些主干成分再作进一步的修饰。首先，我们从简单的单词和词组来看，关于以上所提及到的八种成分可以分别有哪些词性的词来充当呢?因为所涉及的句子成分和词性比较的多，这里我们给大家总结了一张表格，我们一起来仔细看看这个表格，表格所反映的正是词性与句子成分之间的关系。</p><table><thead><tr><th>词性&#x2F;句子成分</th><th>主语</th><th>谓语</th><th>表语</th><th>宾语</th><th>宾补</th><th>定语</th><th>状语</th><th>同位语</th></tr></thead><tbody><tr><td>名词&#x2F;代词</td><td>√</td><td></td><td>√</td><td>√</td><td>√</td><td>√</td><td></td><td>√</td></tr><tr><td>动词</td><td></td><td>√</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>形容词</td><td></td><td></td><td>√</td><td></td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>副词</td><td></td><td></td><td></td><td></td><td></td><td></td><td>√</td><td></td></tr><tr><td>介词短语</td><td></td><td></td><td>√</td><td></td><td>√</td><td>√</td><td>√</td><td></td></tr></tbody></table><ul><li></font><font color=#008000>从表格的纵列来看，我们不难发现:谓语只能由动词来充当;主语、宾语和同位语一般由名词和代词来充当;状语可以由副词和介词短语来充当;表语、宾补和定语多由除动词和副词之外的其它四种词性充当。</li><li>从表格的横列来看，我们不难发现: 除了动词和副词能充当的成分比较单一之外，其它四种词性均可以在句中充当多种成分。</font></li></ul><p>好,我们弄明白了什么样的词性可以充当什么样的句子成分之后呢，现在，我们来将之前，所讲解的五大基本句型作进一步的扩 充，看看简单句是如何通过借助定语、状语和同位语这些枝干分来作进一步修饰的。 大家请先仔细阅读下面这个进阶版的【Seven-sentence Love Story】。</p><blockquote><p>①A handsome boy Nick met a beautifulgirl Elsa.②They dated frequently not long after that.③Suddenly one day, Nick bought EIsa an engagement ring.<br>④His proposal made EIsa extremely happy. ⑤She thought herself the happiestwoman.⑥Not surprisingly, this couple finally got married.⑦In many people’s<br>eyes, they were a perfect match for each other.</p></blockquote><p></font><font color=Blue>例句①</font><br>A handsome boy Nick met a beautiful girl Elsa.<br>帅气的男孩尼克邂逅了漂亮的女孩艾尔莎。</p><ul><li>主谓宾: A boy met a girl.</li><li>handsome &#x2F;beautiful为形容词作定语修饰名词boy&#x2F; girl</li><li>Nick&#x2F;EIsa为名词作同位语补充说明名词boy&#x2F; girl</li></ul><p></font><font color=Blue>例句②</font><br>They dated frequently not long after that.<br>不久以后他们开始频繁地约会。</p><ul><li>主谓: They dated.</li><li>frequently为副词修饰前面的动词date</li><li>not long after that为表示时间的副词短语</li></ul><p></font><font color=Blue>例句③</font><br>Nick bought EIsa an engagement ring.<br>尼克给艾尔莎买了一一个订婚戒指。</p><ul><li>主谓间宾直宾: Nick bought EIsa a ring.</li><li>engagement为名词作定语修饰名词ring</li></ul><p></font><font color=Blue>例句④</font><br>His proposal made EIsa extremely happy.<br>他的求婚令艾尔莎喜出望外。</p><ul><li>主谓宾宾补: His proposal made EIsa happy.</li><li>happy形容词作宾语补足语</li><li>extremely为副词修饰其后面的形容词happy</li></ul><p></font><font color=Blue>例句⑤</font><br>She thought herself the happiest woman.<br>她认为自己是最幸福的女人。</p><ul><li>主谓宾宾补: She thought herself a woman.</li><li>woman名词作宾语补足语</li><li>thehappiest形容词的最高级修饰其后面的名词woman</li></ul><p></font><font color=Blue>例句⑥</font><br>this couple finally got married.<br>这对恋人终于结婚了。</p><ul><li>主系表: this couple got married.</li><li>married形容词作表语</li><li>finally为 副词修饰动词got</li></ul><p></font><font color=Blue>例句⑦</font><br>they were a perfect match for each other.<br>他们真是天造地设的一对。</p><ul><li>主系表: they were a perfect match.</li><li>A perfect match名词短语作表语</li></ul><p>我们可以看出:通过单词或者短语来充当一定的句子成分，只能表达相对简单一点的意思;要想表达稍微复杂一点的意思时，我们就必须依靠一些其它结构来实现。 这里提到的其它结构主要有两大类:一类是非谓语动词，具体包括动词不定式、动名词和分词;另一类则是从句，具体包括名词性从句、定语从句和状语从句。</p><p>那这六种结构又可以分别充当哪些句子成分呢?大家请看下面这张表格:</p><table><thead><tr><th>词性&#x2F;句子成分</th><th>主语</th><th>表语</th><th>宾语</th><th>宾补</th><th>定语</th><th>状语</th><th>同位语</th></tr></thead><tbody><tr><td>动词不定式</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>动名词</td><td>√</td><td>√</td><td>√</td><td></td><td>√</td><td></td><td></td></tr><tr><td>分词</td><td></td><td>√</td><td></td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>状语从句</td><td></td><td></td><td></td><td></td><td></td><td>√</td><td></td></tr><tr><td>定语从句</td><td></td><td></td><td></td><td></td><td>√</td><td></td><td></td></tr><tr><td>名词性从句</td><td>√</td><td>√</td><td>√</td><td></td><td></td><td></td><td>√</td></tr></tbody></table><p>从表格的横列来看，我们不难发现:<br></font><font color=#008000> 1. 非谓语动词的三种形式，也就是动词不定式、动名词和分词，可以在句中充当多种不同的成分，用法十分灵活。<br>2. 名词性从句，顾名思义是指在句中起名词作用的句子。前面刚讲过，名词可以在句中充当主语、表语、宾语和同位语这四种成分，故而名词性从句也有主语从句、表语从句、宾语从句以及同位语从句之分。<br>3. 至于定语从句和状语从句，由于它们各自具有形容词和副词的性质，因此在句中只能分别充当定语和状语，这很容易理解。</font></p><p>因为关于非谓语动词和从句的内容比较多，之后具体的语法章节会给大家详细讲解，大家敬请期待。</p><p></font><font color=#008000>这一节课你应该……</font>🧚🧚</p><blockquote><p>我们在了解了简单句基本句型的基础之上，通过给简单句增加不同的修饰成分，包括单词、短语、非谓语动词以及从句，将简单句扩充为长句子。因此，无论是在之后的英语阅读还是写作中，我们既要学会如何快速拆分一个长句子的主干和修饰成分，也要学会如何正确地写出一个复杂的长句子。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java的垃圾收集机制</title>
      <link href="/2022/07/07/java-de-la-ji-shou-ji-ji-zhi/"/>
      <url>/2022/07/07/java-de-la-ji-shou-ji-ji-zhi/</url>
      
        <content type="html"><![CDATA[<h4 id="1-什么是垃圾收集机制？"><a href="#1-什么是垃圾收集机制？" class="headerlink" title="1. 什么是垃圾收集机制？"></a>1. 什么是垃圾收集机制？</h4><p>垃圾收集器是一种Java 内部机制，负责释放内存，即从内存中删除不必要的对象。它在System类中，即System.gc()。</p><h4 id="2-什么时候回收？"><a href="#2-什么时候回收？" class="headerlink" title="2. 什么时候回收？"></a>2. 什么时候回收？</h4><p>当一个对象的引用不存在时原本分配给这个对象的这块空间就应该被回收。分两种情况：<br>第一种，将对象的引用设置为null。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    Cat(String s)&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Cat cat=<span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;小花猫&quot;</span>);</span><br><span class="line">        cat=<span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种，一个类声明了两个对象a1和a2，再将a1的引用赋给a2,即a2&#x3D;a1,那么这两个对象就具有相同的引用，即占据同一块a1的内存，那么原本分配给a2的内存就应该被回收了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    Cat(String s)&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Cat cat1=<span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;橘猫&quot;</span>);</span><br><span class="line">        Cat cat2=<span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;中华田园猫&quot;</span>);</span><br><span class="line">        cat1=cat2;</span><br><span class="line">        System.out.println(cat1.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-垃圾收集器的特点？"><a href="#3-垃圾收集器的特点？" class="headerlink" title="3. 垃圾收集器的特点？"></a>3. 垃圾收集器的特点？</h4><p>在后台“移动”程序，类似扫地机，在程序运行时多次启动，因此不必显式调用它并给它命令。在垃圾收集器到达需要回收的对象时，就让对象调用finalize()方法。（finalize()方法来自于Object类，而这个类是所有类的祖先类，所以每个对象都有这个方法。就像equals(),  hashCode()和 toString()）但是它并不总是在对象被销毁之前被调用，举个例子：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Cat</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">int</span> num=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000000</span>;i++)&#123;</span><br><span class="line">            Cat cat=<span class="keyword">new</span> Cat();</span><br><span class="line">            cat=<span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">&quot;垃圾收集机制发挥作用的次数为： &quot;</span>+num);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">finalize</span>()throws Throwable</span>&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">&quot;这个猫对象被摧毁啦！&quot;</span>);</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看看它的结果<br><img src="/assets/laji.jpg" alt="结果"><br>代码已经覆盖了finalize方法，就是说，每执行一次，会打印出一句“这个猫对象被摧毁啦！”，并且num+1,理论上num应等于1000000才对，但实际上num&#x3D;187462,这意味着垃圾收集机制只执行了187462次。事实告诉我们这个东西并不可靠。</p><h4 id="4-怎么做？"><a href="#4-怎么做？" class="headerlink" title="4.怎么做？"></a>4.怎么做？</h4><p>不要依赖 finalize()释放关键资源的方法。 JVM 可能会调用它，也可能不会。垃圾回收器仅仅能做的是尽可能保证可用内存的使用效率，让可用内存得到高效的管理。程序员可以影响垃圾回收的执行，但不能控制。但当对象在其处于活动状态时拥有一些性能关键资源（例如，打开的数据库连接），则最好创建并显式调用特殊方法以在不再需要该对象时释放它们，以免造成内存泄漏。</p><ol><li>将无用对象设置为null；</li><li>System.gc();<br>虽然可以通过System.gc()来强制回收垃圾，但是这个命令下达后无法保证JVM会立即响应执行，但经验表明，下达命令后，会在短期内执行你的请求。</li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样清除讨厌的手机模拟大师？</title>
      <link href="/2022/07/07/zen-yang-qing-chu-tao-yan-de-shou-ji-mo-ni-da-shi/"/>
      <url>/2022/07/07/zen-yang-qing-chu-tao-yan-de-shou-ji-mo-ni-da-shi/</url>
      
        <content type="html"><![CDATA[<p>  手机模拟大师是鲁大师推出的在电脑上运行手机应用的软件，听起来很不错是吧？呵呵，这东西一旦下载了，就很难卸载掉，因为它会隐藏。你手机模拟大师打开文件所在位置，准备卸载它的时候，却发现，这玩意不见了！怎么办？别急，下面是卸载的方法。</p><ol><li>电脑右下角找到手机模拟大师运行图标，点击右键，选择“退出”；<br> <img src="/assets/sh1.jpg" alt="1"></li><li>然后点击我的电脑，在C盘中找到MobileEmuMaster文件夹。<br> <img src="/assets/sh2.jpg" alt="2"></li><li>双击进入MobileEmuMaster文件夹，找到“uninst.exe”文件，双击执行。<br> <img src="/assets/sh4.jpg" alt="3"></li><li>点击继续卸载。<br> <img src="/assets/sh5.jpg" alt="4"></li><li>找到右下角的“残忍卸载”，点击。<br> <img src="/assets/sh6.jpg" alt="5"></li><li>点击“我不要了”。<br> <img src="/assets/sh7.jpg" alt="6"></li><li>点击“反馈并卸载”。<br> <img src="/assets/sh8.jpg" alt="7"></li><li>等待进度完成。<br> <img src="/assets/sh9.jpg" alt="8"></li><li>点击“确认”，至此，卸载完成即可。<br> <img src="/assets/sh10.jpg" alt="9"></li></ol><p> 写在最后：对于我这种对游戏根本不care的人来说，是不可能下载这种东西的，至于它怎么跑到我电脑上的，说出来就很离谱。本来准备下载一个暴风影视5准备和舍友看马嘉祺，（额，舍友的目的是看马嘉祺，我的目的是看看我的电脑能不能放DVD😅）。然后吧，马嘉祺没看成，下载暴风影视顺便还送我了块牛皮糖👿。看着我的C盘的内存0.1G,0.1G的消失，我内心那个焦急啊！烦死了，以后再也不敢乱下东西了，然后疯狂百度……直到最后找到了这个卸载的方法。卸载完以后，整个世界瞬间就清净了。😄</p>]]></content>
      
      
      <categories>
          
          <category> 小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 流氓软件 </tag>
            
            <tag> 心情日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求1~100素数方法</title>
      <link href="/2022/07/04/qiu-su-shu-fang-fa/"/>
      <url>/2022/07/04/qiu-su-shu-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="1-试除法（直接上埃氏筛法，就是有根号那个）"><a href="#1-试除法（直接上埃氏筛法，就是有根号那个）" class="headerlink" title="1. 试除法（直接上埃氏筛法，就是有根号那个）"></a>1. 试除法（直接上埃氏筛法，就是有根号那个）</h2><p>一个数设为a，若它是合数，则a的公因数其中一个大于√a，那么另外一个就小于√a，要么就两个都等于√a；而素数只有它本身和1两个因数。在用试除法判断a是否为素数时，只用把a模上从2到√a，若结果出现0，直接跳出这个数的判断循环，紧接着下一个；若模到√a结果都不是0的话，a就是素数，这个时候被模的数就大于√a，根据这个标志就可以得到素数啦！（废话不多，上代码）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Prime</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">for</span>( j=<span class="number">2</span>;j&lt;Math.sqrt(i);j++)&#123;<span class="comment">//Math.sqrt(i)也可以改成i/2,下面也要一起改</span></span><br><span class="line">          <span class="keyword">if</span>(i%j==<span class="number">0</span>)&#123;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j&gt;Math.sqrt(i))</span><br><span class="line">          System.out.println(i);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-欧拉筛法"><a href="#2-欧拉筛法" class="headerlink" title="2. 欧拉筛法"></a>2. 欧拉筛法</h2><p>先假设每一个数都是素数，从2开始，看后面的每一个数是不是质数的倍数，若是，则筛去。由于每个数只会被筛一次，所以时间复杂度为O(n)。<br>假设这里有1至100的数字，1不是素数，那就从2开始，筛除（2<em>2，2</em>3，2<em>4……2</em>50(2<em>50)&gt;&#x3D;100），即筛出了除2以外2的倍数；到3，筛除（3</em>3,3<em>4,3</em>5……3<em>33（3</em>34&gt;100)），即筛除了3的倍数；以此类推，因为10*10&gt;&#x3D;100,所以筛到10的倍数就可以了！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">prime</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> array[]=<span class="keyword">new</span> <span class="title class_">int</span> [n];</span><br><span class="line">        <span class="type">boolean</span> is_prime[]=<span class="keyword">new</span> <span class="title class_">boolean</span>[n];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">           array[i]=i;</span><br><span class="line">           is_prime[i]=<span class="literal">true</span>;</span><br><span class="line">       &#125;<span class="comment">//先初始化数组，假设每一个数都是素数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i*i;j&lt;n;j+=i)&#123;<span class="comment">//j+=相当于j=i*(i+1),j=i*(i+2)……</span></span><br><span class="line">                is_prime[j]=<span class="literal">false</span>;<span class="comment">//筛除质数的倍数</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(is_prime[i])&#123;</span><br><span class="line">              System.out.println(array[i]);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="/2022/07/03/markdown-yu-fa/"/>
      <url>/2022/07/03/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<ol><li><p>在文章中插入图片</p><blockquote><p>![图片名称](图片路径)<br>例如：![photo](&#x2F;assets&#x2F;tupian.jpg)</p></blockquote></li><li><p>添加链接</p><blockquote><p>[链接名称](链接)<br>例如：[百度](<a href="https://baidu.com/">https://baidu.com\</a>)</p></blockquote></li><li><p>添加标题</p><blockquote><p># 一级标题<br>## 二级标题<br>……<br>###### 六级标题<br>（最多有六级标题哦！并且#号和标题之间要有空格）</p></blockquote></li><li><p>有序列表</p><blockquote><p>1.(空格)内容<br>例如1. 内容</p></blockquote></li><li><p>无序列表</p><blockquote><p>-(空格)内容<br>例如：- 内容</p></blockquote></li><li><p>强调</p><blockquote><p>*被强调内容*<br>例如：<em>被强调内容</em></p></blockquote></li><li><p>加粗</p><blockquote><p>**被加粗内容**<br>例如：<strong>被加粗内容</strong></p></blockquote></li><li><p>引用</p><blockquote><p>&gt;引用内容</p></blockquote></li><li><p>添加表情包<br>进入这个网址<a href="https://www.emojidaquan.com/">表情包大全</a>,点击想要的表情包（就相当于复制了），然后在你的文章中相应位置粘贴即可。</p></li><li><p>改变字体颜色<br><a href="http://t.zoukankan.com/liyuspace-p-8978139.html">常用十六进制颜色对照表代码查询</a></p><blockquote><p>格式：&lt;/font&gt;&lt;font color&#x3D;十六进制颜色代码 &gt;需要改变颜色的内容&lt;&#x2F;font&gt;<br>例如：</font><font color=#008000>绿色字体</font></p></blockquote></li></ol><p>更多语法内容，请参照<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用的几个命令</title>
      <link href="/2022/07/03/hexo-chang-yong-de-ji-ge-ming-ling/"/>
      <url>/2022/07/03/hexo-chang-yong-de-ji-ge-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>首先得在博客根目录下Git Bash Here</p><ol><li><blockquote><p>$ hexo s</p></blockquote></li></ol><p>启动本地服务器，可以预览博客效果，Ctrl+C结束</p><ol start="2"><li><blockquote><p>$hexo new “笔记标题”</p></blockquote></li></ol><p>新建一篇标题为“笔记标题”的文章</p><ol start="3"><li><blockquote><p>$hexo d</p></blockquote></li></ol><p>生成网站静态文件，并部署到设定的仓库，这样就相当于把网页公之于众</p><ol start="4"><li><blockquote><p>$ hexo clean</p></blockquote></li></ol><p>清楚缓存文件db.json和已生成的静态文件（网站显示异常时可以执行这条命令试试）</p><ol start="5"><li><blockquote><p>$hexo g</p></blockquote></li></ol><p>生成网站静态文件到默认设置的public文件夹。</p><ul><li>便于查看网站生成的静态文件或者手动部署网站；</li><li>如果使用自动部署，不需要先执行该命令；</li><li>hexo g 是 hexo generate 的缩写，命令效果一致。</li></ul><ol start="6"><li><blockquote><p>$hexo new page 标题</p></blockquote></li></ol><p>新建一个标题为“标题”的页面，默认链接地址为 主页地址&#x2F;标题&#x2F;</p><ul><li>标题可以为中文，但一般习惯用英文；</li><li>页面标题和文章一样可以随意修改；</li><li>页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。</li></ul><ol start="7"><li><blockquote><p>$ code .&#x2F;</p></blockquote></li></ol><p>打开整个项目</p>]]></content>
      
      
      <categories>
          
          <category> 博客入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随便聊一聊</title>
      <link href="/2022/07/03/sui-bian-liao-yi-liao/"/>
      <url>/2022/07/03/sui-bian-liao-yi-liao/</url>
      
        <content type="html"><![CDATA[<p>这几天有些郁闷，不知道是天气还是什么原因，总是睡不着。有很多想法，也有想实现的冲动，但是又被考试束缚了手脚。听朋友说博客很好用，可以把自己所学的东西放上去，而且还可以与各大网友共享，于是我就搭建了这个博客。由于忙着考试，正如你所看到的那样，这个博客还很简陋，后期我会美化它的！最后感谢你能在百忙之中能读完这篇文章，爱你！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 心情日记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
